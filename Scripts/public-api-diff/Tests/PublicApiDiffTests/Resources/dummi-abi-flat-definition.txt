import AdyenNetworking
import Contacts
import Darwin
import DeveloperToolsSupport
import Foundation
import Foundation
import Foundation
import Foundation
import PassKit
import QuartzCore
import SwiftOnoneSupport
import SwiftUI
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_spi(AdyenInternal) public enum AnalyticsFlavor
@_spi(AdyenInternal) public case components(type: Adyen.PaymentMethodType)
@_spi(AdyenInternal) public case dropIn(type: Swift.String, paymentMethods: [Swift.String])
@_spi(AdyenInternal) public var value: Swift.String { get }
@_spi(AdyenInternal) public protocol AnalyticsProviderProtocol
@_spi(AdyenInternal) public var checkoutAttemptId: Swift.String? { get }
@_spi(AdyenInternal) public func sendInitialAnalytics(
    with: Adyen.AnalyticsFlavor,
    additionalFields: Adyen.AdditionalAnalyticsFields?
) -> Swift.Void
@_spi(AdyenInternal) public func add(
    info: Adyen.AnalyticsEventInfo
) -> Swift.Void
@_spi(AdyenInternal) public func add(
    log: Adyen.AnalyticsEventLog
) -> Swift.Void
@_spi(AdyenInternal) public func add(
    error: Adyen.AnalyticsEventError
) -> Swift.Void
@_spi(AdyenInternal) public final class AnalyticsForSession
@_spi(AdyenInternal) public static var sessionId: Swift.String? { get set }
@_spi(AdyenInternal) public protocol AnalyticsEvent : Encodable
@_spi(AdyenInternal) public var timestamp: Swift.Int { get }
@_spi(AdyenInternal) public var component: Swift.String { get }
@_spi(AdyenInternal) public var id: Swift.String { get }
@_spi(AdyenInternal) public enum AnalyticsEventTarget : Encodable, Equatable, Hashable, RawRepresentable
@_spi(AdyenInternal) public case cardNumber
@_spi(AdyenInternal) public case expiryDate
@_spi(AdyenInternal) public case securityCode
@_spi(AdyenInternal) public case holderName
@_spi(AdyenInternal) public case dualBrand
@_spi(AdyenInternal) public case boletoSocialSecurityNumber
@_spi(AdyenInternal) public case taxNumber
@_spi(AdyenInternal) public case authPassWord
@_spi(AdyenInternal) public case addressStreet
@_spi(AdyenInternal) public case addressHouseNumber
@_spi(AdyenInternal) public case addressCity
@_spi(AdyenInternal) public case addressPostalCode
@_spi(AdyenInternal) public case issuerList
@_spi(AdyenInternal) public case listSearch
@_spi(AdyenInternal) public func init(
    rawValue: Swift.String
) -> Adyen.AnalyticsEventTarget?
@_spi(AdyenInternal) public typealias RawValue = Swift.String
@_spi(AdyenInternal) public var rawValue: Swift.String { get }
public struct AnalyticsConfiguration
public var isEnabled: Swift.Bool { get set }
@_spi(AdyenInternal) public var context: Adyen.AnalyticsContext { get set }
public func init(

) -> Adyen.AnalyticsConfiguration
@_spi(AdyenInternal) public struct AdditionalAnalyticsFields
@_spi(AdyenInternal) public let amount: Adyen.Amount? { get }
@_spi(AdyenInternal) public let sessionId: Swift.String? { get }
@_spi(AdyenInternal) public func init(
    amount: Adyen.Amount?,
    sessionId: Swift.String?
) -> Adyen.AdditionalAnalyticsFields
@_spi(AdyenInternal) public enum AnalyticsConstants
@_spi(AdyenInternal) public enum ValidationErrorCodes
@_spi(AdyenInternal) public static let cardNumberEmpty: Swift.Int { get }
@_spi(AdyenInternal) public static let cardNumberPartial: Swift.Int { get }
@_spi(AdyenInternal) public static let cardLuhnCheckFailed: Swift.Int { get }
@_spi(AdyenInternal) public static let cardUnsupported: Swift.Int { get }
@_spi(AdyenInternal) public static let expiryDateEmpty: Swift.Int { get }
@_spi(AdyenInternal) public static let expiryDatePartial: Swift.Int { get }
@_spi(AdyenInternal) public static let cardExpired: Swift.Int { get }
@_spi(AdyenInternal) public static let expiryDateTooFar: Swift.Int { get }
@_spi(AdyenInternal) public static let securityCodeEmpty: Swift.Int { get }
@_spi(AdyenInternal) public static let securityCodePartial: Swift.Int { get }
@_spi(AdyenInternal) public static let holderNameEmpty: Swift.Int { get }
@_spi(AdyenInternal) public static let brazilSSNEmpty: Swift.Int { get }
@_spi(AdyenInternal) public static let brazilSSNPartial: Swift.Int { get }
@_spi(AdyenInternal) public static let postalCodeEmpty: Swift.Int { get }
@_spi(AdyenInternal) public static let postalCodePartial: Swift.Int { get }
@_spi(AdyenInternal) public static let kcpPasswordEmpty: Swift.Int { get }
@_spi(AdyenInternal) public static let kcpPasswordPartial: Swift.Int { get }
@_spi(AdyenInternal) public static let kcpFieldEmpty: Swift.Int { get }
@_spi(AdyenInternal) public static let kcpFieldPartial: Swift.Int { get }
@_spi(AdyenInternal) public struct AnalyticsContext
@_spi(AdyenInternal) public func init(
    version: Swift.String = $DEFAULT_ARG,
    platform: Adyen.AnalyticsContext.Platform = $DEFAULT_ARG
) -> Adyen.AnalyticsContext
@_spi(AdyenInternal) public enum Platform : Equatable, Hashable, RawRepresentable
@_spi(AdyenInternal) public case iOS
@_spi(AdyenInternal) public case reactNative
@_spi(AdyenInternal) public case flutter
@_spi(AdyenInternal) public func init(
    rawValue: Swift.String
) -> Adyen.AnalyticsContext.Platform?
@_spi(AdyenInternal) public typealias RawValue = Swift.String
@_spi(AdyenInternal) public var rawValue: Swift.String { get }
@_spi(AdyenInternal) public struct AnalyticsEventError : AnalyticsEvent, Encodable
@_spi(AdyenInternal) public var id: Swift.String { get set }
@_spi(AdyenInternal) public var timestamp: Swift.Int { get set }
@_spi(AdyenInternal) public var component: Swift.String { get set }
@_spi(AdyenInternal) public var type: Adyen.AnalyticsEventError.ErrorType { get set }
@_spi(AdyenInternal) public var code: Swift.String? { get set }
@_spi(AdyenInternal) public var message: Swift.String? { get set }
@_spi(AdyenInternal) public enum ErrorType : Encodable, Equatable, Hashable, RawRepresentable
@_spi(AdyenInternal) public case network
@_spi(AdyenInternal) public case implementation
@_spi(AdyenInternal) public case internal
@_spi(AdyenInternal) public case api
@_spi(AdyenInternal) public case sdk
@_spi(AdyenInternal) public case thirdParty
@_spi(AdyenInternal) public case generic
@_spi(AdyenInternal) public func init(
    rawValue: Swift.String
) -> Adyen.AnalyticsEventError.ErrorType?
@_spi(AdyenInternal) public typealias RawValue = Swift.String
@_spi(AdyenInternal) public var rawValue: Swift.String { get }
@_spi(AdyenInternal) public func init(
    component: Swift.String,
    type: Adyen.AnalyticsEventError.ErrorType
) -> Adyen.AnalyticsEventError
@_spi(AdyenInternal) public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
@_spi(AdyenInternal) public struct AnalyticsEventInfo : AnalyticsEvent, Encodable
@_spi(AdyenInternal) public var id: Swift.String { get set }
@_spi(AdyenInternal) public var timestamp: Swift.Int { get set }
@_spi(AdyenInternal) public var component: Swift.String { get set }
@_spi(AdyenInternal) public var type: Adyen.AnalyticsEventInfo.InfoType { get set }
@_spi(AdyenInternal) public var target: Adyen.AnalyticsEventTarget? { get set }
@_spi(AdyenInternal) public var isStoredPaymentMethod: Swift.Bool? { get set }
@_spi(AdyenInternal) public var brand: Swift.String? { get set }
@_spi(AdyenInternal) public var issuer: Swift.String? { get set }
@_spi(AdyenInternal) public var validationErrorCode: Swift.String? { get set }
@_spi(AdyenInternal) public var validationErrorMessage: Swift.String? { get set }
@_spi(AdyenInternal) public enum InfoType : Encodable, Equatable, Hashable, RawRepresentable
@_spi(AdyenInternal) public case selected
@_spi(AdyenInternal) public case focus
@_spi(AdyenInternal) public case unfocus
@_spi(AdyenInternal) public case validationError
@_spi(AdyenInternal) public case rendered
@_spi(AdyenInternal) public case input
@_spi(AdyenInternal) public func init(
    rawValue: Swift.String
) -> Adyen.AnalyticsEventInfo.InfoType?
@_spi(AdyenInternal) public typealias RawValue = Swift.String
@_spi(AdyenInternal) public var rawValue: Swift.String { get }
@_spi(AdyenInternal) public func init(
    component: Swift.String,
    type: Adyen.AnalyticsEventInfo.InfoType
) -> Adyen.AnalyticsEventInfo
@_spi(AdyenInternal) public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
@_spi(AdyenInternal) public struct AnalyticsEventLog : AnalyticsEvent, Encodable
@_spi(AdyenInternal) public var id: Swift.String { get set }
@_spi(AdyenInternal) public var timestamp: Swift.Int { get set }
@_spi(AdyenInternal) public var component: Swift.String { get set }
@_spi(AdyenInternal) public var type: Adyen.AnalyticsEventLog.LogType { get set }
@_spi(AdyenInternal) public var subType: Adyen.AnalyticsEventLog.LogSubType? { get set }
@_spi(AdyenInternal) public var target: Adyen.AnalyticsEventTarget? { get set }
@_spi(AdyenInternal) public var message: Swift.String? { get set }
@_spi(AdyenInternal) public enum LogType : Encodable, Equatable, Hashable, RawRepresentable
@_spi(AdyenInternal) public case action
@_spi(AdyenInternal) public case submit
@_spi(AdyenInternal) public case redirect
@_spi(AdyenInternal) public case threeDS2
@_spi(AdyenInternal) public func init(
    rawValue: Swift.String
) -> Adyen.AnalyticsEventLog.LogType?
@_spi(AdyenInternal) public typealias RawValue = Swift.String
@_spi(AdyenInternal) public var rawValue: Swift.String { get }
@_spi(AdyenInternal) public enum LogSubType : Encodable, Equatable, Hashable, RawRepresentable
@_spi(AdyenInternal) public case threeDS2
@_spi(AdyenInternal) public case redirect
@_spi(AdyenInternal) public case voucher
@_spi(AdyenInternal) public case await
@_spi(AdyenInternal) public case qrCode
@_spi(AdyenInternal) public case bankTransfer
@_spi(AdyenInternal) public case sdk
@_spi(AdyenInternal) public case fingerprintSent
@_spi(AdyenInternal) public case fingerprintComplete
@_spi(AdyenInternal) public case challengeDataSent
@_spi(AdyenInternal) public case challengeDisplayed
@_spi(AdyenInternal) public case challengeComplete
@_spi(AdyenInternal) public func init(
    rawValue: Swift.String
) -> Adyen.AnalyticsEventLog.LogSubType?
@_spi(AdyenInternal) public typealias RawValue = Swift.String
@_spi(AdyenInternal) public var rawValue: Swift.String { get }
@_spi(AdyenInternal) public func init(
    component: Swift.String,
    type: Adyen.AnalyticsEventLog.LogType,
    subType: Adyen.AnalyticsEventLog.LogSubType? = $DEFAULT_ARG
) -> Adyen.AnalyticsEventLog
@_spi(AdyenInternal) public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
@_spi(AdyenInternal) public protocol AnalyticsValidationError : Error, LocalizedError, Sendable, ValidationError
@_spi(AdyenInternal) public var analyticsErrorCode: Swift.Int { get }
@_spi(AdyenInternal) public var analyticsErrorMessage: Swift.String { get }
@_spi(AdyenInternal) public struct LocalizationKey
@_spi(AdyenInternal) public static let submitButton: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let submitButtonFormatted: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cancelButton: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let dismissButton: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let removeButton: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let errorTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let errorUnknown: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let validationAlertTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let paymentMethodsOtherMethods: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let paymentMethodsStoredMethods: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let paymentMethodsPaidMethods: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let paymentMethodsTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let paymentMethodRemoveButton: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let paymentRefusedMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let sepaIbanItemTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let sepaIbanItemInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let sepaNameItemTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let sepaNameItemPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let sepaConsentLabel: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let sepaNameItemInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardStoreDetailsButton: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardNameItemTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardNameItemPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardNameItemInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardNumberItemTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardNumberItemPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardNumberItemInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardExpiryItemTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardExpiryItemTitleOptional: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardExpiryItemPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardExpiryItemInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardCvcItemInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardCvcItemTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardCvcItemPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardStoredTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardStoredMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardStoredExpires: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardNumberItemUnsupportedBrand: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardNumberItemUnknownBrand: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let dropInStoredTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let dropInPreselectedOpenAllTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let continueTo: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let continueTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let phoneNumberTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let phoneNumberInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let telephonePrefix: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let phoneNumberPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardCvcItemPlaceholderDigits: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let emailItemTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let emailItemPlaceHolder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let emailItemInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let moreOptions: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let applePayTotal: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let mbwayConfirmPayment: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let awaitWaitForConfirmation: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let blikConfirmPayment: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let blikInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let blikCode: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let blikHelp: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let blikPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let preauthorizeWith: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let confirmPreauthorization: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardCvcItemTitleOptional: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let confirmPurchase: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let lastName: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let firstName: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardPinTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let missingField: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardApplyGiftcard: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let voucherCollectionInstitutionNumber: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let voucherMerchantName: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let voucherExpirationDate: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let voucherPaymentReferenceLabel: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let voucherShopperName: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let buttonCopy: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let voucherIntroduction: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let voucherReadInstructions: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let voucherSaveImage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let voucherFinish: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardBrazilSSNPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let amount: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let voucherEntity: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let pixInstructions: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let pixExpirationLabel: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let pixCopyButton: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let pixInstructionsCopiedMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let billingAddressSectionTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let billingAddressPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let deliveryAddressSectionTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let deliveryAddressPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let countryFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let countryFieldPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let countryFieldInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let addressFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let addressFieldPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let streetFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let streetFieldPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let houseNumberFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let houseNumberFieldPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cityFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cityFieldPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cityTownFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cityTownFieldPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let postalCodeFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let postalCodeFieldPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let zipCodeFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let zipCodeFieldPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let stateFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let stateFieldPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let selectStateFieldPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let stateOrProvinceFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let stateOrProvinceFieldPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let selectStateOrProvinceFieldPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let provinceOrTerritoryFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let provinceOrTerritoryFieldPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let apartmentSuiteFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let apartmentSuiteFieldPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let errorFeedbackEmptyField: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let errorFeedbackIncorrectFormat: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let fieldTitleOptional: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let boletobancarioBtnLabel: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let boletoSendCopyToEmail: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let boletoPersonalDetails: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let boletoSocialSecurityNumber: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let boletoDownloadPdf: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let giftcardCurrencyError: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let giftcardNoBalance: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let giftcardRemoveTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let giftcardRemoveMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let giftcardPaymentMethodTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let partialPaymentRemainingBalance: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let partialPaymentPayRemainingAmount: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardTaxNumberLabel: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardTaxNumberPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardTaxNumberInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardEncryptedPasswordLabel: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardEncryptedPasswordPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardEncryptedPasswordInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardTaxNumberLabelShort: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let affirmDeliveryAddressToggleTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let voucherShopperReference: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let voucherAlternativeReference: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardInstallmentsNumberOfInstallments: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardInstallmentsOneTime: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardInstallmentsTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardInstallmentsRevolving: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardInstallmentsMonthsAndPrice: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardInstallmentsMonths: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cardInstallmentsPlan: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let bacsHolderNameFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let bacsBankAccountNumberFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let bacsBankLocationIdFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let bacsLegalConsentToggleTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let bacsAmountConsentToggleTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let bacsSpecifiedAmountConsentToggleTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let bacsHolderNameFieldInvalidMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let bacsBankAccountNumberFieldInvalidMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let bacsBankLocationIdFieldInvalidMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let bacsPaymentButtonTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let bacsDownloadMandate: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let achBankAccountTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let achAccountHolderNameFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let achAccountHolderNameFieldInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let achAccountNumberFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let achAccountNumberFieldInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let achAccountLocationFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let achAccountLocationFieldInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let selectFieldTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let onlineBankingTermsAndConditions: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let qrCodeInstructionMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let qrCodeTimerExpirationMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let paybybankSubtitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let paybybankTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let searchPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let upiModeSelection: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let UPIVpaValidationMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let UPIQrcodeGenerationMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let UPIQrcodeTimerMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let upiCollectConfirmPayment: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let upiVpaWaitingMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let QRCodeGenerateQRCode: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let UPIQRCodeInstructions: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let UPIFirstTabTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let UPISecondTabTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let UPICollectDropdownLabel: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let UPICollectFieldLabel: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let UPIErrorNoAppSelected: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cashAppPayTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let cashAppPayCashtag: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let twintNoAppsInstalledMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DARegistrationTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DABiometrics: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAFaceID: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DATouchID: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAOpticID: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DARegistrationDescription: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DARegistrationFirstInfo: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DARegistrationSecondInfo: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DARegistrationThirdInfo: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DARegistrationPositiveButton: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DARegistrationNegativeButton: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAApprovalTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAApprovalDescription: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAApprovalPositiveButton: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAApprovalNegativeButton: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAApprovalActionSheetTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAApprovalActionSheetFallback: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAApprovalActionSheetRemove: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAApprovalRemoveAlertTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAApprovalRemoveAlertDescription: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAApprovalRemoveAlertPositiveButton: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAApprovalRemoveAlertNegativeButton: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAApprovalErrorTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAApprovalErrorMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DAApprovalErrorButtonTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DARegistrationErrorTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DARegistrationErrorMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DARegistrationErrorButtonTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DADeletionConfirmationTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DADeletionConfirmationMessage: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let threeds2DADeletionConfirmationButtonTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let pickerSearchEmptyTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let pickerSearchEmptySubtitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let addressLookupSearchPlaceholder: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let addressLookupSearchEmptyTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let addressLookupSearchEmptySubtitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let addressLookupSearchEmptyTitleNoResults: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let addressLookupSearchEmptySubtitleNoResults: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let addressLookupItemValidationFailureMessageEmpty: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let addressLookupItemValidationFailureMessageInvalid: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let addressLookupSearchManualEntryItemTitle: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public static let accessibilityLastFourDigits: Adyen.LocalizationKey { get }
@_spi(AdyenInternal) public func init(
    key: Swift.String
) -> Adyen.LocalizationKey
public protocol AdyenContextAware
public var context: Adyen.AdyenContext { get }
public var payment: Adyen.Payment? { get }
public struct APIContext : AnyAPIContext
public var queryParameters: [Foundation.URLQueryItem] { get }
public let headers: [Swift.String : Swift.String] { get }
public let environment: any AdyenNetworking.AnyAPIEnvironment { get }
public let clientKey: Swift.String { get }
public func init(
    environment: any AdyenNetworking.AnyAPIEnvironment,
    clientKey: Swift.String
) throws -> Adyen.APIContext
@_spi(AdyenInternal) public enum AnalyticsEnvironment : AnyAPIEnvironment, Equatable, Hashable, RawRepresentable
@_spi(AdyenInternal) public case test
@_spi(AdyenInternal) public case liveEurope
@_spi(AdyenInternal) public case liveAustralia
@_spi(AdyenInternal) public case liveUnitedStates
@_spi(AdyenInternal) public case liveApse
@_spi(AdyenInternal) public case liveIndia
@_spi(AdyenInternal) public case beta
@_spi(AdyenInternal) public case local
@_spi(AdyenInternal) public var baseURL: Foundation.URL { get }
@_spi(AdyenInternal) public func init(
    rawValue: Swift.String
) -> Adyen.AnalyticsEnvironment?
@_spi(AdyenInternal) public typealias RawValue = Swift.String
@_spi(AdyenInternal) public var rawValue: Swift.String { get }
public struct Environment : AnyAPIEnvironment, Equatable
public var baseURL: Foundation.URL { get set }
public static let test: Adyen.Environment { get }
@_spi(AdyenInternal) public static let beta: Adyen.Environment { get }
@_spi(AdyenInternal) public static let local: Adyen.Environment { get }
public static let live: Adyen.Environment { get }
public static let liveEurope: Adyen.Environment { get }
public static let liveAustralia: Adyen.Environment { get }
public static let liveUnitedStates: Adyen.Environment { get }
public static let liveApse: Adyen.Environment { get }
public static let liveIndia: Adyen.Environment { get }
@_spi(AdyenInternal) public var isLive: Swift.Bool { get }
@_spi(AdyenInternal) public static func __derived_struct_equals(
    _: Adyen.Environment,
    _: Adyen.Environment
) -> Swift.Bool
@_spi(AdyenInternal) public protocol APIRequest : Encodable, Request
@_spi(AdyenInternal) public struct AppleWalletPassRequest : APIRequest, Encodable, Request
@_spi(AdyenInternal) public typealias ResponseType = Adyen.AppleWalletPassResponse
@_spi(AdyenInternal) public let path: Swift.String { get }
@_spi(AdyenInternal) public var counter: Swift.UInt { get set }
@_spi(AdyenInternal) public let headers: [Swift.String : Swift.String] { get }
@_spi(AdyenInternal) public let queryParameters: [Foundation.URLQueryItem] { get }
@_spi(AdyenInternal) public let method: AdyenNetworking.HTTPMethod { get }
@_spi(AdyenInternal) public let platform: Swift.String { get }
@_spi(AdyenInternal) public let passToken: Swift.String { get }
@_spi(AdyenInternal) public func init(
    passToken: Swift.String
) -> Adyen.AppleWalletPassRequest
@_spi(AdyenInternal) public enum CodingKeys : CodingKey, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, Sendable
@_spi(AdyenInternal) public case platform
@_spi(AdyenInternal) public case passToken
@_spi(AdyenInternal) public static func __derived_enum_equals(
    _: Adyen.AppleWalletPassRequest.CodingKeys,
    _: Adyen.AppleWalletPassRequest.CodingKeys
) -> Swift.Bool
@_spi(AdyenInternal) public func hash(
    into: Swift.Hasher
) -> Swift.Void
@_spi(AdyenInternal) public func init(
    stringValue: Swift.String
) -> Adyen.AppleWalletPassRequest.CodingKeys?
@_spi(AdyenInternal) public func init(
    intValue: Swift.Int
) -> Adyen.AppleWalletPassRequest.CodingKeys?
@_spi(AdyenInternal) public var hashValue: Swift.Int { get }
@_spi(AdyenInternal) public var intValue: Swift.Int? { get }
@_spi(AdyenInternal) public var stringValue: Swift.String { get }
@_spi(AdyenInternal) public typealias ErrorResponseType = Adyen.APIError
@_spi(AdyenInternal) public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
@_spi(AdyenInternal) public struct ClientKeyRequest : APIRequest, Encodable, Request
@_spi(AdyenInternal) public typealias ResponseType = Adyen.ClientKeyResponse
@_spi(AdyenInternal) public var path: Swift.String { get }
@_spi(AdyenInternal) public let clientKey: Swift.String { get }
@_spi(AdyenInternal) public var counter: Swift.UInt { get set }
@_spi(AdyenInternal) public let headers: [Swift.String : Swift.String] { get }
@_spi(AdyenInternal) public let queryParameters: [Foundation.URLQueryItem] { get }
@_spi(AdyenInternal) public let method: AdyenNetworking.HTTPMethod { get }
@_spi(AdyenInternal) public func init(
    clientKey: Swift.String
) -> Adyen.ClientKeyRequest
@_spi(AdyenInternal) public typealias ErrorResponseType = Adyen.APIError
@_spi(AdyenInternal) public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
@_spi(AdyenInternal) public struct OrderStatusRequest : APIRequest, Encodable, Request
@_spi(AdyenInternal) public typealias ResponseType = Adyen.OrderStatusResponse
@_spi(AdyenInternal) public var path: Swift.String { get }
@_spi(AdyenInternal) public var counter: Swift.UInt { get set }
@_spi(AdyenInternal) public let headers: [Swift.String : Swift.String] { get }
@_spi(AdyenInternal) public let queryParameters: [Foundation.URLQueryItem] { get }
@_spi(AdyenInternal) public let method: AdyenNetworking.HTTPMethod { get }
@_spi(AdyenInternal) public let orderData: Swift.String { get }
@_spi(AdyenInternal) public func init(
    orderData: Swift.String
) -> Adyen.OrderStatusRequest
@_spi(AdyenInternal) public typealias ErrorResponseType = Adyen.APIError
@_spi(AdyenInternal) public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
@_spi(AdyenInternal) public struct PaymentStatusRequest : APIRequest, Encodable, Request
@_spi(AdyenInternal) public typealias ResponseType = Adyen.PaymentStatusResponse
@_spi(AdyenInternal) public let path: Swift.String { get }
@_spi(AdyenInternal) public var counter: Swift.UInt { get set }
@_spi(AdyenInternal) public let headers: [Swift.String : Swift.String] { get }
@_spi(AdyenInternal) public let queryParameters: [Foundation.URLQueryItem] { get }
@_spi(AdyenInternal) public let method: AdyenNetworking.HTTPMethod { get }
@_spi(AdyenInternal) public let paymentData: Swift.String { get }
@_spi(AdyenInternal) public func init(
    paymentData: Swift.String
) -> Adyen.PaymentStatusRequest
@_spi(AdyenInternal) public typealias ErrorResponseType = Adyen.APIError
@_spi(AdyenInternal) public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
@_spi(AdyenInternal) public struct AppleWalletPassResponse : Decodable, Response
@_spi(AdyenInternal) public let passData: Foundation.Data { get }
@_spi(AdyenInternal) public func init(
    passBase64String: Swift.String
) throws -> Adyen.AppleWalletPassResponse
@_spi(AdyenInternal) public func init(
    from: any Swift.Decoder
) throws -> Adyen.AppleWalletPassResponse
@_spi(AdyenInternal) public struct ClientKeyResponse : Decodable, Response
@_spi(AdyenInternal) public let cardPublicKey: Swift.String { get }
@_spi(AdyenInternal) public func init(
    from: any Swift.Decoder
) throws -> Adyen.ClientKeyResponse
@_spi(AdyenInternal) public struct OrderStatusResponse : Decodable, Response
@_spi(AdyenInternal) public let remainingAmount: Adyen.Amount { get }
@_spi(AdyenInternal) public let paymentMethods: [Adyen.OrderPaymentMethod]? { get }
@_spi(AdyenInternal) public func init(
    remainingAmount: Adyen.Amount,
    paymentMethods: [Adyen.OrderPaymentMethod]?
) -> Adyen.OrderStatusResponse
@_spi(AdyenInternal) public func init(
    from: any Swift.Decoder
) throws -> Adyen.OrderStatusResponse
@_spi(AdyenInternal) public struct OrderPaymentMethod : Decodable, Encodable, PaymentMethod
@_spi(AdyenInternal) public var name: Swift.String { get }
@_spi(AdyenInternal) public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public let lastFour: Swift.String { get }
@_spi(AdyenInternal) public let type: Adyen.PaymentMethodType { get }
@_spi(AdyenInternal) public let transactionLimit: Adyen.Amount? { get }
@_spi(AdyenInternal) public let amount: Adyen.Amount { get }
@_spi(AdyenInternal) public func init(
    lastFour: Swift.String,
    type: Adyen.PaymentMethodType,
    transactionLimit: Adyen.Amount?,
    amount: Adyen.Amount
) -> Adyen.OrderPaymentMethod
@_spi(AdyenInternal) public func defaultDisplayInformation(
    using: Adyen.LocalizationParameters?
) -> Adyen.DisplayInformation
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
@_spi(AdyenInternal) public func init(
    from: any Swift.Decoder
) throws -> Adyen.OrderPaymentMethod
@_spi(AdyenInternal) public enum PaymentResultCode : Decodable, Equatable, Hashable, RawRepresentable
@_spi(AdyenInternal) public case authorised
@_spi(AdyenInternal) public case refused
@_spi(AdyenInternal) public case pending
@_spi(AdyenInternal) public case cancelled
@_spi(AdyenInternal) public case error
@_spi(AdyenInternal) public case received
@_spi(AdyenInternal) public case redirectShopper
@_spi(AdyenInternal) public case identifyShopper
@_spi(AdyenInternal) public case challengeShopper
@_spi(AdyenInternal) public func init(
    rawValue: Swift.String
) -> Adyen.PaymentResultCode?
@_spi(AdyenInternal) public typealias RawValue = Swift.String
@_spi(AdyenInternal) public var rawValue: Swift.String { get }
@_spi(AdyenInternal) public struct PaymentStatusResponse : Decodable, Response
@_spi(AdyenInternal) public let payload: Swift.String { get }
@_spi(AdyenInternal) public let resultCode: Adyen.PaymentResultCode { get }
@_spi(AdyenInternal) public func init(
    from: any Swift.Decoder
) throws -> Adyen.PaymentStatusResponse
public final class AdyenContext : PaymentAware
public let apiContext: Adyen.APIContext { get }
public var payment: Adyen.Payment? { get }
@_spi(AdyenInternal) public let analyticsProvider: (any Adyen.AnalyticsProviderProtocol)? { get }
public func init(
    apiContext: Adyen.APIContext,
    payment: Adyen.Payment?,
    analyticsConfiguration: Adyen.AnalyticsConfiguration = $DEFAULT_ARG
) -> Adyen.AdyenContext
@_spi(AdyenInternal) public func update(
    payment: Adyen.Payment?
) -> Swift.Void
@_spi(AdyenInternal) public enum PersonalInformation : Equatable
@_spi(AdyenInternal) public case firstName
@_spi(AdyenInternal) public case lastName
@_spi(AdyenInternal) public case email
@_spi(AdyenInternal) public case phone
@_spi(AdyenInternal) public case address
@_spi(AdyenInternal) public case deliveryAddress
@_spi(AdyenInternal) public case custom(any Adyen.FormItemInjector)
@_spi(AdyenInternal) public static func ==(
    _: Adyen.PersonalInformation,
    _: Adyen.PersonalInformation
) -> Swift.Bool
public class AbstractPersonalInformationComponent : AdyenContextAware, Component, LoadingComponent, PartialPaymentOrderAware, PaymentAware, PaymentComponent, PaymentMethodAware, PresentableComponent, TrackableComponent, ViewControllerDelegate, ViewControllerPresenter
public typealias Configuration = Adyen.PersonalInformationConfiguration
@_spi(AdyenInternal) public let context: Adyen.AdyenContext { get }
public let paymentMethod: any Adyen.PaymentMethod { get }
public var delegate: (any Adyen.PaymentComponentDelegate)? { get set }
public var viewController: UIKit.UIViewController { get set }
public let requiresModalPresentation: Swift.Bool { get }
@_spi(AdyenInternal) public var configuration: Adyen.AbstractPersonalInformationComponent.Configuration { get set }
@_spi(AdyenInternal) public func init(
    paymentMethod: any Adyen.PaymentMethod,
    context: Adyen.AdyenContext,
    fields: [Adyen.PersonalInformation],
    configuration: Adyen.AbstractPersonalInformationComponent.Configuration
) -> Adyen.AbstractPersonalInformationComponent
@_spi(AdyenInternal) public var firstNameItem: Adyen.FormTextInputItem? { get }
@_spi(AdyenInternal) public var lastNameItem: Adyen.FormTextInputItem? { get }
@_spi(AdyenInternal) public var emailItem: Adyen.FormTextInputItem? { get }
@_spi(AdyenInternal) public var addressItem: Adyen.FormAddressPickerItem? { get }
@_spi(AdyenInternal) public var deliveryAddressItem: Adyen.FormAddressPickerItem? { get }
@_spi(AdyenInternal) public var phoneItem: Adyen.FormPhoneNumberItem? { get }
@_spi(AdyenInternal) public func submitButtonTitle(

) -> Swift.String
@_spi(AdyenInternal) public func createPaymentDetails(

) throws -> any Adyen.PaymentMethodDetails
@_spi(AdyenInternal) public func phoneExtensions(

) -> [Adyen.PhoneExtension]
@_spi(AdyenInternal) public func addressViewModelBuilder(

) -> any Adyen.AddressViewModelBuilder
@_spi(AdyenInternal) public func showValidation(

) -> Swift.Void
public func stopLoading(

) -> Swift.Void
@_spi(AdyenInternal) public func presentViewController(
    _: UIKit.UIViewController,
    animated: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func dismissViewController(
    animated: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func viewWillAppear(
    viewController: UIKit.UIViewController
) -> Swift.Void
@_spi(AdyenInternal) public func viewDidLoad(
    viewController: UIKit.UIViewController
) -> Swift.Void
@_spi(AdyenInternal) public protocol FormItemInjector
@_spi(AdyenInternal) public func inject(
    into: Adyen.FormViewController
) -> Swift.Void
@_spi(AdyenInternal) public struct CustomFormItemInjector : FormItemInjector
@_spi(AdyenInternal) public func init(
    item: T
) -> Adyen.CustomFormItemInjector<T>
@_spi(AdyenInternal) public func inject(
    into: Adyen.FormViewController
) -> Swift.Void
@_spi(AdyenInternal) public final class AlreadyPaidPaymentComponent : AdyenContextAware, Component, PartialPaymentOrderAware, PaymentComponent, PaymentMethodAware
@_spi(AdyenInternal) public let context: Adyen.AdyenContext { get }
@_spi(AdyenInternal) public let paymentMethod: any Adyen.PaymentMethod { get }
@_spi(AdyenInternal) public var delegate: (any Adyen.PaymentComponentDelegate)? { get set }
@_spi(AdyenInternal) public func init(
    paymentMethod: any Adyen.PaymentMethod,
    context: Adyen.AdyenContext
) -> Adyen.AlreadyPaidPaymentComponent
public protocol AnyCashAppPayConfiguration
public var redirectURL: Foundation.URL { get }
public var referenceId: Swift.String? { get }
public var showsStorePaymentMethodField: Swift.Bool { get }
public var storePaymentMethod: Swift.Bool { get }
public struct ActionComponentData
public let details: any Adyen.AdditionalDetails { get }
public let paymentData: Swift.String? { get }
public func init(
    details: any Adyen.AdditionalDetails,
    paymentData: Swift.String?
) -> Adyen.ActionComponentData
public protocol AnyBasicComponentConfiguration : Localizable
public protocol AnyPersonalInformationConfiguration : AnyBasicComponentConfiguration, Localizable
public var shopperInformation: Adyen.PrefilledShopperInformation? { get }
public struct BasicComponentConfiguration : AnyBasicComponentConfiguration, Localizable
public var style: Adyen.FormComponentStyle { get set }
public var localizationParameters: Adyen.LocalizationParameters? { get set }
public func init(
    style: Adyen.FormComponentStyle = $DEFAULT_ARG,
    localizationParameters: Adyen.LocalizationParameters? = $DEFAULT_ARG
) -> Adyen.BasicComponentConfiguration
public struct PersonalInformationConfiguration : AnyBasicComponentConfiguration, AnyPersonalInformationConfiguration, Localizable
public var style: Adyen.FormComponentStyle { get set }
public var shopperInformation: Adyen.PrefilledShopperInformation? { get set }
public var localizationParameters: Adyen.LocalizationParameters? { get set }
public func init(
    style: Adyen.FormComponentStyle = $DEFAULT_ARG,
    shopperInformation: Adyen.PrefilledShopperInformation? = $DEFAULT_ARG,
    localizationParameters: Adyen.LocalizationParameters? = $DEFAULT_ARG
) -> Adyen.PersonalInformationConfiguration
public enum PartialPaymentError : Equatable, Error, Hashable, LocalizedError, Sendable
public case zeroRemainingAmount
public case missingOrderData
public case notSupportedForComponent
public var errorDescription: Swift.String? { get }
public static func __derived_enum_equals(
    _: Adyen.PartialPaymentError,
    _: Adyen.PartialPaymentError
) -> Swift.Bool
public func hash(
    into: Swift.Hasher
) -> Swift.Void
public var hashValue: Swift.Int { get }
@_spi(AdyenInternal) public final class PresentableComponentWrapper : AdyenContextAware, Cancellable, Component, FinalizableComponent, LoadingComponent, PresentableComponent
@_spi(AdyenInternal) public var apiContext: Adyen.APIContext { get }
@_spi(AdyenInternal) public var context: Adyen.AdyenContext { get }
@_spi(AdyenInternal) public let viewController: UIKit.UIViewController { get }
@_spi(AdyenInternal) public let component: any Adyen.Component { get }
@_spi(AdyenInternal) public var requiresModalPresentation: Swift.Bool { get set }
@_spi(AdyenInternal) public var navBarType: Adyen.NavigationBarType { get set }
@_spi(AdyenInternal) public func init(
    component: any Adyen.Component,
    viewController: UIKit.UIViewController,
    navBarType: Adyen.NavigationBarType = $DEFAULT_ARG
) -> Adyen.PresentableComponentWrapper
@_spi(AdyenInternal) public func didCancel(

) -> Swift.Void
@_spi(AdyenInternal) public func didFinalize(
    with: Swift.Bool,
    completion: (() -> Swift.Void)?
) -> Swift.Void
@_spi(AdyenInternal) public func stopLoading(

) -> Swift.Void
@_spi(AdyenInternal) public protocol InstallmentConfigurationAware : AdyenSessionAware
@_spi(AdyenInternal) public var installmentConfiguration: Adyen.InstallmentConfiguration? { get }
public struct InstallmentOptions : Decodable, Encodable, Equatable
@_spi(AdyenInternal) public let regularInstallmentMonths: [Swift.UInt] { get }
@_spi(AdyenInternal) public let includesRevolving: Swift.Bool { get }
public func init(
    monthValues: [Swift.UInt],
    includesRevolving: Swift.Bool
) -> Adyen.InstallmentOptions
public func init(
    maxInstallmentMonth: Swift.UInt,
    includesRevolving: Swift.Bool
) -> Adyen.InstallmentOptions
@_spi(AdyenInternal) public func init(
    from: any Swift.Decoder
) throws -> Adyen.InstallmentOptions
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public static func __derived_struct_equals(
    _: Adyen.InstallmentOptions,
    _: Adyen.InstallmentOptions
) -> Swift.Bool
public struct InstallmentConfiguration : Decodable
@_spi(AdyenInternal) public let defaultOptions: Adyen.InstallmentOptions? { get }
@_spi(AdyenInternal) public let cardBasedOptions: [Adyen.CardType : Adyen.InstallmentOptions]? { get }
@_spi(AdyenInternal) public var showInstallmentAmount: Swift.Bool { get set }
public func init(
    cardBasedOptions: [Adyen.CardType : Adyen.InstallmentOptions],
    defaultOptions: Adyen.InstallmentOptions,
    showInstallmentAmount: Swift.Bool = $DEFAULT_ARG
) -> Adyen.InstallmentConfiguration
public func init(
    cardBasedOptions: [Adyen.CardType : Adyen.InstallmentOptions],
    showInstallmentAmount: Swift.Bool = $DEFAULT_ARG
) -> Adyen.InstallmentConfiguration
public func init(
    defaultOptions: Adyen.InstallmentOptions,
    showInstallmentAmount: Swift.Bool = $DEFAULT_ARG
) -> Adyen.InstallmentConfiguration
@_spi(AdyenInternal) public func init(
    from: any Swift.Decoder
) throws -> Adyen.InstallmentConfiguration
@_spi(AdyenInternal) public protocol PaymentInitiable
@_spi(AdyenInternal) public func initiatePayment(

) -> Swift.Void
public final class InstantPaymentComponent : AdyenContextAware, Component, PartialPaymentOrderAware, PaymentComponent, PaymentInitiable, PaymentMethodAware
@_spi(AdyenInternal) public let context: Adyen.AdyenContext { get }
public let paymentData: Adyen.PaymentComponentData { get }
public let paymentMethod: any Adyen.PaymentMethod { get }
public var delegate: (any Adyen.PaymentComponentDelegate)? { get set }
public func init(
    paymentMethod: any Adyen.PaymentMethod,
    context: Adyen.AdyenContext,
    paymentData: Adyen.PaymentComponentData
) -> Adyen.InstantPaymentComponent
public func init(
    paymentMethod: any Adyen.PaymentMethod,
    context: Adyen.AdyenContext,
    order: Adyen.PartialPaymentOrder?
) -> Adyen.InstantPaymentComponent
public func initiatePayment(

) -> Swift.Void
public struct InstantPaymentDetails : Details, Encodable, OpaqueEncodable, PaymentMethodDetails
@_spi(AdyenInternal) public var checkoutAttemptId: Swift.String? { get set }
public let type: Adyen.PaymentMethodType { get }
public func init(
    type: Adyen.PaymentMethodType
) -> Adyen.InstantPaymentDetails
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public final class StoredPaymentMethodComponent : AdyenContextAware, Component, PartialPaymentOrderAware, PaymentAware, PaymentComponent, PaymentMethodAware, PresentableComponent, TrackableComponent
public var configuration: Adyen.StoredPaymentMethodComponent.Configuration { get set }
public let context: Adyen.AdyenContext { get }
public var paymentMethod: any Adyen.PaymentMethod { get }
public var delegate: (any Adyen.PaymentComponentDelegate)? { get set }
public func init(
    paymentMethod: any Adyen.StoredPaymentMethod,
    context: Adyen.AdyenContext,
    configuration: Adyen.StoredPaymentMethodComponent.Configuration = $DEFAULT_ARG
) -> Adyen.StoredPaymentMethodComponent
public var viewController: UIKit.UIViewController { get set }
public struct Configuration : AnyBasicComponentConfiguration, Localizable
public var localizationParameters: Adyen.LocalizationParameters? { get set }
public func init(
    localizationParameters: Adyen.LocalizationParameters? = $DEFAULT_ARG
) -> Adyen.StoredPaymentMethodComponent.Configuration
public struct StoredPaymentDetails : Details, Encodable, OpaqueEncodable, PaymentMethodDetails
@_spi(AdyenInternal) public var checkoutAttemptId: Swift.String? { get set }
public func init(
    paymentMethod: any Adyen.StoredPaymentMethod
) -> Adyen.StoredPaymentDetails
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public protocol ActionComponent : AdyenContextAware, Component
public var delegate: (any Adyen.ActionComponentDelegate)? { get set }
public protocol ActionComponentDelegate
public func didOpenExternalApplication(
    component: any Adyen.ActionComponent
) -> Swift.Void
public func didProvide(
    _: Adyen.ActionComponentData,
    from: any Adyen.ActionComponent
) -> Swift.Void
public func didComplete(
    from: any Adyen.ActionComponent
) -> Swift.Void
public func didFail(
    with: any Swift.Error,
    from: any Adyen.ActionComponent
) -> Swift.Void
public func didOpenExternalApplication(
    component: any Adyen.ActionComponent
) -> Swift.Void
@_spi(AdyenInternal) public protocol AdyenSessionAware
@_spi(AdyenInternal) public var isSession: Swift.Bool { get }
public protocol AnyDropInComponent : AdyenContextAware, Component, PresentableComponent
public var delegate: (any Adyen.DropInComponentDelegate)? { get set }
public func reload(
    with: Adyen.PartialPaymentOrder,
    _: Adyen.PaymentMethods
) throws -> Swift.Void
public protocol Component : AdyenContextAware
public func finalizeIfNeeded(
    with: Swift.Bool,
    completion: (() -> Swift.Void)?
) -> Swift.Void
public func cancelIfNeeded(

) -> Swift.Void
public func stopLoadingIfNeeded(

) -> Swift.Void
@_spi(AdyenInternal) public var _isDropIn: Swift.Bool { get set }
public protocol FinalizableComponent : AdyenContextAware, Component
public func didFinalize(
    with: Swift.Bool,
    completion: (() -> Swift.Void)?
) -> Swift.Void
public protocol Details : Encodable, OpaqueEncodable
public protocol PaymentMethodDetails : Details, Encodable, OpaqueEncodable
@_spi(AdyenInternal) public var checkoutAttemptId: Swift.String? { get set }
@_spi(AdyenInternal) public var checkoutAttemptId: Swift.String? { get set }
public protocol AdditionalDetails : Details, Encodable, OpaqueEncodable
public protocol DeviceDependent
public static func isDeviceSupported(

) -> Swift.Bool
public protocol DropInComponentDelegate
public func didSubmit(
    _: Adyen.PaymentComponentData,
    from: any Adyen.PaymentComponent,
    in: any Adyen.AnyDropInComponent
) -> Swift.Void
public func didFail(
    with: any Swift.Error,
    from: any Adyen.PaymentComponent,
    in: any Adyen.AnyDropInComponent
) -> Swift.Void
public func didProvide(
    _: Adyen.ActionComponentData,
    from: any Adyen.ActionComponent,
    in: any Adyen.AnyDropInComponent
) -> Swift.Void
public func didComplete(
    from: any Adyen.ActionComponent,
    in: any Adyen.AnyDropInComponent
) -> Swift.Void
public func didFail(
    with: any Swift.Error,
    from: any Adyen.ActionComponent,
    in: any Adyen.AnyDropInComponent
) -> Swift.Void
public func didOpenExternalApplication(
    component: any Adyen.ActionComponent,
    in: any Adyen.AnyDropInComponent
) -> Swift.Void
public func didFail(
    with: any Swift.Error,
    from: any Adyen.AnyDropInComponent
) -> Swift.Void
public func didCancel(
    component: any Adyen.PaymentComponent,
    from: any Adyen.AnyDropInComponent
) -> Swift.Void
public func didCancel(
    component: any Adyen.PaymentComponent,
    from: any Adyen.AnyDropInComponent
) -> Swift.Void
public func didOpenExternalApplication(
    component: any Adyen.ActionComponent,
    in: any Adyen.AnyDropInComponent
) -> Swift.Void
public protocol ComponentLoader : LoadingComponent
public func startLoading(
    for: any Adyen.PaymentComponent
) -> Swift.Void
public protocol LoadingComponent
public func stopLoading(

) -> Swift.Void
@_spi(AdyenInternal) public protocol PartialPaymentComponent : AdyenContextAware, Component, PartialPaymentOrderAware, PaymentComponent, PaymentMethodAware
@_spi(AdyenInternal) public var partialPaymentDelegate: (any Adyen.PartialPaymentDelegate)? { get set }
@_spi(AdyenInternal) public var readyToSubmitComponentDelegate: (any Adyen.ReadyToSubmitPaymentComponentDelegate)? { get set }
public protocol PartialPaymentDelegate
public func checkBalance(
    with: Adyen.PaymentComponentData,
    component: any Adyen.Component,
    completion: (Swift.Result<Adyen.Balance, any Swift.Error>) -> Swift.Void
) -> Swift.Void
public func requestOrder(
    for: any Adyen.Component,
    completion: (Swift.Result<Adyen.PartialPaymentOrder, any Swift.Error>) -> Swift.Void
) -> Swift.Void
public func cancelOrder(
    _: Adyen.PartialPaymentOrder,
    component: any Adyen.Component
) -> Swift.Void
public protocol PartialPaymentOrderAware
public var order: Adyen.PartialPaymentOrder? { get set }
@_spi(AdyenInternal) public var order: Adyen.PartialPaymentOrder? { get set }
public protocol PaymentAware
public var payment: Adyen.Payment? { get }
public protocol PaymentMethodAware
public var paymentMethod: any Adyen.PaymentMethod { get }
public protocol PaymentComponent : AdyenContextAware, Component, PartialPaymentOrderAware, PaymentMethodAware
public var delegate: (any Adyen.PaymentComponentDelegate)? { get set }
@_spi(AdyenInternal) public func submit(
    data: Adyen.PaymentComponentData,
    component: (any Adyen.PaymentComponent)? = $DEFAULT_ARG
) -> Swift.Void
public protocol PaymentComponentDelegate
public func didSubmit(
    _: Adyen.PaymentComponentData,
    from: any Adyen.PaymentComponent
) -> Swift.Void
public func didFail(
    with: any Swift.Error,
    from: any Adyen.PaymentComponent
) -> Swift.Void
@_spi(AdyenInternal) public protocol PaymentComponentBuilder : AdyenContextAware
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.StoredCardPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: any Adyen.StoredPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.StoredBCMCPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.StoredACHDirectDebitPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.CardPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.BCMCPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.IssuerListPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.SEPADirectDebitPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.BACSDirectDebitPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.ACHDirectDebitPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.ApplePayPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.WeChatPayPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.QiwiWalletPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.MBWayPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.BLIKPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.DokuPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.EContextPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.GiftCardPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.MealVoucherPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.BoletoPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.AffirmPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.AtomePaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.OnlineBankingPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.UPIPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.CashAppPayPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.StoredCashAppPayPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: Adyen.TwintPaymentMethod
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func build(
    paymentMethod: any Adyen.PaymentMethod
) -> (any Adyen.PaymentComponent)?
public protocol PaymentMethod : Decodable, Encodable
public var type: Adyen.PaymentMethodType { get }
public var name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func defaultDisplayInformation(
    using: Adyen.LocalizationParameters?
) -> Adyen.DisplayInformation
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func displayInformation(
    using: Adyen.LocalizationParameters?
) -> Adyen.DisplayInformation
@_spi(AdyenInternal) public func defaultDisplayInformation(
    using: Adyen.LocalizationParameters?
) -> Adyen.DisplayInformation
public protocol PartialPaymentMethod : Decodable, Encodable, PaymentMethod
public protocol StoredPaymentMethod : Decodable, Encodable, PaymentMethod
public var identifier: Swift.String { get }
public var supportedShopperInteractions: [Adyen.ShopperInteraction] { get }
@_spi(AdyenInternal) public func ==(
    _: any Adyen.StoredPaymentMethod,
    _: any Adyen.StoredPaymentMethod
) -> Swift.Bool
@_spi(AdyenInternal) public func !=(
    _: any Adyen.StoredPaymentMethod,
    _: any Adyen.StoredPaymentMethod
) -> Swift.Bool
@_spi(AdyenInternal) public func ==(
    _: any Adyen.PaymentMethod,
    _: any Adyen.PaymentMethod
) -> Swift.Bool
@_spi(AdyenInternal) public func !=(
    _: any Adyen.PaymentMethod,
    _: any Adyen.PaymentMethod
) -> Swift.Bool
public protocol Localizable
public var localizationParameters: Adyen.LocalizationParameters? { get set }
public protocol Cancellable
public func didCancel(

) -> Swift.Void
@_spi(AdyenInternal) public protocol AnyNavigationBar
@_spi(AdyenInternal) public var onCancelHandler: (() -> Swift.Void)? { get set }
@_spi(AdyenInternal) public enum NavigationBarType
@_spi(AdyenInternal) public case regular
@_spi(AdyenInternal) public case custom(any Adyen.AnyNavigationBar)
public protocol PresentableComponent : AdyenContextAware, Component
public var requiresModalPresentation: Swift.Bool { get }
public var viewController: UIKit.UIViewController { get }
@_spi(AdyenInternal) public var navBarType: Adyen.NavigationBarType { get }
@_spi(AdyenInternal) public var requiresModalPresentation: Swift.Bool { get }
@_spi(AdyenInternal) public var navBarType: Adyen.NavigationBarType { get }
public protocol PresentationDelegate
public func present(
    component: any Adyen.PresentableComponent
) -> Swift.Void
public protocol ReadyToSubmitPaymentComponentDelegate
public func showConfirmation(
    for: Adyen.InstantPaymentComponent,
    with: Adyen.PartialPaymentOrder?
) -> Swift.Void
@_spi(AdyenInternal) public protocol StorePaymentMethodFieldAware : AdyenSessionAware
@_spi(AdyenInternal) public var showStorePaymentMethodField: Swift.Bool? { get }
@_spi(AdyenInternal) public protocol SessionStoredPaymentMethodsDelegate : AdyenSessionAware, StoredPaymentMethodsDelegate
@_spi(AdyenInternal) public var showRemovePaymentMethodButton: Swift.Bool { get }
@_spi(AdyenInternal) public func disable(
    storedPaymentMethod: any Adyen.StoredPaymentMethod,
    dropInComponent: any Adyen.AnyDropInComponent,
    completion: Adyen.Completion<Swift.Bool>
) -> Swift.Void
public protocol StoredPaymentMethodsDelegate
public func disable(
    storedPaymentMethod: any Adyen.StoredPaymentMethod,
    completion: Adyen.Completion<Swift.Bool>
) -> Swift.Void
@_spi(AdyenInternal) public protocol TrackableComponent : AdyenContextAware, Component
@_spi(AdyenInternal) public var analyticsFlavor: Adyen.AnalyticsFlavor { get }
@_spi(AdyenInternal) public func sendInitialAnalytics(

) -> Swift.Void
@_spi(AdyenInternal) public func sendDidLoadEvent(

) -> Swift.Void
@_spi(AdyenInternal) public func viewDidLoad(
    viewController: UIKit.UIViewController
) -> Swift.Void
@_spi(AdyenInternal) public func sendInitialAnalytics(

) -> Swift.Void
@_spi(AdyenInternal) public var analyticsFlavor: Adyen.AnalyticsFlavor { get }
@_spi(AdyenInternal) public func sendDidLoadEvent(

) -> Swift.Void
@_spi(AdyenInternal) public protocol ViewControllerPresenter
@_spi(AdyenInternal) public func presentViewController(
    _: UIKit.UIViewController,
    animated: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func dismissViewController(
    animated: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public class WeakReferenceViewControllerPresenter : ViewControllerPresenter
@_spi(AdyenInternal) public func init(
    _: any Adyen.ViewControllerPresenter
) -> Adyen.WeakReferenceViewControllerPresenter
@_spi(AdyenInternal) public func presentViewController(
    _: UIKit.UIViewController,
    animated: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func dismissViewController(
    animated: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public struct APIError : Decodable, Error, ErrorResponse, LocalizedError, Response, Sendable
@_spi(AdyenInternal) public let status: Swift.Int? { get }
@_spi(AdyenInternal) public let errorCode: Swift.String { get }
@_spi(AdyenInternal) public let errorMessage: Swift.String { get }
@_spi(AdyenInternal) public let type: Adyen.APIErrorType { get }
@_spi(AdyenInternal) public var errorDescription: Swift.String? { get }
@_spi(AdyenInternal) public func init(
    from: any Swift.Decoder
) throws -> Adyen.APIError
@_spi(AdyenInternal) public enum APIErrorType : Decodable, Equatable, Hashable, RawRepresentable
@_spi(AdyenInternal) public case internal
@_spi(AdyenInternal) public case validation
@_spi(AdyenInternal) public case security
@_spi(AdyenInternal) public case configuration
@_spi(AdyenInternal) public case urlError
@_spi(AdyenInternal) public case noInternet
@_spi(AdyenInternal) public case sessionExpired
@_spi(AdyenInternal) public func init(
    rawValue: Swift.String
) -> Adyen.APIErrorType?
@_spi(AdyenInternal) public typealias RawValue = Swift.String
@_spi(AdyenInternal) public var rawValue: Swift.String { get }
public enum AppleWalletError : Equatable, Error, Hashable, LocalizedError, Sendable
public case failedToAddToAppleWallet
public static func __derived_enum_equals(
    _: Adyen.AppleWalletError,
    _: Adyen.AppleWalletError
) -> Swift.Bool
public func hash(
    into: Swift.Hasher
) -> Swift.Void
public var hashValue: Swift.Int { get }
public enum ComponentError : Equatable, Error, Hashable, Sendable
public case cancelled
public case paymentMethodNotSupported
public static func __derived_enum_equals(
    _: Adyen.ComponentError,
    _: Adyen.ComponentError
) -> Swift.Bool
public func hash(
    into: Swift.Hasher
) -> Swift.Void
public var hashValue: Swift.Int { get }
@_spi(AdyenInternal) public struct UnknownError : Error, LocalizedError, Sendable
@_spi(AdyenInternal) public var errorDescription: Swift.String? { get set }
@_spi(AdyenInternal) public func init(
    errorDescription: Swift.String? = $DEFAULT_ARG
) -> Adyen.UnknownError
public enum CardType : Decodable, Encodable, Equatable, Hashable, RawRepresentable
public case accel
public case alphaBankBonusMasterCard
public case alphaBankBonusVISA
public case argencard
public case americanExpress
public case bcmc
public case bijenkorfCard
public case cabal
public case carteBancaire
public case cencosud
public case chequeDejeneur
public case chinaUnionPay
public case codensa
public case creditUnion24
public case dankort
public case dankortVISA
public case diners
public case discover
public case elo
public case forbrugsforeningen
public case hiper
public case hipercard
public case jcb
public case karenMillen
public case kcp
public case koreanLocalCard
public case laser
public case maestro
public case maestroUK
public case masterCard
public case mir
public case naranja
public case netplus
public case nyce
public case oasis
public case pulse
public case shopping
public case solo
public case star
public case troy
public case uatp
public case visa
public case warehouse
public case other(named: Swift.String)
public func init(
    rawValue: Swift.String
) -> Adyen.CardType
public var rawValue: Swift.String { get }
@_spi(AdyenInternal) public var name: Swift.String { get }
public typealias RawValue = Swift.String
@_spi(AdyenInternal) public func matches(
    cardNumber: Swift.String
) -> Swift.Bool
public struct DisplayInformation : Equatable
public let title: Swift.String { get }
public let subtitle: Swift.String? { get }
@_spi(AdyenInternal) public let logoName: Swift.String { get }
@_spi(AdyenInternal) public let disclosureText: Swift.String? { get }
@_spi(AdyenInternal) public let footnoteText: Swift.String? { get }
@_spi(AdyenInternal) public let accessibilityLabel: Swift.String? { get }
public func init(
    title: Swift.String,
    subtitle: Swift.String?,
    logoName: Swift.String,
    disclosureText: Swift.String? = $DEFAULT_ARG,
    footnoteText: Swift.String? = $DEFAULT_ARG,
    accessibilityLabel: Swift.String? = $DEFAULT_ARG
) -> Adyen.DisplayInformation
public static func __derived_struct_equals(
    _: Adyen.DisplayInformation,
    _: Adyen.DisplayInformation
) -> Swift.Bool
public struct MerchantCustomDisplayInformation
public let title: Swift.String { get }
public let subtitle: Swift.String? { get }
public func init(
    title: Swift.String,
    subtitle: Swift.String? = $DEFAULT_ARG
) -> Adyen.MerchantCustomDisplayInformation
public enum ShopperInteraction : Decodable, Encodable, Equatable, Hashable, RawRepresentable
public case shopperPresent
public case shopperNotPresent
public func init(
    rawValue: Swift.String
) -> Adyen.ShopperInteraction?
public typealias RawValue = Swift.String
public var rawValue: Swift.String { get }
public struct ACHDirectDebitPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func defaultDisplayInformation(
    using: Adyen.LocalizationParameters?
) -> Adyen.DisplayInformation
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.ACHDirectDebitPaymentMethod
public struct StoredACHDirectDebitPaymentMethod : Decodable, Encodable, PaymentMethod, StoredPaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
public let identifier: Swift.String { get }
public let supportedShopperInteractions: [Adyen.ShopperInteraction] { get }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func defaultDisplayInformation(
    using: Adyen.LocalizationParameters?
) -> Adyen.DisplayInformation
public let bankAccountNumber: Swift.String { get }
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.StoredACHDirectDebitPaymentMethod
public protocol AnyCardPaymentMethod : Decodable, Encodable, PaymentMethod
public var brands: [Adyen.CardType] { get }
public var fundingSource: Adyen.CardFundingSource? { get }
public enum CardFundingSource : Decodable, Encodable, Equatable, Hashable, RawRepresentable
public case debit
public case credit
public func init(
    rawValue: Swift.String
) -> Adyen.CardFundingSource?
public typealias RawValue = Swift.String
public var rawValue: Swift.String { get }
public enum PaymentMethodType : Decodable, Encodable, Equatable, Hashable, RawRepresentable
public case card
public case scheme
public case ideal
public case entercash
public case eps
public case dotpay
public case onlineBankingPoland
public case openBankingUK
public case molPayEBankingFPXMY
public case molPayEBankingTH
public case molPayEBankingVN
public case sepaDirectDebit
public case applePay
public case payPal
public case bcmc
public case bcmcMobile
public case qiwiWallet
public case weChatPaySDK
public case mbWay
public case blik
public case dokuWallet
public case dokuAlfamart
public case dokuIndomaret
public case giftcard
public case doku
public case econtextSevenEleven
public case econtextStores
public case econtextATM
public case econtextOnline
public case boleto
public case affirm
public case oxxo
public case bacsDirectDebit
public case achDirectDebit
public case multibanco
public case atome
public case onlineBankingCZ
public case onlineBankingSK
public case mealVoucherNatixis
public case mealVoucherGroupeUp
public case mealVoucherSodexo
public case upi
public case cashAppPay
public case twint
public case other(Swift.String)
public case bcmcMobileQR
public case weChatMiniProgram
public case weChatQR
public case weChatPayWeb
public case googlePay
public case afterpay
public case androidPay
public case amazonPay
public case upiCollect
public case upiIntent
public case upiQr
public case bizum
public func init(
    rawValue: Swift.String
) -> Adyen.PaymentMethodType?
public var rawValue: Swift.String { get }
public typealias RawValue = Swift.String
@_spi(AdyenInternal) public var name: Swift.String { get }
public struct PaymentMethods : Decodable, Encodable
public var paid: [any Adyen.PaymentMethod] { get set }
public var regular: [any Adyen.PaymentMethod] { get set }
public var stored: [any Adyen.StoredPaymentMethod] { get set }
public func init(
    regular: [any Adyen.PaymentMethod],
    stored: [any Adyen.StoredPaymentMethod]
) -> Adyen.PaymentMethods
public func overrideDisplayInformation(
    ofStoredPaymentMethod: Adyen.PaymentMethodType,
    with: Adyen.MerchantCustomDisplayInformation,
    where: (T) -> Swift.Bool
) -> Swift.Void
public func overrideDisplayInformation(
    ofStoredPaymentMethod: Adyen.PaymentMethodType,
    with: Adyen.MerchantCustomDisplayInformation
) -> Swift.Void
public func overrideDisplayInformation(
    ofRegularPaymentMethod: Adyen.PaymentMethodType,
    with: Adyen.MerchantCustomDisplayInformation,
    where: (T) -> Swift.Bool
) -> Swift.Void
public func overrideDisplayInformation(
    ofRegularPaymentMethod: Adyen.PaymentMethodType,
    with: Adyen.MerchantCustomDisplayInformation
) -> Swift.Void
public func paymentMethod(
    ofType: T.Type
) -> T?
public func paymentMethod(
    ofType: T.Type,
    where: (T) -> Swift.Bool
) -> T?
public func paymentMethod(
    ofType: Adyen.PaymentMethodType
) -> (any Adyen.PaymentMethod)?
public func paymentMethod(
    ofType: Adyen.PaymentMethodType,
    where: (T) -> Swift.Bool
) -> T?
public func init(
    from: any Swift.Decoder
) throws -> Adyen.PaymentMethods
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public struct AffirmPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.AffirmPaymentMethod
public struct ApplePayPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
public let brands: [Swift.String]? { get }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.ApplePayPaymentMethod
public struct AtomePaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.AtomePaymentMethod
public struct BACSDirectDebitPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.BACSDirectDebitPaymentMethod
public struct BCMCPaymentMethod : AnyCardPaymentMethod, Decodable, Encodable, PaymentMethod
public var type: Adyen.PaymentMethodType { get }
public var name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
public var brands: [Adyen.CardType] { get }
public var fundingSource: Adyen.CardFundingSource? { get }
public func init(
    from: any Swift.Decoder
) throws -> Adyen.BCMCPaymentMethod
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public struct BLIKPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func defaultDisplayInformation(
    using: Adyen.LocalizationParameters?
) -> Adyen.DisplayInformation
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.BLIKPaymentMethod
public struct BoletoPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.BoletoPaymentMethod
public struct CardPaymentMethod : AnyCardPaymentMethod, Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
public let fundingSource: Adyen.CardFundingSource? { get }
public let brands: [Adyen.CardType] { get }
public func init(
    from: any Swift.Decoder
) throws -> Adyen.CardPaymentMethod
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func defaultDisplayInformation(
    using: Adyen.LocalizationParameters?
) -> Adyen.DisplayInformation
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public struct StoredCardPaymentMethod : AnyCardPaymentMethod, Decodable, Encodable, PaymentMethod, StoredPaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
public let identifier: Swift.String { get }
public var brands: [Adyen.CardType] { get }
public var fundingSource: Adyen.CardFundingSource? { get set }
public func defaultDisplayInformation(
    using: Adyen.LocalizationParameters?
) -> Adyen.DisplayInformation
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public let supportedShopperInteractions: [Adyen.ShopperInteraction] { get }
public let brand: Adyen.CardType { get }
public let lastFour: Swift.String { get }
public let expiryMonth: Swift.String { get }
public let expiryYear: Swift.String { get }
public let holderName: Swift.String? { get }
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.StoredCardPaymentMethod
public struct CashAppPayPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public let clientId: Swift.String { get }
public let scopeId: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
public func init(
    from: any Swift.Decoder
) throws -> Adyen.CashAppPayPaymentMethod
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public struct DokuPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.DokuPaymentMethod
public typealias DokuWalletPaymentMethod = Adyen.DokuPaymentMethod
public typealias AlfamartPaymentMethod = Adyen.DokuPaymentMethod
public typealias IndomaretPaymentMethod = Adyen.DokuPaymentMethod
public struct EContextPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.EContextPaymentMethod
public typealias SevenElevenPaymentMethod = Adyen.EContextPaymentMethod
public struct GiftCardPaymentMethod : Decodable, Encodable, PartialPaymentMethod, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
public let brand: Swift.String { get }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func defaultDisplayInformation(
    using: Adyen.LocalizationParameters?
) -> Adyen.DisplayInformation
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.GiftCardPaymentMethod
public struct InstantPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.InstantPaymentMethod
public struct IssuerListPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
public let issuers: [Adyen.Issuer] { get }
public func init(
    from: any Swift.Decoder
) throws -> Adyen.IssuerListPaymentMethod
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public struct MBWayPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.MBWayPaymentMethod
public struct MealVoucherPaymentMethod : Decodable, Encodable, PartialPaymentMethod, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func defaultDisplayInformation(
    using: Adyen.LocalizationParameters?
) -> Adyen.DisplayInformation
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.MealVoucherPaymentMethod
public struct Issuer : CustomStringConvertible, Decodable, Encodable, Equatable
public let identifier: Swift.String { get }
public let name: Swift.String { get }
public var description: Swift.String { get }
public static func __derived_struct_equals(
    _: Adyen.Issuer,
    _: Adyen.Issuer
) -> Swift.Bool
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.Issuer
public struct OnlineBankingPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
public let issuers: [Adyen.Issuer] { get }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.OnlineBankingPaymentMethod
public struct QiwiWalletPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
public let phoneExtensions: [Adyen.PhoneExtension] { get }
public func init(
    from: any Swift.Decoder
) throws -> Adyen.QiwiWalletPaymentMethod
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public struct PhoneExtension : Decodable, Encodable, Equatable, FormPickable
public let value: Swift.String { get }
public let countryCode: Swift.String { get }
public var countryDisplayName: Swift.String { get }
public func init(
    value: Swift.String,
    countryCode: Swift.String
) -> Adyen.PhoneExtension
public static func __derived_struct_equals(
    _: Adyen.PhoneExtension,
    _: Adyen.PhoneExtension
) -> Swift.Bool
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.PhoneExtension
@_spi(AdyenInternal) public var identifier: Swift.String { get }
@_spi(AdyenInternal) public var icon: UIKit.UIImage? { get }
@_spi(AdyenInternal) public var title: Swift.String { get }
@_spi(AdyenInternal) public var subtitle: Swift.String? { get }
@_spi(AdyenInternal) public var trailingText: Swift.String? { get }
public struct SEPADirectDebitPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.SEPADirectDebitPaymentMethod
public struct StoredBCMCPaymentMethod : Decodable, Encodable, PaymentMethod, StoredPaymentMethod
public let type: Adyen.PaymentMethodType { get }
public var name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
public var identifier: Swift.String { get }
public func defaultDisplayInformation(
    using: Adyen.LocalizationParameters?
) -> Adyen.DisplayInformation
public var supportedShopperInteractions: [Adyen.ShopperInteraction] { get }
public let brand: Swift.String { get }
public var lastFour: Swift.String { get }
public var expiryMonth: Swift.String { get }
public var expiryYear: Swift.String { get }
public var holderName: Swift.String? { get }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func init(
    from: any Swift.Decoder
) throws -> Adyen.StoredBCMCPaymentMethod
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public struct StoredBLIKPaymentMethod : Decodable, Encodable, PaymentMethod, StoredPaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
public let identifier: Swift.String { get }
public let supportedShopperInteractions: [Adyen.ShopperInteraction] { get }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func defaultDisplayInformation(
    using: Adyen.LocalizationParameters?
) -> Adyen.DisplayInformation
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.StoredBLIKPaymentMethod
public struct StoredCashAppPayPaymentMethod : Decodable, Encodable, PaymentMethod, StoredPaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public let cashtag: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
public let identifier: Swift.String { get }
public let supportedShopperInteractions: [Adyen.ShopperInteraction] { get }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
@_spi(AdyenInternal) public func defaultDisplayInformation(
    using: Adyen.LocalizationParameters?
) -> Adyen.DisplayInformation
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.StoredCashAppPayPaymentMethod
public struct StoredInstantPaymentMethod : Decodable, Encodable, PaymentMethod, StoredPaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
public let identifier: Swift.String { get }
public let supportedShopperInteractions: [Adyen.ShopperInteraction] { get }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.StoredInstantPaymentMethod
public struct StoredPayPalPaymentMethod : Decodable, Encodable, PaymentMethod, StoredPaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
public let identifier: Swift.String { get }
public let supportedShopperInteractions: [Adyen.ShopperInteraction] { get }
public func defaultDisplayInformation(
    using: Adyen.LocalizationParameters?
) -> Adyen.DisplayInformation
public let emailAddress: Swift.String { get }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.StoredPayPalPaymentMethod
public struct TwintPaymentMethod : Decodable, Encodable, PaymentMethod
public var type: Adyen.PaymentMethodType { get set }
public var name: Swift.String { get set }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.TwintPaymentMethod
public struct UPIPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public let apps: [Adyen.Issuer]? { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.UPIPaymentMethod
public struct WeChatPayPaymentMethod : Decodable, Encodable, PaymentMethod
public let type: Adyen.PaymentMethodType { get }
public let name: Swift.String { get }
public var merchantProvidedDisplayInformation: Adyen.MerchantCustomDisplayInformation? { get set }
@_spi(AdyenInternal) public func buildComponent(
    using: any Adyen.PaymentComponentBuilder
) -> (any Adyen.PaymentComponent)?
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.WeChatPayPaymentMethod
@_spi(AdyenInternal) public final class CancellingToolBar : AdyenCompatible, AnyNavigationBar, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public func init(
    title: Swift.String?,
    style: Adyen.NavigationStyle
) -> Adyen.CancellingToolBar
@_spi(AdyenInternal) public class ModalToolbar : AdyenCompatible, AnyNavigationBar, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public var onCancelHandler: (() -> Swift.Void)? { get set }
@_spi(AdyenInternal) public func init(
    title: Swift.String?,
    style: Adyen.NavigationStyle
) -> Adyen.ModalToolbar
@_spi(AdyenInternal) public func init(
    frame: CoreFoundation.CGRect
) -> Adyen.ModalToolbar
public final class AmountFormatter
public static func formatted(
    amount: Swift.Int,
    currencyCode: Swift.String,
    localeIdentifier: Swift.String? = $DEFAULT_ARG
) -> Swift.String?
public static func minorUnitAmount(
    from: Swift.Double,
    currencyCode: Swift.String,
    localeIdentifier: Swift.String? = $DEFAULT_ARG
) -> Swift.Int
public static func minorUnitAmount(
    from: Foundation.Decimal,
    currencyCode: Swift.String,
    localeIdentifier: Swift.String? = $DEFAULT_ARG
) -> Swift.Int
public static func decimalAmount(
    _: Swift.Int,
    currencyCode: Swift.String,
    localeIdentifier: Swift.String? = $DEFAULT_ARG
) -> Foundation.NSDecimalNumber
public final class BrazilSocialSecurityNumberFormatter : Formatter, Sanitizer
public func formattedValue(
    for: Swift.String
) -> Swift.String
public func init(

) -> Adyen.BrazilSocialSecurityNumberFormatter
public protocol Formatter : Sanitizer
public func formattedValue(
    for: Swift.String
) -> Swift.String
public protocol Sanitizer
public func sanitizedValue(
    for: Swift.String
) -> Swift.String
public final class IBANFormatter : Formatter, Sanitizer
public func init(

) -> Adyen.IBANFormatter
public func formattedValue(
    for: Swift.String
) -> Swift.String
public func sanitizedValue(
    for: Swift.String
) -> Swift.String
public class NumericFormatter : Formatter, Sanitizer
public func init(

) -> Adyen.NumericFormatter
public func formattedValue(
    for: Swift.String
) -> Swift.String
public func sanitizedValue(
    for: Swift.String
) -> Swift.String
@_spi(AdyenInternal) public protocol AdyenCancellable
@_spi(AdyenInternal) public func cancel(

) -> Swift.Void
@_spi(AdyenInternal) public class AdyenTask : AdyenCancellable
@_spi(AdyenInternal) public var isCancelled: Swift.Bool { get }
@_spi(AdyenInternal) public func cancel(

) -> Swift.Void
@_spi(AdyenInternal) public struct AdyenDependencyValues
@_spi(AdyenInternal) public subscript subscript(_:) { get set }
@_spi(AdyenInternal) public struct AdyenDependency
@_spi(AdyenInternal) public var wrappedValue: T { get }
@_spi(AdyenInternal) public func init(
    _: Swift.KeyPath<Adyen.AdyenDependencyValues, T>
) -> Adyen.AdyenDependency<T>
@_spi(AdyenInternal) public protocol AdyenDependencyKey
@_spi(AdyenInternal) public associatedtype Value
@_spi(AdyenInternal) public static var liveValue: Self.Value { get }
@_spi(AdyenInternal) public struct AdyenScope
@_spi(AdyenInternal) public let base: Base { get }
@_spi(AdyenInternal) public func init(
    base: Base
) -> Adyen.AdyenScope<Base>
@_spi(AdyenInternal) public subscript subscript(safeIndex:) { get }
@_spi(AdyenInternal) public func isSchemeConfigured(
    _: Swift.String
) -> Swift.Bool
@_spi(AdyenInternal) public func with(
    priority: UIKit.UILayoutPriority
) -> UIKit.NSLayoutConstraint
@_spi(AdyenInternal) public var caAlignmentMode: QuartzCore.CATextLayerAlignmentMode { get }
@_spi(AdyenInternal) public var isNullOrEmpty: Swift.Bool { get }
@_spi(AdyenInternal) public var nilIfEmpty: Swift.String? { get }
@_spi(AdyenInternal) public var nilIfEmpty: Swift.String? { get }
@_spi(AdyenInternal) public func truncate(
    to: Swift.Int
) -> Swift.String
@_spi(AdyenInternal) public func components(
    withLengths: [Swift.Int]
) -> [Swift.String]
@_spi(AdyenInternal) public func components(
    withLength: Swift.Int
) -> [Swift.String]
@_spi(AdyenInternal) public subscript subscript(_:) { get }
@_spi(AdyenInternal) public subscript subscript(_:) { get }
@_spi(AdyenInternal) public subscript subscript(_:) { get }
@_spi(AdyenInternal) public var linkRanges: [Foundation.NSRange] { get }
@_spi(AdyenInternal) public func timeLeftString(

) -> Swift.String?
@_spi(AdyenInternal) public var mainKeyWindow: UIKit.UIWindow? { get }
@_spi(AdyenInternal) public func font(
    with: UIKit.UIFont.Weight
) -> UIKit.UIFont
@_spi(AdyenInternal) public func cancelAnimations(
    with: Swift.String
) -> Swift.Void
@_spi(AdyenInternal) public func animate(
    context: Adyen.AnimationContext
) -> Swift.Void
@_spi(AdyenInternal) @discardableResult public func anchor(
    inside: UIKit.UIView,
    with: UIKit.UIEdgeInsets = $DEFAULT_ARG
) -> [UIKit.NSLayoutConstraint]
@_spi(AdyenInternal) @discardableResult public func anchor(
    inside: UIKit.UILayoutGuide,
    with: UIKit.UIEdgeInsets = $DEFAULT_ARG
) -> [UIKit.NSLayoutConstraint]
@_spi(AdyenInternal) @discardableResult public func anchor(
    inside: Adyen.AdyenScope<Base>.LayoutAnchorSource,
    edgeInsets: Adyen.AdyenScope<Base>.EdgeInsets = $DEFAULT_ARG
) -> [UIKit.NSLayoutConstraint]
@_spi(AdyenInternal) public func wrapped(
    with: UIKit.UIEdgeInsets = $DEFAULT_ARG
) -> UIKit.UIView
@_spi(AdyenInternal) public enum LayoutAnchorSource
@_spi(AdyenInternal) public case view(UIKit.UIView)
@_spi(AdyenInternal) public case layoutGuide(UIKit.UILayoutGuide)
@_spi(AdyenInternal) public struct EdgeInsets
@_spi(AdyenInternal) public var top: CoreGraphics.CGFloat? { get set }
@_spi(AdyenInternal) public var left: CoreGraphics.CGFloat? { get set }
@_spi(AdyenInternal) public var bottom: CoreGraphics.CGFloat? { get set }
@_spi(AdyenInternal) public var right: CoreGraphics.CGFloat? { get set }
@_spi(AdyenInternal) public static var zero: Adyen.AdyenScope<Base>.EdgeInsets { get }
@_spi(AdyenInternal) public func init(
    top: CoreGraphics.CGFloat? = $DEFAULT_ARG,
    left: CoreGraphics.CGFloat? = $DEFAULT_ARG,
    bottom: CoreGraphics.CGFloat? = $DEFAULT_ARG,
    right: CoreGraphics.CGFloat? = $DEFAULT_ARG
) -> Adyen.AdyenScope<Base>.EdgeInsets
@_spi(AdyenInternal) public var topPresenter: UIKit.UIViewController { get }
@_spi(AdyenInternal) @discardableResult public func snapShot(
    forceRedraw: Swift.Bool = $DEFAULT_ARG
) -> UIKit.UIImage?
@_spi(AdyenInternal) public func hide(
    animationKey: Swift.String,
    hidden: Swift.Bool,
    animated: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public var minimalSize: CoreFoundation.CGSize { get }
@_spi(AdyenInternal) public func round(
    corners: UIKit.UIRectCorner,
    radius: CoreGraphics.CGFloat
) -> Swift.Void
@_spi(AdyenInternal) public func round(
    corners: UIKit.UIRectCorner,
    percentage: CoreGraphics.CGFloat
) -> Swift.Void
@_spi(AdyenInternal) public func round(
    corners: UIKit.UIRectCorner,
    rounding: Adyen.CornerRounding
) -> Swift.Void
@_spi(AdyenInternal) public func round(
    using: Adyen.CornerRounding
) -> Swift.Void
@_spi(AdyenInternal) public var queryParameters: [Swift.String : Swift.String] { get }
@_spi(AdyenInternal) public var isHttp: Swift.Bool { get }
@_spi(AdyenInternal) public protocol AdyenCompatible
@_spi(AdyenInternal) public associatedtype AdyenBase
@_spi(AdyenInternal) public var adyen: Adyen.AdyenScope<Self.AdyenBase> { get }
@_spi(AdyenInternal) public var adyen: Adyen.AdyenScope<Self> { get }
public let adyenSdkVersion: Swift.String
@_spi(AdyenInternal) public protocol ImageLoading
@_spi(AdyenInternal) @discardableResult public func load(
    url: Foundation.URL,
    completion: ((UIKit.UIImage?) -> Swift.Void)
) -> any Adyen.AdyenCancellable
@_spi(AdyenInternal) public final class ImageLoader : ImageLoading
@_spi(AdyenInternal) public func init(
    urlSession: Foundation.URLSession = $DEFAULT_ARG
) -> Adyen.ImageLoader
@_spi(AdyenInternal) @discardableResult public func load(
    url: Foundation.URL,
    completion: ((UIKit.UIImage?) -> Swift.Void)
) -> any Adyen.AdyenCancellable
@_spi(AdyenInternal) public final class ImageLoaderProvider
@_spi(AdyenInternal) public static func imageLoader(

) -> any Adyen.ImageLoading
@_spi(AdyenInternal) public class AnimationContext : CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSObjectProtocol
@_spi(AdyenInternal) public func init(
    animationKey: Swift.String,
    duration: Foundation.TimeInterval,
    delay: Foundation.TimeInterval = $DEFAULT_ARG,
    options: UIKit.UIView.AnimationOptions = $DEFAULT_ARG,
    animations: () -> Swift.Void,
    completion: ((Swift.Bool) -> Swift.Void)? = $DEFAULT_ARG
) -> Adyen.AnimationContext
@_spi(AdyenInternal) public func init(

) -> Adyen.AnimationContext
@_spi(AdyenInternal) public final class KeyFrameAnimationContext : CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSObjectProtocol
@_spi(AdyenInternal) public func init(
    animationKey: Swift.String,
    duration: Foundation.TimeInterval,
    delay: Foundation.TimeInterval = $DEFAULT_ARG,
    options: UIKit.UIView.KeyframeAnimationOptions = $DEFAULT_ARG,
    animations: () -> Swift.Void,
    completion: ((Swift.Bool) -> Swift.Void)? = $DEFAULT_ARG
) -> Adyen.KeyFrameAnimationContext
@_spi(AdyenInternal) public func init(
    animationKey: Swift.String,
    duration: Foundation.TimeInterval,
    delay: Foundation.TimeInterval = $DEFAULT_ARG,
    options: UIKit.UIView.AnimationOptions = $DEFAULT_ARG,
    animations: () -> Swift.Void,
    completion: ((Swift.Bool) -> Swift.Void)? = $DEFAULT_ARG
) -> Adyen.KeyFrameAnimationContext
@_spi(AdyenInternal) public final class SpringAnimationContext : CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSObjectProtocol
@_spi(AdyenInternal) public func init(
    animationKey: Swift.String,
    duration: Foundation.TimeInterval,
    delay: Foundation.TimeInterval = $DEFAULT_ARG,
    dampingRatio: CoreGraphics.CGFloat,
    velocity: CoreGraphics.CGFloat,
    options: UIKit.UIView.AnimationOptions = $DEFAULT_ARG,
    animations: () -> Swift.Void,
    completion: ((Swift.Bool) -> Swift.Void)? = $DEFAULT_ARG
) -> Adyen.SpringAnimationContext
@_spi(AdyenInternal) public func init(
    animationKey: Swift.String,
    duration: Foundation.TimeInterval,
    delay: Foundation.TimeInterval = $DEFAULT_ARG,
    options: UIKit.UIView.AnimationOptions = $DEFAULT_ARG,
    animations: () -> Swift.Void,
    completion: ((Swift.Bool) -> Swift.Void)? = $DEFAULT_ARG
) -> Adyen.SpringAnimationContext
@_spi(AdyenInternal) public protocol PreferredContentSizeConsumer
@_spi(AdyenInternal) public func didUpdatePreferredContentSize(

) -> Swift.Void
@_spi(AdyenInternal) public func willUpdatePreferredContentSize(

) -> Swift.Void
public struct Amount : Comparable, Decodable, Encodable, Equatable
public let value: Swift.Int { get }
public let currencyCode: Swift.String { get }
public var localeIdentifier: Swift.String? { get set }
public func init(
    value: Swift.Int,
    currencyCode: Swift.String,
    localeIdentifier: Swift.String? = $DEFAULT_ARG
) -> Adyen.Amount
public func init(
    value: Foundation.Decimal,
    currencyCode: Swift.String,
    localeIdentifier: Swift.String? = $DEFAULT_ARG
) -> Adyen.Amount
public static func __derived_struct_equals(
    _: Adyen.Amount,
    _: Adyen.Amount
) -> Swift.Bool
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.Amount
public var formatted: Swift.String { get }
@_spi(AdyenInternal) public var formattedComponents: Adyen.AmountComponents { get }
@_spi(AdyenInternal) public static func <(
    _: Adyen.Amount,
    _: Adyen.Amount
) -> Swift.Bool
@_spi(AdyenInternal) public static func <=(
    _: Adyen.Amount,
    _: Adyen.Amount
) -> Swift.Bool
@_spi(AdyenInternal) public static func >=(
    _: Adyen.Amount,
    _: Adyen.Amount
) -> Swift.Bool
@_spi(AdyenInternal) public static func >(
    _: Adyen.Amount,
    _: Adyen.Amount
) -> Swift.Bool
@_spi(AdyenInternal) public struct AmountComponents
@_spi(AdyenInternal) public let formattedValue: Swift.String { get }
@_spi(AdyenInternal) public let formattedCurrencySymbol: Swift.String { get }
public protocol OpaqueEncodable : Encodable
public var encodable: Adyen.AnyEncodable { get }
public var encodable: Adyen.AnyEncodable { get }
public struct AnyEncodable : Encodable
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public struct Balance
public let availableAmount: Adyen.Amount { get }
public let transactionLimit: Adyen.Amount? { get }
public func init(
    availableAmount: Adyen.Amount,
    transactionLimit: Adyen.Amount?
) -> Adyen.Balance
public struct BrowserInfo : Encodable
public var userAgent: Swift.String? { get set }
public static func initialize(
    completion: ((Adyen.BrowserInfo?) -> Swift.Void)
) -> Swift.Void
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
@_spi(AdyenInternal) public protocol DelegatedAuthenticationAware
@_spi(AdyenInternal) public var delegatedAuthenticationData: Adyen.DelegatedAuthenticationData? { get }
public enum DelegatedAuthenticationData : Decodable, Encodable
public enum DecodingError : Equatable, Error, Hashable, LocalizedError, Sendable
public case invalidDelegatedAuthenticationData
public var errorDescription: Swift.String? { get }
public static func __derived_enum_equals(
    _: Adyen.DelegatedAuthenticationData.DecodingError,
    _: Adyen.DelegatedAuthenticationData.DecodingError
) -> Swift.Bool
public func hash(
    into: Swift.Hasher
) -> Swift.Void
public var hashValue: Swift.Int { get }
public case sdkOutput(Swift.String)
public case sdkInput(Swift.String)
public func init(
    from: any Swift.Decoder
) throws -> Adyen.DelegatedAuthenticationData
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public struct Installments : Encodable, Equatable
public enum Plan : Equatable, Hashable, RawRepresentable
public case regular
public case revolving
public func init(
    rawValue: Swift.String
) -> Adyen.Installments.Plan?
public typealias RawValue = Swift.String
public var rawValue: Swift.String { get }
public let totalMonths: Swift.Int { get }
public let plan: Adyen.Installments.Plan { get }
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    totalMonths: Swift.Int,
    plan: Adyen.Installments.Plan
) -> Adyen.Installments
public static func __derived_struct_equals(
    _: Adyen.Installments,
    _: Adyen.Installments
) -> Swift.Bool
public struct PartialPaymentOrder : Decodable, Encodable, Equatable
public struct CompactOrder : Encodable, Equatable
public let pspReference: Swift.String { get }
public let orderData: Swift.String? { get }
public static func __derived_struct_equals(
    _: Adyen.PartialPaymentOrder.CompactOrder,
    _: Adyen.PartialPaymentOrder.CompactOrder
) -> Swift.Bool
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public let compactOrder: Adyen.PartialPaymentOrder.CompactOrder { get }
public let pspReference: Swift.String { get }
public let orderData: Swift.String? { get }
public let reference: Swift.String? { get }
public let amount: Adyen.Amount? { get }
public let remainingAmount: Adyen.Amount? { get }
public let expiresAt: Foundation.Date? { get }
public func init(
    pspReference: Swift.String,
    orderData: Swift.String?,
    reference: Swift.String? = $DEFAULT_ARG,
    amount: Adyen.Amount? = $DEFAULT_ARG,
    remainingAmount: Adyen.Amount? = $DEFAULT_ARG,
    expiresAt: Foundation.Date? = $DEFAULT_ARG
) -> Adyen.PartialPaymentOrder
public func init(
    from: any Swift.Decoder
) throws -> Adyen.PartialPaymentOrder
public static func __derived_struct_equals(
    _: Adyen.PartialPaymentOrder,
    _: Adyen.PartialPaymentOrder
) -> Swift.Bool
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public struct Payment : Decodable, Encodable
public let amount: Adyen.Amount { get }
public let countryCode: Swift.String { get }
public func init(
    amount: Adyen.Amount,
    countryCode: Swift.String
) -> Adyen.Payment
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.Payment
public struct PaymentComponentData
public let amount: Adyen.Amount? { get }
public let paymentMethod: any Adyen.PaymentMethodDetails { get }
public let storePaymentMethod: Swift.Bool? { get }
public let order: Adyen.PartialPaymentOrder? { get }
public var amountToPay: Adyen.Amount? { get }
public let installments: Adyen.Installments? { get }
public let supportNativeRedirect: Swift.Bool { get }
public var shopperName: Adyen.ShopperName? { get }
public var emailAddress: Swift.String? { get }
public var telephoneNumber: Swift.String? { get }
public let browserInfo: Adyen.BrowserInfo? { get }
public var checkoutAttemptId: Swift.String? { get }
public var billingAddress: Adyen.PostalAddress? { get }
public var deliveryAddress: Adyen.PostalAddress? { get }
public var socialSecurityNumber: Swift.String? { get }
public var delegatedAuthenticationData: Adyen.DelegatedAuthenticationData? { get }
@_spi(AdyenInternal) public func init(
    paymentMethodDetails: some Adyen.PaymentMethodDetails,
    amount: Adyen.Amount?,
    order: Adyen.PartialPaymentOrder?,
    storePaymentMethod: Swift.Bool? = $DEFAULT_ARG,
    browserInfo: Adyen.BrowserInfo? = $DEFAULT_ARG,
    installments: Adyen.Installments? = $DEFAULT_ARG
) -> Adyen.PaymentComponentData
@_spi(AdyenInternal) public func replacing(
    order: Adyen.PartialPaymentOrder
) -> Adyen.PaymentComponentData
@_spi(AdyenInternal) public func replacing(
    amount: Adyen.Amount
) -> Adyen.PaymentComponentData
@_spi(AdyenInternal) public func replacing(
    checkoutAttemptId: Swift.String?
) -> Adyen.PaymentComponentData
@_spi(AdyenInternal) public func dataByAddingBrowserInfo(
    completion: ((Adyen.PaymentComponentData) -> Swift.Void)
) -> Swift.Void
public struct PostalAddress : Encodable, Equatable
public func init(
    city: Swift.String? = $DEFAULT_ARG,
    country: Swift.String? = $DEFAULT_ARG,
    houseNumberOrName: Swift.String? = $DEFAULT_ARG,
    postalCode: Swift.String? = $DEFAULT_ARG,
    stateOrProvince: Swift.String? = $DEFAULT_ARG,
    street: Swift.String? = $DEFAULT_ARG,
    apartment: Swift.String? = $DEFAULT_ARG
) -> Adyen.PostalAddress
public var city: Swift.String? { get set }
public var country: Swift.String? { get set }
public var houseNumberOrName: Swift.String? { get set }
public var postalCode: Swift.String? { get set }
public var stateOrProvince: Swift.String? { get set }
public var street: Swift.String? { get set }
public var apartment: Swift.String? { get set }
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public static func ==(
    _: Adyen.PostalAddress,
    _: Adyen.PostalAddress
) -> Swift.Bool
public var isEmpty: Swift.Bool { get }
@_spi(AdyenInternal) public func formatted(
    using: Adyen.LocalizationParameters?
) -> Swift.String
@_spi(AdyenInternal) public var formattedStreet: Swift.String { get }
@_spi(AdyenInternal) public func formattedLocation(
    using: Adyen.LocalizationParameters?
) -> Swift.String
@_spi(AdyenInternal) public func satisfies(
    requiredFields: Swift.Set<Adyen.AddressField>
) -> Swift.Bool
public struct PhoneNumber
public let value: Swift.String { get }
public let callingCode: Swift.String? { get }
public func init(
    value: Swift.String,
    callingCode: Swift.String?
) -> Adyen.PhoneNumber
public struct PrefilledShopperInformation : ShopperInformation
public var shopperName: Adyen.ShopperName? { get set }
public var emailAddress: Swift.String? { get set }
public var telephoneNumber: Swift.String? { get set }
public var phoneNumber: Adyen.PhoneNumber? { get set }
public var billingAddress: Adyen.PostalAddress? { get set }
public var deliveryAddress: Adyen.PostalAddress? { get set }
public var socialSecurityNumber: Swift.String? { get set }
public var card: Adyen.PrefilledShopperInformation.CardInformation? { get set }
public func init(
    shopperName: Adyen.ShopperName? = $DEFAULT_ARG,
    emailAddress: Swift.String? = $DEFAULT_ARG,
    telephoneNumber: Swift.String? = $DEFAULT_ARG,
    billingAddress: Adyen.PostalAddress? = $DEFAULT_ARG,
    deliveryAddress: Adyen.PostalAddress? = $DEFAULT_ARG,
    socialSecurityNumber: Swift.String? = $DEFAULT_ARG,
    card: Adyen.PrefilledShopperInformation.CardInformation? = $DEFAULT_ARG
) -> Adyen.PrefilledShopperInformation
public func init(
    shopperName: Adyen.ShopperName? = $DEFAULT_ARG,
    emailAddress: Swift.String? = $DEFAULT_ARG,
    phoneNumber: Adyen.PhoneNumber? = $DEFAULT_ARG,
    billingAddress: Adyen.PostalAddress? = $DEFAULT_ARG,
    deliveryAddress: Adyen.PostalAddress? = $DEFAULT_ARG,
    socialSecurityNumber: Swift.String? = $DEFAULT_ARG,
    card: Adyen.PrefilledShopperInformation.CardInformation? = $DEFAULT_ARG
) -> Adyen.PrefilledShopperInformation
public struct CardInformation
public let holderName: Swift.String { get }
public func init(
    holderName: Swift.String
) -> Adyen.PrefilledShopperInformation.CardInformation
public protocol ShopperInformation
public var shopperName: Adyen.ShopperName? { get }
public var emailAddress: Swift.String? { get }
public var telephoneNumber: Swift.String? { get }
public var billingAddress: Adyen.PostalAddress? { get }
public var deliveryAddress: Adyen.PostalAddress? { get }
public var socialSecurityNumber: Swift.String? { get }
@_spi(AdyenInternal) public var shopperName: Adyen.ShopperName? { get }
@_spi(AdyenInternal) public var emailAddress: Swift.String? { get }
@_spi(AdyenInternal) public var telephoneNumber: Swift.String? { get }
@_spi(AdyenInternal) public var billingAddress: Adyen.PostalAddress? { get }
@_spi(AdyenInternal) public var deliveryAddress: Adyen.PostalAddress? { get }
@_spi(AdyenInternal) public var socialSecurityNumber: Swift.String? { get }
public struct ShopperName : Decodable, Encodable, Equatable
public let firstName: Swift.String { get }
public let lastName: Swift.String { get }
public func init(
    firstName: Swift.String,
    lastName: Swift.String
) -> Adyen.ShopperName
public static func __derived_struct_equals(
    _: Adyen.ShopperName,
    _: Adyen.ShopperName
) -> Swift.Bool
public func encode(
    to: any Swift.Encoder
) throws -> Swift.Void
public func init(
    from: any Swift.Decoder
) throws -> Adyen.ShopperName
@_spi(AdyenInternal) public enum Dimensions
@_spi(AdyenInternal) public static var leastPresentableScale: CoreGraphics.CGFloat { get set }
@_spi(AdyenInternal) public static var greatestPresentableHeightScale: CoreGraphics.CGFloat { get set }
@_spi(AdyenInternal) public static var maxAdaptiveWidth: CoreGraphics.CGFloat { get set }
@_spi(AdyenInternal) public static var greatestPresentableScale: CoreGraphics.CGFloat { get }
@_spi(AdyenInternal) public static func expectedWidth(
    for: UIKit.UIWindow? = $DEFAULT_ARG
) -> CoreGraphics.CGFloat
@_spi(AdyenInternal) public static func keyWindowSize(
    for: UIKit.UIWindow? = $DEFAULT_ARG
) -> CoreFoundation.CGRect
@_spi(AdyenInternal) public struct FormItemViewBuilder
@_spi(AdyenInternal) public func build(
    with: Adyen.FormToggleItem
) -> Adyen.FormItemView<Adyen.FormToggleItem>
@_spi(AdyenInternal) public func build(
    with: Adyen.FormSplitItem
) -> Adyen.FormItemView<Adyen.FormSplitItem>
@_spi(AdyenInternal) public func build(
    with: Adyen.FormPhoneNumberItem
) -> Adyen.FormItemView<Adyen.FormPhoneNumberItem>
@_spi(AdyenInternal) public func build(
    with: Adyen.FormIssuersPickerItem
) -> Adyen.BaseFormPickerItemView<Adyen.Issuer>
@_spi(AdyenInternal) public func build(
    with: Adyen.FormTextInputItem
) -> Adyen.FormItemView<Adyen.FormTextInputItem>
@_spi(AdyenInternal) public func build(
    with: Adyen.ListItem
) -> Adyen.ListItemView
@_spi(AdyenInternal) public func build(
    with: Adyen.SelectableFormItem
) -> Adyen.FormItemView<Adyen.SelectableFormItem>
@_spi(AdyenInternal) public func build(
    with: Adyen.FormButtonItem
) -> Adyen.FormItemView<Adyen.FormButtonItem>
@_spi(AdyenInternal) public func build(
    with: Adyen.FormImageItem
) -> Adyen.FormItemView<Adyen.FormImageItem>
@_spi(AdyenInternal) public func build(
    with: Adyen.FormSeparatorItem
) -> Adyen.FormItemView<Adyen.FormSeparatorItem>
@_spi(AdyenInternal) public func build(
    with: Adyen.FormErrorItem
) -> Adyen.FormItemView<Adyen.FormErrorItem>
@_spi(AdyenInternal) public func build(
    with: Adyen.FormAddressItem
) -> Adyen.FormItemView<Adyen.FormAddressItem>
@_spi(AdyenInternal) public func build(
    with: Adyen.FormSpacerItem
) -> Adyen.FormItemView<Adyen.FormSpacerItem>
@_spi(AdyenInternal) public func build(
    with: Adyen.FormPostalCodeItem
) -> Adyen.FormItemView<Adyen.FormPostalCodeItem>
@_spi(AdyenInternal) public func build(
    with: Adyen.FormSearchButtonItem
) -> Adyen.FormItemView<Adyen.FormSearchButtonItem>
@_spi(AdyenInternal) public func build(
    with: Adyen.FormAddressPickerItem
) -> Adyen.FormItemView<Adyen.FormAddressPickerItem>
@_spi(AdyenInternal) public func build(
    with: Adyen.FormPickerItem<Value>
) -> Adyen.FormItemView<Adyen.FormPickerItem<Value>>
@_spi(AdyenInternal) public func build(
    with: Adyen.FormPhoneExtensionPickerItem
) -> Adyen.FormPhoneExtensionPickerItemView
@_spi(AdyenInternal) public static func build(
    _: any Adyen.FormItem
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public protocol FormViewProtocol
@_spi(AdyenInternal) public func add(
    item: T?
) -> Swift.Void
@_spi(AdyenInternal) public func displayValidation(

) -> Swift.Void
@_spi(AdyenInternal) public class FormViewController : AdyenCompatible, AdyenObserver, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, FormTextItemViewDelegate, FormViewProtocol, Hashable, NSCoding, NSExtensionRequestHandling, NSObjectProtocol, PreferredContentSizeConsumer, Sendable, UIActivityItemsConfigurationProviding, UIAppearanceContainer, UIContentContainer, UIFocusEnvironment, UIPasteConfigurationSupporting, UIResponderStandardEditActions, UIStateRestoring, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring, ViewControllerPresenter
@_spi(AdyenInternal) public var requiresKeyboardInput: Swift.Bool { get }
@_spi(AdyenInternal) public let style: any Adyen.ViewStyle { get }
@_spi(AdyenInternal) public var delegate: (any Adyen.ViewControllerDelegate)? { get set }
@_spi(AdyenInternal) public func init(
    style: any Adyen.ViewStyle,
    localizationParameters: Adyen.LocalizationParameters?
) -> Adyen.FormViewController
@_spi(AdyenInternal) public func viewDidLoad(

) -> Swift.Void
@_spi(AdyenInternal) public func viewWillAppear(
    _: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func viewDidAppear(
    _: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func viewWillDisappear(
    _: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func viewDidDisappear(
    _: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public var preferredContentSize: CoreFoundation.CGSize { get set }
@_spi(AdyenInternal) public func willUpdatePreferredContentSize(

) -> Swift.Void
@_spi(AdyenInternal) public func didUpdatePreferredContentSize(

) -> Swift.Void
@_spi(AdyenInternal) public func append(
    _: some Adyen.FormItem
) -> Swift.Void
@_spi(AdyenInternal) public let localizationParameters: Adyen.LocalizationParameters? { get }
@_spi(AdyenInternal) public func validate(

) -> Swift.Bool
@_spi(AdyenInternal) public func showValidation(

) -> Swift.Void
@_spi(AdyenInternal) public func resetForm(

) -> Swift.Void
@_spi(AdyenInternal) @discardableResult public func resignFirstResponder(

) -> Swift.Bool
@_spi(AdyenInternal) public func init(
    nibName: Swift.String?,
    bundle: Foundation.Bundle?
) -> Adyen.FormViewController
@_spi(AdyenInternal) public func add(
    item: (some Adyen.FormItem)?
) -> Swift.Void
@_spi(AdyenInternal) public func displayValidation(

) -> Swift.Void
@_spi(AdyenInternal) public func didReachMaximumLength(
    in: Adyen.FormTextItemView<some Adyen.FormTextItem>
) -> Swift.Void
@_spi(AdyenInternal) public func didSelectReturnKey(
    in: Adyen.FormTextItemView<some Adyen.FormTextItem>
) -> Swift.Void
public struct AddressStyle : FormValueItemStyle, TintableStyle, ViewStyle
public var title: Adyen.TextStyle { get set }
public var textField: Adyen.FormTextItemStyle { get set }
public var tintColor: UIKit.UIColor? { get set }
public var backgroundColor: UIKit.UIColor { get set }
public var separatorColor: UIKit.UIColor? { get }
public func init(
    title: Adyen.TextStyle,
    textField: Adyen.FormTextItemStyle,
    tintColor: UIKit.UIColor? = $DEFAULT_ARG,
    backgroundColor: UIKit.UIColor = $DEFAULT_ARG
) -> Adyen.AddressStyle
public func init(

) -> Adyen.AddressStyle
@_spi(AdyenInternal) public enum AddressField : CaseIterable, Equatable, Hashable, RawRepresentable
@_spi(AdyenInternal) public case street
@_spi(AdyenInternal) public case houseNumberOrName
@_spi(AdyenInternal) public case apartment
@_spi(AdyenInternal) public case postalCode
@_spi(AdyenInternal) public case city
@_spi(AdyenInternal) public case stateOrProvince
@_spi(AdyenInternal) public case country
@_spi(AdyenInternal) public func init(
    rawValue: Swift.String
) -> Adyen.AddressField?
@_spi(AdyenInternal) public typealias AllCases = [Adyen.AddressField]
@_spi(AdyenInternal) public typealias RawValue = Swift.String
@_spi(AdyenInternal) public static var allCases: [Adyen.AddressField] { get }
@_spi(AdyenInternal) public var rawValue: Swift.String { get }
@_spi(AdyenInternal) public enum AddressFormScheme
@_spi(AdyenInternal) public var children: [Adyen.AddressField] { get }
@_spi(AdyenInternal) public case item(Adyen.AddressField)
@_spi(AdyenInternal) public case split(Adyen.AddressField, Adyen.AddressField)
@_spi(AdyenInternal) public struct AddressViewModel
@_spi(AdyenInternal) public var optionalFields: [Adyen.AddressField] { get set }
@_spi(AdyenInternal) public var scheme: [Adyen.AddressFormScheme] { get set }
@_spi(AdyenInternal) public func init(
    labels: [Adyen.AddressField : Adyen.LocalizationKey],
    placeholder: [Adyen.AddressField : Adyen.LocalizationKey],
    optionalFields: [Adyen.AddressField],
    scheme: [Adyen.AddressFormScheme]
) -> Adyen.AddressViewModel
@_spi(AdyenInternal) public var requiredFields: Swift.Set<Adyen.AddressField> { get }
@_spi(AdyenInternal) public struct AddressViewModelBuilderContext
@_spi(AdyenInternal) public var countryCode: Swift.String { get set }
@_spi(AdyenInternal) public var isOptional: Swift.Bool { get set }
@_spi(AdyenInternal) public protocol AddressViewModelBuilder
@_spi(AdyenInternal) public func build(
    context: Adyen.AddressViewModelBuilderContext
) -> Adyen.AddressViewModel
@_spi(AdyenInternal) public struct DefaultAddressViewModelBuilder : AddressViewModelBuilder
@_spi(AdyenInternal) public func init(

) -> Adyen.DefaultAddressViewModelBuilder
@_spi(AdyenInternal) public func build(
    context: Adyen.AddressViewModelBuilderContext
) -> Adyen.AddressViewModel
@_spi(AdyenInternal) public final class FormAddressItem : AdyenObserver, FormItem, Hidable
@_spi(AdyenInternal) public var isHidden: Adyen.AdyenObservable<Swift.Bool> { get set }
@_spi(AdyenInternal) public var value: Adyen.PostalAddress { get set }
@_spi(AdyenInternal) public var subitems: [any Adyen.FormItem] { get }
@_spi(AdyenInternal) public var addressViewModel: Adyen.AddressViewModel { get }
@_spi(AdyenInternal) public var title: Swift.String? { get set }
@_spi(AdyenInternal) public func init(
    initialCountry: Swift.String,
    configuration: Adyen.FormAddressItem.Configuration,
    identifier: Swift.String? = $DEFAULT_ARG,
    presenter: (any Adyen.ViewControllerPresenter)?,
    addressViewModelBuilder: any Adyen.AddressViewModelBuilder
) -> Adyen.FormAddressItem
@_spi(AdyenInternal) public func updateOptionalStatus(
    isOptional: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public func reset(

) -> Swift.Void
@_spi(AdyenInternal) public struct Configuration
@_spi(AdyenInternal) public func init(
    style: Adyen.AddressStyle = $DEFAULT_ARG,
    localizationParameters: Adyen.LocalizationParameters? = $DEFAULT_ARG,
    supportedCountryCodes: [Swift.String]? = $DEFAULT_ARG,
    showsHeader: Swift.Bool = $DEFAULT_ARG
) -> Adyen.FormAddressItem.Configuration
@_spi(AdyenInternal) public final class FormPostalCodeItem : FormItem, InputViewRequiringFormItem, ValidatableFormItem
@_spi(AdyenInternal) public func init(
    style: Adyen.FormTextItemStyle = $DEFAULT_ARG,
    localizationParameters: Adyen.LocalizationParameters? = $DEFAULT_ARG
) -> Adyen.FormPostalCodeItem
@_spi(AdyenInternal) public func updateOptionalStatus(
    isOptional: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public func init(
    style: Adyen.FormTextItemStyle
) -> Adyen.FormPostalCodeItem
@_spi(AdyenInternal) public final class FormRegionPickerItem : FormItem, ValidatableFormItem
@_spi(AdyenInternal) public func init(
    preselectedRegion: Adyen.Region?,
    selectableRegions: [Adyen.Region],
    validationFailureMessage: Swift.String?,
    title: Swift.String,
    placeholder: Swift.String,
    style: Adyen.FormTextItemStyle,
    presenter: (any Adyen.ViewControllerPresenter)?,
    localizationParameters: Adyen.LocalizationParameters? = $DEFAULT_ARG,
    identifier: Swift.String? = $DEFAULT_ARG
) -> Adyen.FormRegionPickerItem
@_spi(AdyenInternal) public func updateValue(
    with: Adyen.Region?
) -> Swift.Void
@_spi(AdyenInternal) public func resetValue(

) -> Swift.Void
@_spi(AdyenInternal) public func updateValidationFailureMessage(

) -> Swift.Void
@_spi(AdyenInternal) public func updateFormattedValue(

) -> Swift.Void
@_spi(AdyenInternal) public func init(
    preselectedValue: Adyen.FormPickerElement?,
    selectableValues: [Adyen.FormPickerElement],
    title: Swift.String,
    placeholder: Swift.String,
    style: Adyen.FormTextItemStyle,
    presenter: (any Adyen.ViewControllerPresenter)?,
    localizationParameters: Adyen.LocalizationParameters? = $DEFAULT_ARG,
    identifier: Swift.String? = $DEFAULT_ARG
) -> Adyen.FormRegionPickerItem
@_spi(AdyenInternal) public final class FormAddressPickerItem : FormItem, Hidable, ValidatableFormItem
@_spi(AdyenInternal) public var isHidden: Adyen.AdyenObservable<Swift.Bool> { get set }
@_spi(AdyenInternal) public enum AddressType : Equatable, Hashable
@_spi(AdyenInternal) public case billing
@_spi(AdyenInternal) public case delivery
@_spi(AdyenInternal) public static func __derived_enum_equals(
    _: Adyen.FormAddressPickerItem.AddressType,
    _: Adyen.FormAddressPickerItem.AddressType
) -> Swift.Bool
@_spi(AdyenInternal) public func hash(
    into: Swift.Hasher
) -> Swift.Void
@_spi(AdyenInternal) public var hashValue: Swift.Int { get }
@_spi(AdyenInternal) public func placeholder(
    with: Adyen.LocalizationParameters?
) -> Swift.String
@_spi(AdyenInternal) public func title(
    with: Adyen.LocalizationParameters?
) -> Swift.String
@_spi(AdyenInternal) public var addressViewModel: Adyen.AddressViewModel { get }
@_spi(AdyenInternal) public var value: Adyen.PostalAddress? { get set }
@_spi(AdyenInternal) public func init(
    for: Adyen.FormAddressPickerItem.AddressType,
    initialCountry: Swift.String,
    supportedCountryCodes: [Swift.String]?,
    prefillAddress: Adyen.PostalAddress?,
    style: Adyen.FormComponentStyle,
    localizationParameters: Adyen.LocalizationParameters? = $DEFAULT_ARG,
    identifier: Swift.String? = $DEFAULT_ARG,
    addressViewModelBuilder: any Adyen.AddressViewModelBuilder = $DEFAULT_ARG,
    presenter: any Adyen.ViewControllerPresenter,
    lookupProvider: (any Adyen.AddressLookupProvider)? = $DEFAULT_ARG
) -> Adyen.FormAddressPickerItem
@_spi(AdyenInternal) public func updateOptionalStatus(
    isOptional: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public func isValid(

) -> Swift.Bool
@_spi(AdyenInternal) public func validationStatus(

) -> Adyen.ValidationStatus?
@_spi(AdyenInternal) public func init(
    value: Adyen.PostalAddress?,
    style: Adyen.FormTextItemStyle,
    placeholder: Swift.String
) -> Adyen.FormAddressPickerItem
@_spi(AdyenInternal) public class FormAttributedLabelItem : FormItem
@_spi(AdyenInternal) public var subitems: [any Adyen.FormItem] { get set }
@_spi(AdyenInternal) public func init(
    originalText: Swift.String,
    links: [Swift.String],
    style: Adyen.TextStyle,
    linkTextStyle: Adyen.TextStyle,
    identifier: Swift.String? = $DEFAULT_ARG
) -> Adyen.FormAttributedLabelItem
@_spi(AdyenInternal) public var identifier: Swift.String? { get set }
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public class FormContainerItem : FormItem, Hidable
@_spi(AdyenInternal) public var isHidden: Adyen.AdyenObservable<Swift.Bool> { get set }
@_spi(AdyenInternal) public var subitems: [any Adyen.FormItem] { get set }
@_spi(AdyenInternal) public func init(
    content: any Adyen.FormItem,
    padding: UIKit.UIEdgeInsets = $DEFAULT_ARG,
    identifier: Swift.String? = $DEFAULT_ARG
) -> Adyen.FormContainerItem
@_spi(AdyenInternal) public var identifier: Swift.String? { get set }
@_spi(AdyenInternal) public var content: any Adyen.FormItem { get }
@_spi(AdyenInternal) public var padding: UIKit.UIEdgeInsets { get set }
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public class FormLabelItem : FormItem
@_spi(AdyenInternal) public var subitems: [any Adyen.FormItem] { get set }
@_spi(AdyenInternal) public func init(
    text: Swift.String,
    style: Adyen.TextStyle,
    identifier: Swift.String? = $DEFAULT_ARG
) -> Adyen.FormLabelItem
@_spi(AdyenInternal) public var identifier: Swift.String? { get set }
@_spi(AdyenInternal) public var style: Adyen.TextStyle { get set }
@_spi(AdyenInternal) public var text: Swift.String { get set }
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public class FormVerticalStackItemView : AdyenCompatible, AdyenObserver, AnyFormItemView, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public var views: [any Adyen.AnyFormItemView] { get }
@_spi(AdyenInternal) public func init(
    item: FormItemType
) -> Adyen.FormVerticalStackItemView<FormItemType>
@_spi(AdyenInternal) public func init(
    item: FormItemType,
    itemSpacing: CoreGraphics.CGFloat
) -> Adyen.FormVerticalStackItemView<FormItemType>
@_spi(AdyenInternal) public var childItemViews: [any Adyen.AnyFormItemView] { get }
@_spi(AdyenInternal) public final class FormButtonItem : FormItem
@_spi(AdyenInternal) public var subitems: [any Adyen.FormItem] { get set }
@_spi(AdyenInternal) public let style: Adyen.FormButtonItemStyle { get }
@_spi(AdyenInternal) public var identifier: Swift.String? { get set }
@_spi(AdyenInternal) public var title: Swift.String? { get set }
@_spi(AdyenInternal) public var $title: Adyen.AdyenObservable<Swift.String?> { get }
@_spi(AdyenInternal) public var showsActivityIndicator: Swift.Bool { get set }
@_spi(AdyenInternal) public var $showsActivityIndicator: Adyen.AdyenObservable<Swift.Bool> { get }
@_spi(AdyenInternal) public var enabled: Swift.Bool { get set }
@_spi(AdyenInternal) public var $enabled: Adyen.AdyenObservable<Swift.Bool> { get }
@_spi(AdyenInternal) public var buttonSelectionHandler: (() -> Swift.Void)? { get set }
@_spi(AdyenInternal) public func init(
    style: Adyen.FormButtonItemStyle
) -> Adyen.FormButtonItem
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
public struct FormButtonItemStyle : ViewStyle
public var button: Adyen.ButtonStyle { get set }
public var backgroundColor: UIKit.UIColor { get set }
public func init(
    button: Adyen.ButtonStyle
) -> Adyen.FormButtonItemStyle
public func init(
    button: Adyen.ButtonStyle,
    background: UIKit.UIColor
) -> Adyen.FormButtonItemStyle
public static func main(
    font: UIKit.UIFont,
    textColor: UIKit.UIColor,
    mainColor: UIKit.UIColor,
    cornerRadius: CoreGraphics.CGFloat
) -> Adyen.FormButtonItemStyle
public static func main(
    font: UIKit.UIFont,
    textColor: UIKit.UIColor,
    mainColor: UIKit.UIColor
) -> Adyen.FormButtonItemStyle
public static func main(
    font: UIKit.UIFont,
    textColor: UIKit.UIColor,
    mainColor: UIKit.UIColor,
    cornerRounding: Adyen.CornerRounding
) -> Adyen.FormButtonItemStyle
public static func secondary(
    font: UIKit.UIFont,
    textColor: UIKit.UIColor
) -> Adyen.FormButtonItemStyle
@_spi(AdyenInternal) public final class FormSearchButtonItem : FormItem
@_spi(AdyenInternal) public var subitems: [any Adyen.FormItem] { get set }
@_spi(AdyenInternal) public let style: any Adyen.ViewStyle { get }
@_spi(AdyenInternal) public var identifier: Swift.String? { get set }
@_spi(AdyenInternal) public var placeholder: Swift.String? { get set }
@_spi(AdyenInternal) public var $placeholder: Adyen.AdyenObservable<Swift.String?> { get }
@_spi(AdyenInternal) public let selectionHandler: () -> Swift.Void { get }
@_spi(AdyenInternal) public func init(
    placeholder: Swift.String,
    style: any Adyen.ViewStyle,
    identifier: Swift.String,
    selectionHandler: () -> Swift.Void
) -> Adyen.FormSearchButtonItem
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public final class FormErrorItem : FormItem, Hidable
@_spi(AdyenInternal) public var message: Swift.String? { get set }
@_spi(AdyenInternal) public var $message: Adyen.AdyenObservable<Swift.String?> { get }
@_spi(AdyenInternal) public let iconName: Swift.String { get }
@_spi(AdyenInternal) public let style: Adyen.FormErrorItemStyle { get }
@_spi(AdyenInternal) public var identifier: Swift.String? { get set }
@_spi(AdyenInternal) public var isHidden: Adyen.AdyenObservable<Swift.Bool> { get set }
@_spi(AdyenInternal) public var subitems: [any Adyen.FormItem] { get set }
@_spi(AdyenInternal) public func init(
    message: Swift.String? = $DEFAULT_ARG,
    iconName: Swift.String = $DEFAULT_ARG,
    style: Adyen.FormErrorItemStyle = $DEFAULT_ARG
) -> Adyen.FormErrorItem
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
public struct FormErrorItemStyle : ViewStyle
public var message: Adyen.TextStyle { get set }
public var cornerRounding: Adyen.CornerRounding { get set }
public var backgroundColor: UIKit.UIColor { get set }
public func init(
    message: Adyen.TextStyle
) -> Adyen.FormErrorItemStyle
public func init(

) -> Adyen.FormErrorItemStyle
@_spi(AdyenInternal) public class FormImageItem : FormItem, Hidable
@_spi(AdyenInternal) public var isHidden: Adyen.AdyenObservable<Swift.Bool> { get set }
@_spi(AdyenInternal) public var subitems: [any Adyen.FormItem] { get set }
@_spi(AdyenInternal) public var name: Swift.String { get set }
@_spi(AdyenInternal) public var identifier: Swift.String? { get set }
@_spi(AdyenInternal) public var size: CoreFoundation.CGSize { get set }
@_spi(AdyenInternal) public var style: Adyen.ImageStyle? { get set }
@_spi(AdyenInternal) public func init(
    name: Swift.String,
    size: CoreFoundation.CGSize? = $DEFAULT_ARG,
    style: Adyen.ImageStyle? = $DEFAULT_ARG,
    identifier: Swift.String? = $DEFAULT_ARG
) -> Adyen.FormImageItem
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public protocol Hidable
@_spi(AdyenInternal) public var isHidden: Adyen.AdyenObservable<Swift.Bool> { get }
@_spi(AdyenInternal) public var isVisible: Swift.Bool { get set }
@_spi(AdyenInternal) public protocol FormItem
@_spi(AdyenInternal) public var identifier: Swift.String? { get set }
@_spi(AdyenInternal) public var subitems: [any Adyen.FormItem] { get }
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public func addingDefaultMargins(

) -> Adyen.FormContainerItem
@_spi(AdyenInternal) public var flatSubitems: [any Adyen.FormItem] { get }
@_spi(AdyenInternal) public protocol ValidatableFormItem : FormItem
@_spi(AdyenInternal) public var validationFailureMessage: Swift.String? { get set }
@_spi(AdyenInternal) public func isValid(

) -> Swift.Bool
@_spi(AdyenInternal) public protocol InputViewRequiringFormItem : FormItem
@_spi(AdyenInternal) public class FormItemView : AdyenCompatible, AdyenObserver, AnyFormItemView, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public let item: ItemType { get }
@_spi(AdyenInternal) public func init(
    item: ItemType
) -> Adyen.FormItemView<ItemType>
@_spi(AdyenInternal) public var childItemViews: [any Adyen.AnyFormItemView] { get }
@_spi(AdyenInternal) public func reset(

) -> Swift.Void
@_spi(AdyenInternal) public func init(
    frame: CoreFoundation.CGRect
) -> Adyen.FormItemView<ItemType>
@_spi(AdyenInternal) public protocol AnyFormItemView
@_spi(AdyenInternal) public var parentItemView: (any Adyen.AnyFormItemView)? { get }
@_spi(AdyenInternal) public var childItemViews: [any Adyen.AnyFormItemView] { get }
@_spi(AdyenInternal) public func reset(

) -> Swift.Void
@_spi(AdyenInternal) public var parentItemView: (any Adyen.AnyFormItemView)? { get }
@_spi(AdyenInternal) public var flatSubitemViews: [any Adyen.AnyFormItemView] { get }
@_spi(AdyenInternal) public final class FormPhoneNumberItem : FormItem, InputViewRequiringFormItem, ValidatableFormItem
@_spi(AdyenInternal) public var prefix: Swift.String { get }
@_spi(AdyenInternal) public var phoneNumber: Swift.String { get }
@_spi(AdyenInternal) public func init(
    phoneNumber: Adyen.PhoneNumber?,
    selectableValues: [Adyen.PhoneExtension],
    style: Adyen.FormTextItemStyle,
    localizationParameters: Adyen.LocalizationParameters? = $DEFAULT_ARG,
    presenter: Adyen.WeakReferenceViewControllerPresenter
) -> Adyen.FormPhoneNumberItem
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public func init(
    style: Adyen.FormTextItemStyle
) -> Adyen.FormPhoneNumberItem
@_spi(AdyenInternal) public final class FormPhoneExtensionPickerItem : FormItem, ValidatableFormItem
@_spi(AdyenInternal) public func init(
    preselectedExtension: Adyen.PhoneExtension?,
    selectableExtensions: [Adyen.PhoneExtension],
    validationFailureMessage: Swift.String?,
    style: Adyen.FormTextItemStyle,
    presenter: Adyen.WeakReferenceViewControllerPresenter,
    localizationParameters: Adyen.LocalizationParameters? = $DEFAULT_ARG,
    identifier: Swift.String? = $DEFAULT_ARG
) -> Adyen.FormPhoneExtensionPickerItem
@_spi(AdyenInternal) public func resetValue(

) -> Swift.Void
@_spi(AdyenInternal) public func updateValidationFailureMessage(

) -> Swift.Void
@_spi(AdyenInternal) public func updateFormattedValue(

) -> Swift.Void
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public func init(
    preselectedValue: Adyen.PhoneExtension?,
    selectableValues: [Adyen.PhoneExtension],
    title: Swift.String,
    placeholder: Swift.String,
    style: Adyen.FormTextItemStyle,
    presenter: (any Adyen.ViewControllerPresenter)?,
    localizationParameters: Adyen.LocalizationParameters? = $DEFAULT_ARG,
    identifier: Swift.String? = $DEFAULT_ARG
) -> Adyen.FormPhoneExtensionPickerItem
@_spi(AdyenInternal) public final class FormPhoneExtensionPickerItemView : AdyenCompatible, AdyenObserver, AnyFormItemView, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public var accessibilityIdentifier: Swift.String? { get set }
@_spi(AdyenInternal) public func init(
    item: Adyen.FormPhoneExtensionPickerItem
) -> Adyen.FormPhoneExtensionPickerItemView
@_spi(AdyenInternal) public final class FormSegmentedControlItem : FormItem
@_spi(AdyenInternal) public var subitems: [any Adyen.FormItem] { get set }
@_spi(AdyenInternal) public var identifier: Swift.String? { get set }
@_spi(AdyenInternal) public var style: Adyen.SegmentedControlStyle { get set }
@_spi(AdyenInternal) public var selectionHandler: ((Swift.Int) -> Swift.Void)? { get set }
@_spi(AdyenInternal) public func init(
    items: [Swift.String],
    style: Adyen.SegmentedControlStyle,
    identifier: Swift.String? = $DEFAULT_ARG
) -> Adyen.FormSegmentedControlItem
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public class SelectableFormItem : FormItem, Hidable
@_spi(AdyenInternal) public var subitems: [any Adyen.FormItem] { get set }
@_spi(AdyenInternal) public var title: Swift.String { get set }
@_spi(AdyenInternal) public var imageUrl: Foundation.URL? { get set }
@_spi(AdyenInternal) public var isSelected: Swift.Bool { get set }
@_spi(AdyenInternal) public var $isSelected: Adyen.AdyenObservable<Swift.Bool> { get }
@_spi(AdyenInternal) public var selectionHandler: (() -> Swift.Void)? { get set }
@_spi(AdyenInternal) public var identifier: Swift.String? { get set }
@_spi(AdyenInternal) public let accessibilityLabel: Swift.String { get }
@_spi(AdyenInternal) public let style: Adyen.SelectableFormItemStyle { get }
@_spi(AdyenInternal) public var isHidden: Adyen.AdyenObservable<Swift.Bool> { get set }
@_spi(AdyenInternal) public func init(
    title: Swift.String,
    imageUrl: Foundation.URL? = $DEFAULT_ARG,
    isSelected: Swift.Bool = $DEFAULT_ARG,
    style: Adyen.SelectableFormItemStyle,
    identifier: Swift.String? = $DEFAULT_ARG,
    accessibilityLabel: Swift.String? = $DEFAULT_ARG,
    selectionHandler: (() -> Swift.Void)? = $DEFAULT_ARG
) -> Adyen.SelectableFormItem
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public struct SelectableFormItemStyle : Equatable, ViewStyle
@_spi(AdyenInternal) public var title: Adyen.TextStyle { get set }
@_spi(AdyenInternal) public var imageStyle: Adyen.ImageStyle { get set }
@_spi(AdyenInternal) public var backgroundColor: UIKit.UIColor { get set }
@_spi(AdyenInternal) public func init(
    title: Adyen.TextStyle
) -> Adyen.SelectableFormItemStyle
@_spi(AdyenInternal) public static func ==(
    _: Adyen.SelectableFormItemStyle,
    _: Adyen.SelectableFormItemStyle
) -> Swift.Bool
@_spi(AdyenInternal) public final class SelectableFormItemView : AdyenCompatible, AdyenObserver, AnyFormItemView, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public func init(
    item: Adyen.SelectableFormItem
) -> Adyen.SelectableFormItemView
@_spi(AdyenInternal) public func didMoveToWindow(

) -> Swift.Void
@_spi(AdyenInternal) public func layoutSubviews(

) -> Swift.Void
@_spi(AdyenInternal) public final class FormSeparatorItem : FormItem
@_spi(AdyenInternal) public var subitems: [any Adyen.FormItem] { get set }
@_spi(AdyenInternal) public let color: UIKit.UIColor { get }
@_spi(AdyenInternal) public var identifier: Swift.String? { get set }
@_spi(AdyenInternal) public func init(
    color: UIKit.UIColor
) -> Adyen.FormSeparatorItem
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public final class FormSpacerItem : FormItem
@_spi(AdyenInternal) public var identifier: Swift.String? { get set }
@_spi(AdyenInternal) public let subitems: [any Adyen.FormItem] { get }
@_spi(AdyenInternal) public let standardSpaceMultiplier: Swift.Int { get }
@_spi(AdyenInternal) public func init(
    numberOfSpaces: Swift.Int = $DEFAULT_ARG
) -> Adyen.FormSpacerItem
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public final class FormSpacerItemView : AdyenCompatible, AdyenObserver, AnyFormItemView, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public final class FormSplitItem : FormItem
@_spi(AdyenInternal) public let style: any Adyen.ViewStyle { get }
@_spi(AdyenInternal) public var identifier: Swift.String? { get set }
@_spi(AdyenInternal) public var subitems: [any Adyen.FormItem] { get }
@_spi(AdyenInternal) public func init(
    items: any Adyen.FormItem...,
    style: any Adyen.ViewStyle
) -> Adyen.FormSplitItem
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public final class FormTextInputItem : FormItem, Hidable, InputViewRequiringFormItem, ValidatableFormItem
@_spi(AdyenInternal) public var isHidden: Adyen.AdyenObservable<Swift.Bool> { get set }
@_spi(AdyenInternal) public var isEnabled: Swift.Bool { get set }
@_spi(AdyenInternal) public var $isEnabled: Adyen.AdyenObservable<Swift.Bool> { get }
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public func init(
    style: Adyen.FormTextItemStyle = $DEFAULT_ARG
) -> Adyen.FormTextInputItem
@_spi(AdyenInternal) public func isValid(

) -> Swift.Bool
@_spi(AdyenInternal) public func focus(

) -> Swift.Void
@_spi(AdyenInternal) public final class FormTextInputItemView : AdyenCompatible, AdyenObserver, AnyFormItemView, AnyFormTextItemView, AnyFormValidatableValueItemView, AnyFormValueItemView, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITextFieldDelegate, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public func init(
    item: Adyen.FormTextInputItem
) -> Adyen.FormTextInputItemView
@_spi(AdyenInternal) public class FormTextItem : FormItem, InputViewRequiringFormItem, ValidatableFormItem
@_spi(AdyenInternal) public var placeholder: Swift.String? { get set }
@_spi(AdyenInternal) public var $placeholder: Adyen.AdyenObservable<Swift.String?> { get }
@_spi(AdyenInternal) public var value: Swift.String { get set }
@_spi(AdyenInternal) public var formatter: (any Adyen.Formatter)? { get set }
@_spi(AdyenInternal) public var validator: (any Adyen.Validator)? { get set }
@_spi(AdyenInternal) public var autocapitalizationType: UIKit.UITextAutocapitalizationType { get set }
@_spi(AdyenInternal) public var autocorrectionType: UIKit.UITextAutocorrectionType { get set }
@_spi(AdyenInternal) public var keyboardType: UIKit.UIKeyboardType { get set }
@_spi(AdyenInternal) public var contentType: UIKit.UITextContentType? { get set }
@_spi(AdyenInternal) public var allowsValidationWhileEditing: Swift.Bool { get set }
@_spi(AdyenInternal) public var onDidBeginEditing: (() -> Swift.Void)? { get set }
@_spi(AdyenInternal) public var onDidEndEditing: (() -> Swift.Void)? { get set }
@_spi(AdyenInternal) public func init(
    style: Adyen.FormTextItemStyle
) -> Adyen.FormTextItem
@_spi(AdyenInternal) public func isValid(

) -> Swift.Bool
@_spi(AdyenInternal) public func validationStatus(

) -> Adyen.ValidationStatus?
public struct FormTextItemStyle : FormValueItemStyle, TintableStyle, ViewStyle
public var title: Adyen.TextStyle { get set }
public var text: Adyen.TextStyle { get set }
public var placeholderText: Adyen.TextStyle? { get set }
public var icon: Adyen.ImageStyle { get set }
public var tintColor: UIKit.UIColor? { get set }
public var backgroundColor: UIKit.UIColor { get set }
public var errorColor: UIKit.UIColor { get set }
public var separatorColor: UIKit.UIColor? { get set }
public func init(
    title: Adyen.TextStyle,
    text: Adyen.TextStyle,
    placeholderText: Adyen.TextStyle? = $DEFAULT_ARG,
    icon: Adyen.ImageStyle
) -> Adyen.FormTextItemStyle
public func init(
    tintColor: UIKit.UIColor
) -> Adyen.FormTextItemStyle
public func init(

) -> Adyen.FormTextItemStyle
@_spi(AdyenInternal) public protocol FormTextItemViewDelegate
@_spi(AdyenInternal) public func didReachMaximumLength(
    in: Adyen.FormTextItemView<T>
) -> Swift.Void
@_spi(AdyenInternal) public func didSelectReturnKey(
    in: Adyen.FormTextItemView<T>
) -> Swift.Void
@_spi(AdyenInternal) public protocol AnyFormTextItemView : AnyFormItemView
@_spi(AdyenInternal) public var delegate: (any Adyen.FormTextItemViewDelegate)? { get set }
@_spi(AdyenInternal) public class FormTextItemView : AdyenCompatible, AdyenObserver, AnyFormItemView, AnyFormTextItemView, AnyFormValidatableValueItemView, AnyFormValueItemView, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITextFieldDelegate, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public var accessibilityLabelView: UIKit.UIView? { get }
@_spi(AdyenInternal) public func init(
    item: ItemType
) -> Adyen.FormTextItemView<ItemType>
@_spi(AdyenInternal) public func reset(

) -> Swift.Void
@_spi(AdyenInternal) public var delegate: (any Adyen.FormTextItemViewDelegate)? { get set }
@_spi(AdyenInternal) public var textField: Adyen.TextField { get set }
@_spi(AdyenInternal) public var accessory: Adyen.FormTextItemView<ItemType>.AccessoryType { get set }
@_spi(AdyenInternal) public var isValid: Swift.Bool { get }
@_spi(AdyenInternal) public func showValidation(

) -> Swift.Void
@_spi(AdyenInternal) public func configureSeparatorView(

) -> Swift.Void
@_spi(AdyenInternal) public var lastBaselineAnchor: UIKit.NSLayoutYAxisAnchor { get }
@_spi(AdyenInternal) public var canBecomeFirstResponder: Swift.Bool { get }
@_spi(AdyenInternal) @discardableResult public func becomeFirstResponder(

) -> Swift.Bool
@_spi(AdyenInternal) @discardableResult public func resignFirstResponder(

) -> Swift.Bool
@_spi(AdyenInternal) public var isFirstResponder: Swift.Bool { get }
@_spi(AdyenInternal) public func textFieldShouldReturn(
    _: UIKit.UITextField
) -> Swift.Bool
@_spi(AdyenInternal) public func textFieldDidEndEditing(
    _: UIKit.UITextField
) -> Swift.Void
@_spi(AdyenInternal) public func textFieldDidBeginEditing(
    _: UIKit.UITextField
) -> Swift.Void
@_spi(AdyenInternal) public func updateValidationStatus(
    forced: Swift.Bool = $DEFAULT_ARG
) -> Swift.Void
@_spi(AdyenInternal) public func notifyDelegateOfMaxLengthIfNeeded(

) -> Swift.Void
@_spi(AdyenInternal) public enum AccessoryType : Equatable
@_spi(AdyenInternal) public case invalid
@_spi(AdyenInternal) public case valid
@_spi(AdyenInternal) public case customView(UIKit.UIView)
@_spi(AdyenInternal) public case none
@_spi(AdyenInternal) public static func __derived_enum_equals(
    _: Adyen.FormTextItemView<ItemType>.AccessoryType,
    _: Adyen.FormTextItemView<ItemType>.AccessoryType
) -> Swift.Bool
@_spi(AdyenInternal) public final class TextField : AdyenCompatible, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UIContentSizeCategoryAdjusting, UIContextMenuInteractionDelegate, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UIKeyInput, UILargeContentViewerItem, UILetterformAwareAdjusting, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITextDraggable, UITextDroppable, UITextInput, UITextInputTraits, UITextPasteConfigurationSupporting, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public var allowsEditingActions: Swift.Bool { get set }
@_spi(AdyenInternal) public var accessibilityValue: Swift.String? { get set }
@_spi(AdyenInternal) public var font: UIKit.UIFont? { get set }
@_spi(AdyenInternal) public func canPerformAction(
    _: ObjectiveC.Selector,
    withSender: Any?
) -> Swift.Bool
@_spi(AdyenInternal) public func init(
    frame: CoreFoundation.CGRect
) -> Adyen.TextField
@_spi(AdyenInternal) public func init(
    coder: Foundation.NSCoder
) -> Adyen.TextField?
@_spi(AdyenInternal) public func apply(
    placeholderText: Swift.String?,
    with: Adyen.TextStyle?
) -> Swift.Void
@_spi(AdyenInternal) public final class FormToggleItem : FormItem, Hidable
@_spi(AdyenInternal) public var isHidden: Adyen.AdyenObservable<Swift.Bool> { get set }
@_spi(AdyenInternal) public func init(
    style: Adyen.FormToggleItemStyle = $DEFAULT_ARG
) -> Adyen.FormToggleItem
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
public struct FormToggleItemStyle : FormValueItemStyle, TintableStyle, ViewStyle
public var title: Adyen.TextStyle { get set }
public var tintColor: UIKit.UIColor? { get set }
public var separatorColor: UIKit.UIColor? { get set }
public var backgroundColor: UIKit.UIColor { get set }
public func init(
    title: Adyen.TextStyle
) -> Adyen.FormToggleItemStyle
public func init(

) -> Adyen.FormToggleItemStyle
@_spi(AdyenInternal) public final class FormToggleItemView : AdyenCompatible, AdyenObserver, AnyFormItemView, AnyFormValueItemView, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public func init(
    item: Adyen.FormToggleItem
) -> Adyen.FormToggleItemView
@_spi(AdyenInternal) @discardableResult public func accessibilityActivate(

) -> Swift.Bool
@_spi(AdyenInternal) public func reset(

) -> Swift.Void
@_spi(AdyenInternal) public protocol PickerElement : CustomStringConvertible, Equatable
@_spi(AdyenInternal) public var identifier: Swift.String { get }
@_spi(AdyenInternal) public struct BasePickerElement : CustomStringConvertible, Equatable, PickerElement
@_spi(AdyenInternal) public let identifier: Swift.String { get }
@_spi(AdyenInternal) public let element: ElementType { get }
@_spi(AdyenInternal) public static func ==(
    _: Adyen.BasePickerElement<ElementType>,
    _: Adyen.BasePickerElement<ElementType>
) -> Swift.Bool
@_spi(AdyenInternal) public var description: Swift.String { get }
@_spi(AdyenInternal) public func init(
    identifier: Swift.String,
    element: ElementType
) -> Adyen.BasePickerElement<ElementType>
@_spi(AdyenInternal) public class BaseFormPickerItem : FormItem, Hidable, InputViewRequiringFormItem
@_spi(AdyenInternal) public var isHidden: Adyen.AdyenObservable<Swift.Bool> { get set }
@_spi(AdyenInternal) public var selectableValues: [Adyen.BasePickerElement<ElementType>] { get set }
@_spi(AdyenInternal) public var $selectableValues: Adyen.AdyenObservable<[Adyen.BasePickerElement<ElementType>]> { get }
@_spi(AdyenInternal) public func init(
    preselectedValue: Adyen.BasePickerElement<ElementType>,
    selectableValues: [Adyen.BasePickerElement<ElementType>],
    style: Adyen.FormTextItemStyle
) -> Adyen.BaseFormPickerItem<ElementType>
@_spi(AdyenInternal) public class BaseFormPickerItemView : AdyenCompatible, AdyenObserver, AnyFormItemView, AnyFormValueItemView, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPickerViewDataSource, UIPickerViewDelegate, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public func init(
    item: Adyen.BaseFormPickerItem<T>
) -> Adyen.BaseFormPickerItemView<T>
@_spi(AdyenInternal) public var canBecomeFirstResponder: Swift.Bool { get }
@_spi(AdyenInternal) @discardableResult public func becomeFirstResponder(

) -> Swift.Bool
@_spi(AdyenInternal) @discardableResult public func resignFirstResponder(

) -> Swift.Bool
@_spi(AdyenInternal) public func initialize(

) -> Swift.Void
@_spi(AdyenInternal) public var inputControl: any Adyen.PickerTextInputControl { get set }
@_spi(AdyenInternal) public func numberOfComponents(
    in: UIKit.UIPickerView
) -> Swift.Int
@_spi(AdyenInternal) public func pickerView(
    _: UIKit.UIPickerView,
    numberOfRowsInComponent: Swift.Int
) -> Swift.Int
@_spi(AdyenInternal) public func pickerView(
    _: UIKit.UIPickerView,
    titleForRow: Swift.Int,
    forComponent: Swift.Int
) -> Swift.String?
@_spi(AdyenInternal) public func pickerView(
    _: UIKit.UIPickerView,
    didSelectRow: Swift.Int,
    inComponent: Swift.Int
) -> Swift.Void
@_spi(AdyenInternal) public protocol PickerTextInputControl
@_spi(AdyenInternal) public var onDidResignFirstResponder: (() -> Swift.Void)? { get set }
@_spi(AdyenInternal) public var onDidBecomeFirstResponder: (() -> Swift.Void)? { get set }
@_spi(AdyenInternal) public var onDidTap: (() -> Swift.Void)? { get set }
@_spi(AdyenInternal) public var showChevron: Swift.Bool { get set }
@_spi(AdyenInternal) public var label: Swift.String? { get set }
@_spi(AdyenInternal) public typealias IssuerPickerItem = Adyen.BasePickerElement<Adyen.Issuer>
@_spi(AdyenInternal) public final class FormIssuersPickerItem : FormItem, Hidable, InputViewRequiringFormItem
@_spi(AdyenInternal) public func init(
    preselectedValue: Adyen.IssuerPickerItem,
    selectableValues: [Adyen.IssuerPickerItem],
    style: Adyen.FormTextItemStyle
) -> Adyen.FormIssuersPickerItem
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
public protocol FormValueItemStyle : TintableStyle, ViewStyle
public var separatorColor: UIKit.UIColor? { get }
public var title: Adyen.TextStyle { get }
@_spi(AdyenInternal) public class FormValueItem : FormItem
@_spi(AdyenInternal) public var subitems: [any Adyen.FormItem] { get }
@_spi(AdyenInternal) public var identifier: Swift.String? { get set }
@_spi(AdyenInternal) public var value: ValueType { get set }
@_spi(AdyenInternal) public var publisher: Adyen.AdyenObservable<ValueType> { get set }
@_spi(AdyenInternal) public var style: StyleType { get set }
@_spi(AdyenInternal) public var title: Swift.String? { get set }
@_spi(AdyenInternal) public var $title: Adyen.AdyenObservable<Swift.String?> { get }
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public class FormValueItemView : AdyenCompatible, AdyenObserver, AnyFormItemView, AnyFormValueItemView, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public var titleLabel: UIKit.UILabel { get set }
@_spi(AdyenInternal) public func init(
    item: ItemType
) -> Adyen.FormValueItemView<ValueType, Style, ItemType>
@_spi(AdyenInternal) public func didAddSubview(
    _: UIKit.UIView
) -> Swift.Void
@_spi(AdyenInternal) public var isEditing: Swift.Bool { get set }
@_spi(AdyenInternal) public var showsSeparator: Swift.Bool { get set }
@_spi(AdyenInternal) public func configureSeparatorView(

) -> Swift.Void
@_spi(AdyenInternal) public protocol AnyFormValueItemView : AnyFormItemView
@_spi(AdyenInternal) public var isEditing: Swift.Bool { get set }
@_spi(AdyenInternal) public protocol FormPickable : Equatable
@_spi(AdyenInternal) public var identifier: Swift.String { get }
@_spi(AdyenInternal) public var icon: UIKit.UIImage? { get }
@_spi(AdyenInternal) public var title: Swift.String { get }
@_spi(AdyenInternal) public var subtitle: Swift.String? { get }
@_spi(AdyenInternal) public var trailingText: Swift.String? { get }
@_spi(AdyenInternal) public struct FormPickerElement : Equatable, FormPickable
@_spi(AdyenInternal) public let identifier: Swift.String { get }
@_spi(AdyenInternal) public let icon: UIKit.UIImage? { get }
@_spi(AdyenInternal) public let title: Swift.String { get }
@_spi(AdyenInternal) public let subtitle: Swift.String? { get }
@_spi(AdyenInternal) public let trailingText: Swift.String? { get }
@_spi(AdyenInternal) public func init(
    identifier: Swift.String,
    icon: UIKit.UIImage? = $DEFAULT_ARG,
    title: Swift.String,
    subtitle: Swift.String? = $DEFAULT_ARG,
    trailingText: Swift.String? = $DEFAULT_ARG
) -> Adyen.FormPickerElement
@_spi(AdyenInternal) public static func __derived_struct_equals(
    _: Adyen.FormPickerElement,
    _: Adyen.FormPickerElement
) -> Swift.Bool
@_spi(AdyenInternal) public class FormPickerItem : FormItem, ValidatableFormItem
@_spi(AdyenInternal) public let localizationParameters: Adyen.LocalizationParameters? { get }
@_spi(AdyenInternal) public var isOptional: Swift.Bool { get }
@_spi(AdyenInternal) public var value: Value? { get set }
@_spi(AdyenInternal) public var selectableValues: [Value] { get set }
@_spi(AdyenInternal) public var $selectableValues: Adyen.AdyenObservable<[Value]> { get }
@_spi(AdyenInternal) public func init(
    preselectedValue: Value?,
    selectableValues: [Value],
    title: Swift.String,
    placeholder: Swift.String,
    style: Adyen.FormTextItemStyle,
    presenter: (any Adyen.ViewControllerPresenter)?,
    localizationParameters: Adyen.LocalizationParameters? = $DEFAULT_ARG,
    identifier: Swift.String? = $DEFAULT_ARG
) -> Adyen.FormPickerItem<Value>
@_spi(AdyenInternal) public func updateOptionalStatus(
    isOptional: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func resetValue(

) -> Swift.Void
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public func isValid(

) -> Swift.Bool
@_spi(AdyenInternal) public func validationStatus(

) -> Adyen.ValidationStatus?
@_spi(AdyenInternal) public func updateValidationFailureMessage(

) -> Swift.Void
@_spi(AdyenInternal) public func updateFormattedValue(

) -> Swift.Void
@_spi(AdyenInternal) public func init(
    value: Value?,
    style: Adyen.FormTextItemStyle,
    placeholder: Swift.String
) -> Adyen.FormPickerItem<Value>
@_spi(AdyenInternal) public class FormPickerItemView : AdyenCompatible, AdyenObserver, AnyFormItemView, AnyFormValidatableValueItemView, AnyFormValueItemView, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public func showValidation(

) -> Swift.Void
@_spi(AdyenInternal) public func reset(

) -> Swift.Void
@_spi(AdyenInternal) public final class FormPickerSearchViewController : AdyenCompatible, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSExtensionRequestHandling, NSObjectProtocol, Sendable, UIActivityItemsConfigurationProviding, UIAppearanceContainer, UIContentContainer, UIFocusEnvironment, UIPasteConfigurationSupporting, UIResponderStandardEditActions, UIStateRestoring, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring, ViewControllerPresenter
@_spi(AdyenInternal) public func init(
    localizationParameters: Adyen.LocalizationParameters? = $DEFAULT_ARG,
    style: Adyen.FormPickerSearchViewController<Option>.Style = $DEFAULT_ARG,
    title: Swift.String?,
    options: [Option],
    selectionHandler: (Option) -> Swift.Void
) -> Adyen.FormPickerSearchViewController<Option>
@_spi(AdyenInternal) public func init(
    navigationBarClass: Swift.AnyClass?,
    toolbarClass: Swift.AnyClass?
) -> Adyen.FormPickerSearchViewController<Option>
@_spi(AdyenInternal) public func init(
    rootViewController: UIKit.UIViewController
) -> Adyen.FormPickerSearchViewController<Option>
@_spi(AdyenInternal) public func init(
    nibName: Swift.String?,
    bundle: Foundation.Bundle?
) -> Adyen.FormPickerSearchViewController<Option>
@_spi(AdyenInternal) public class EmptyView : AdyenCompatible, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, SearchResultsEmptyView, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public var searchTerm: Swift.String { get set }
@_spi(AdyenInternal) public struct Style : ViewStyle
@_spi(AdyenInternal) public var title: Adyen.TextStyle { get set }
@_spi(AdyenInternal) public var subtitle: Adyen.TextStyle { get set }
@_spi(AdyenInternal) public var backgroundColor: UIKit.UIColor { get set }
@_spi(AdyenInternal) public func init(

) -> Adyen.FormPickerSearchViewController<Option>.EmptyView.Style
@_spi(AdyenInternal) public struct Style : ViewStyle
@_spi(AdyenInternal) public var backgroundColor: UIKit.UIColor { get set }
@_spi(AdyenInternal) public var emptyView: Adyen.FormPickerSearchViewController<Option>.EmptyView.Style { get set }
@_spi(AdyenInternal) public func init(

) -> Adyen.FormPickerSearchViewController<Option>.Style
@_spi(AdyenInternal) public class FormSelectableValueItem : FormItem, ValidatableFormItem
@_spi(AdyenInternal) public let placeholder: Swift.String { get }
@_spi(AdyenInternal) public var selectionHandler: () -> Swift.Void { get set }
@_spi(AdyenInternal) public var formattedValue: Swift.String? { get set }
@_spi(AdyenInternal) public var $formattedValue: Adyen.AdyenObservable<Swift.String?> { get }
@_spi(AdyenInternal) public func init(
    value: ValueType,
    style: Adyen.FormTextItemStyle,
    placeholder: Swift.String
) -> Adyen.FormSelectableValueItem<ValueType>
@_spi(AdyenInternal) public class FormSelectableValueItemView : AdyenCompatible, AdyenObserver, AnyFormItemView, AnyFormValidatableValueItemView, AnyFormValueItemView, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public func init(
    item: ItemType
) -> Adyen.FormSelectableValueItemView<ValueType, ItemType>
@_spi(AdyenInternal) public class FormValidatableValueItem : FormItem, ValidatableFormItem
@_spi(AdyenInternal) public var validationFailureMessage: Swift.String? { get set }
@_spi(AdyenInternal) public var $validationFailureMessage: Adyen.AdyenObservable<Swift.String?> { get }
@_spi(AdyenInternal) public var onDidShowValidationError: ((any Adyen.ValidationError) -> Swift.Void)? { get set }
@_spi(AdyenInternal) public func isValid(

) -> Swift.Bool
@_spi(AdyenInternal) public func validationStatus(

) -> Adyen.ValidationStatus?
@_spi(AdyenInternal) public class FormValidatableValueItemView : AdyenCompatible, AdyenObserver, AnyFormItemView, AnyFormValidatableValueItemView, AnyFormValueItemView, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public func init(
    item: ItemType
) -> Adyen.FormValidatableValueItemView<ValueType, ItemType>
@_spi(AdyenInternal) public func configureSeparatorView(

) -> Swift.Void
@_spi(AdyenInternal) public var isValid: Swift.Bool { get }
@_spi(AdyenInternal) public func showValidation(

) -> Swift.Void
@_spi(AdyenInternal) public func updateValidationStatus(
    forced: Swift.Bool = $DEFAULT_ARG
) -> Swift.Void
@_spi(AdyenInternal) public protocol AnyFormValidatableValueItemView : AnyFormItemView, AnyFormValueItemView
@_spi(AdyenInternal) public func showValidation(

) -> Swift.Void
@_spi(AdyenInternal) public var isValid: Swift.Bool { get }
@_spi(AdyenInternal) public final class ListCell : AdyenCompatible, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UIGestureRecognizerDelegate, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public func init(
    style: UIKit.UITableViewCell.CellStyle,
    reuseIdentifier: Swift.String?
) -> Adyen.ListCell
@_spi(AdyenInternal) public var item: Adyen.ListItem? { get set }
@_spi(AdyenInternal) public class ListItem : Equatable, FormItem, Hashable
@_spi(AdyenInternal) public var subitems: [any Adyen.FormItem] { get set }
@_spi(AdyenInternal) public let style: Adyen.ListItemStyle { get }
@_spi(AdyenInternal) public var title: Swift.String { get set }
@_spi(AdyenInternal) public var subtitle: Swift.String? { get set }
@_spi(AdyenInternal) public var icon: Adyen.ListItem.Icon? { get set }
@_spi(AdyenInternal) public var trailingText: Swift.String? { get set }
@_spi(AdyenInternal) public var selectionHandler: (() -> Swift.Void)? { get set }
@_spi(AdyenInternal) public var deletionHandler: ((Foundation.IndexPath, @escaping Adyen.Completion<Swift.Bool>) -> Swift.Void)? { get set }
@_spi(AdyenInternal) public var identifier: Swift.String? { get set }
@_spi(AdyenInternal) public let accessibilityLabel: Swift.String { get }
@_spi(AdyenInternal) public func init(
    title: Swift.String,
    subtitle: Swift.String? = $DEFAULT_ARG,
    icon: Adyen.ListItem.Icon? = $DEFAULT_ARG,
    trailingText: Swift.String? = $DEFAULT_ARG,
    style: Adyen.ListItemStyle = $DEFAULT_ARG,
    identifier: Swift.String? = $DEFAULT_ARG,
    accessibilityLabel: Swift.String? = $DEFAULT_ARG,
    selectionHandler: (() -> Swift.Void)? = $DEFAULT_ARG
) -> Adyen.ListItem
@_spi(AdyenInternal) public func build(
    with: Adyen.FormItemViewBuilder
) -> any Adyen.AnyFormItemView
@_spi(AdyenInternal) public func startLoading(

) -> Swift.Void
@_spi(AdyenInternal) public func stopLoading(

) -> Swift.Void
@_spi(AdyenInternal) public struct Icon : Equatable, Hashable
@_spi(AdyenInternal) public enum Location : Equatable, Hashable
@_spi(AdyenInternal) public case local(image: UIKit.UIImage)
@_spi(AdyenInternal) public case remote(url: Foundation.URL?)
@_spi(AdyenInternal) public func hash(
    into: Swift.Hasher
) -> Swift.Void
@_spi(AdyenInternal) public static func __derived_enum_equals(
    _: Adyen.ListItem.Icon.Location,
    _: Adyen.ListItem.Icon.Location
) -> Swift.Bool
@_spi(AdyenInternal) public var hashValue: Swift.Int { get }
@_spi(AdyenInternal) public let location: Adyen.ListItem.Icon.Location { get }
@_spi(AdyenInternal) public let canBeModified: Swift.Bool { get }
@_spi(AdyenInternal) public func init(
    location: Adyen.ListItem.Icon.Location,
    canBeModified: Swift.Bool = $DEFAULT_ARG
) -> Adyen.ListItem.Icon
@_spi(AdyenInternal) public func hash(
    into: Swift.Hasher
) -> Swift.Void
@_spi(AdyenInternal) public static func __derived_struct_equals(
    _: Adyen.ListItem.Icon,
    _: Adyen.ListItem.Icon
) -> Swift.Bool
@_spi(AdyenInternal) public var hashValue: Swift.Int { get }
@_spi(AdyenInternal) public func init(
    url: Foundation.URL?,
    canBeModified: Swift.Bool = $DEFAULT_ARG
) -> Adyen.ListItem.Icon
@_spi(AdyenInternal) public func init(
    image: UIKit.UIImage,
    canBeModified: Swift.Bool = $DEFAULT_ARG
) -> Adyen.ListItem.Icon
@_spi(AdyenInternal) public func hash(
    into: Swift.Hasher
) -> Swift.Void
@_spi(AdyenInternal) public static func ==(
    _: Adyen.ListItem,
    _: Adyen.ListItem
) -> Swift.Bool
@_spi(AdyenInternal) public var hashValue: Swift.Int { get }
public struct ListItemStyle : Equatable, ViewStyle
public var title: Adyen.TextStyle { get set }
public var subtitle: Adyen.TextStyle { get set }
public var trailingText: Adyen.TextStyle { get set }
public var image: Adyen.ImageStyle { get set }
public var backgroundColor: UIKit.UIColor { get set }
public func init(
    title: Adyen.TextStyle,
    subtitle: Adyen.TextStyle,
    image: Adyen.ImageStyle
) -> Adyen.ListItemStyle
public func init(

) -> Adyen.ListItemStyle
public static func ==(
    _: Adyen.ListItemStyle,
    _: Adyen.ListItemStyle
) -> Swift.Bool
@_spi(AdyenInternal) public final class ListItemView : AdyenCompatible, AnyFormItemView, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public var childItemViews: [any Adyen.AnyFormItemView] { get set }
@_spi(AdyenInternal) public func init(
    imageLoader: any Adyen.ImageLoading = $DEFAULT_ARG
) -> Adyen.ListItemView
@_spi(AdyenInternal) public func reset(

) -> Swift.Void
@_spi(AdyenInternal) public var item: Adyen.ListItem? { get set }
@_spi(AdyenInternal) public func didMoveToWindow(

) -> Swift.Void
@_spi(AdyenInternal) public func layoutSubviews(

) -> Swift.Void
@_spi(AdyenInternal) public func traitCollectionDidChange(
    _: UIKit.UITraitCollection?
) -> Swift.Void
@_spi(AdyenInternal) public func init(
    frame: CoreFoundation.CGRect
) -> Adyen.ListItemView
@_spi(AdyenInternal) public enum EditingStyle : Equatable, Hashable
@_spi(AdyenInternal) public case delete
@_spi(AdyenInternal) public case none
@_spi(AdyenInternal) public static func __derived_enum_equals(
    _: Adyen.EditingStyle,
    _: Adyen.EditingStyle
) -> Swift.Bool
@_spi(AdyenInternal) public func hash(
    into: Swift.Hasher
) -> Swift.Void
@_spi(AdyenInternal) public var hashValue: Swift.Int { get }
@_spi(AdyenInternal) public struct ListSection : Equatable, Hashable
@_spi(AdyenInternal) public let header: Adyen.ListSectionHeader? { get }
@_spi(AdyenInternal) public var items: [Adyen.ListItem] { get }
@_spi(AdyenInternal) public let footer: Adyen.ListSectionFooter? { get }
@_spi(AdyenInternal) public var isEditable: Swift.Bool { get }
@_spi(AdyenInternal) public func init(
    header: Adyen.ListSectionHeader? = $DEFAULT_ARG,
    items: [Adyen.ListItem],
    footer: Adyen.ListSectionFooter? = $DEFAULT_ARG
) -> Adyen.ListSection
@_spi(AdyenInternal) public func hash(
    into: Swift.Hasher
) -> Swift.Void
@_spi(AdyenInternal) public static func ==(
    _: Adyen.ListSection,
    _: Adyen.ListSection
) -> Swift.Bool
@_spi(AdyenInternal) public var hashValue: Swift.Int { get }
@_spi(AdyenInternal) public struct ListSectionHeader : Equatable, Hashable
@_spi(AdyenInternal) public var title: Swift.String { get set }
@_spi(AdyenInternal) public var style: Adyen.ListSectionHeaderStyle { get set }
@_spi(AdyenInternal) public var editingStyle: Adyen.EditingStyle { get set }
@_spi(AdyenInternal) public func init(
    title: Swift.String,
    editingStyle: Adyen.EditingStyle = $DEFAULT_ARG,
    style: Adyen.ListSectionHeaderStyle
) -> Adyen.ListSectionHeader
@_spi(AdyenInternal) public func hash(
    into: Swift.Hasher
) -> Swift.Void
@_spi(AdyenInternal) public static func ==(
    _: Adyen.ListSectionHeader,
    _: Adyen.ListSectionHeader
) -> Swift.Bool
@_spi(AdyenInternal) public var hashValue: Swift.Int { get }
public struct ListSectionFooter : Equatable, Hashable
public var title: Swift.String { get set }
public var style: Adyen.ListSectionFooterStyle { get set }
public func init(
    title: Swift.String,
    style: Adyen.ListSectionFooterStyle
) -> Adyen.ListSectionFooter
public func hash(
    into: Swift.Hasher
) -> Swift.Void
public static func ==(
    _: Adyen.ListSectionFooter,
    _: Adyen.ListSectionFooter
) -> Swift.Bool
public var hashValue: Swift.Int { get }
public struct ListSectionFooterStyle : ViewStyle
public var title: Adyen.TextStyle { get set }
public var separatorColor: UIKit.UIColor { get set }
public var backgroundColor: UIKit.UIColor { get set }
public func init(
    title: Adyen.TextStyle
) -> Adyen.ListSectionFooterStyle
public func init(

) -> Adyen.ListSectionFooterStyle
public struct ListSectionHeaderStyle : ViewStyle
public var title: Adyen.TextStyle { get set }
public var trailingButton: Adyen.ButtonStyle { get set }
public var backgroundColor: UIKit.UIColor { get set }
public func init(
    title: Adyen.TextStyle
) -> Adyen.ListSectionHeaderStyle
public func init(

) -> Adyen.ListSectionHeaderStyle
@_spi(AdyenInternal) public final class ListViewController : AdyenCompatible, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSExtensionRequestHandling, NSObjectProtocol, Sendable, UIActivityItemsConfigurationProviding, UIAppearanceContainer, UIContentContainer, UIFocusEnvironment, UIPasteConfigurationSupporting, UIResponderStandardEditActions, UIScrollViewDelegate, UIStateRestoring, UITableViewDataSource, UITableViewDelegate, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring, ViewControllerPresenter
@_spi(AdyenInternal) public let style: any Adyen.ViewStyle { get }
@_spi(AdyenInternal) public var delegate: (any Adyen.ViewControllerDelegate)? { get set }
@_spi(AdyenInternal) public func init(
    style: any Adyen.ViewStyle
) -> Adyen.ListViewController
@_spi(AdyenInternal) public var preferredContentSize: CoreFoundation.CGSize { get set }
@_spi(AdyenInternal) public var sections: [Adyen.ListSection] { get }
@_spi(AdyenInternal) public func reload(
    newSections: [Adyen.ListSection],
    animated: Swift.Bool = $DEFAULT_ARG
) -> Swift.Void
@_spi(AdyenInternal) public func deleteItem(
    at: Foundation.IndexPath,
    animated: Swift.Bool = $DEFAULT_ARG
) -> Swift.Void
@_spi(AdyenInternal) public func viewDidLoad(

) -> Swift.Void
@_spi(AdyenInternal) public func viewDidAppear(
    _: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func viewWillAppear(
    _: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func tableView(
    _: UIKit.UITableView,
    viewForHeaderInSection: Swift.Int
) -> UIKit.UIView?
@_spi(AdyenInternal) public func tableView(
    _: UIKit.UITableView,
    viewForFooterInSection: Swift.Int
) -> UIKit.UIView?
@_spi(AdyenInternal) public func tableView(
    _: UIKit.UITableView,
    heightForFooterInSection: Swift.Int
) -> CoreGraphics.CGFloat
@_spi(AdyenInternal) public func tableView(
    _: UIKit.UITableView,
    heightForHeaderInSection: Swift.Int
) -> CoreGraphics.CGFloat
@_spi(AdyenInternal) public func tableView(
    _: UIKit.UITableView,
    didSelectRowAt: Foundation.IndexPath
) -> Swift.Void
@_spi(AdyenInternal) public func tableView(
    _: UIKit.UITableView,
    editingStyleForRowAt: Foundation.IndexPath
) -> UIKit.UITableViewCell.EditingStyle
@_spi(AdyenInternal) public func stopLoading(

) -> Swift.Void
@_spi(AdyenInternal) public func init(
    style: UIKit.UITableView.Style
) -> Adyen.ListViewController
@_spi(AdyenInternal) public func init(
    nibName: Swift.String?,
    bundle: Foundation.Bundle?
) -> Adyen.ListViewController
public struct ApplePayStyle
public var paymentButtonStyle: PassKit.PKPaymentButtonStyle? { get set }
public var paymentButtonType: PassKit.PKPaymentButtonType { get set }
public var cornerRadius: CoreGraphics.CGFloat { get set }
public var backgroundColor: UIKit.UIColor { get set }
public var hintLabel: Adyen.TextStyle { get set }
public func init(
    paymentButtonStyle: PassKit.PKPaymentButtonStyle? = $DEFAULT_ARG,
    paymentButtonType: PassKit.PKPaymentButtonType = $DEFAULT_ARG,
    cornerRadius: CoreGraphics.CGFloat = $DEFAULT_ARG,
    backgroundColor: UIKit.UIColor = $DEFAULT_ARG,
    hintLabel: Adyen.TextStyle = $DEFAULT_ARG
) -> Adyen.ApplePayStyle
public struct ButtonStyle : Equatable, ViewStyle
public var title: Adyen.TextStyle { get set }
public var cornerRounding: Adyen.CornerRounding { get set }
public var borderColor: UIKit.UIColor? { get set }
public var borderWidth: CoreGraphics.CGFloat { get set }
public var backgroundColor: UIKit.UIColor { get set }
public func init(
    title: Adyen.TextStyle
) -> Adyen.ButtonStyle
public func init(
    title: Adyen.TextStyle,
    cornerRadius: CoreGraphics.CGFloat
) -> Adyen.ButtonStyle
public func init(
    title: Adyen.TextStyle,
    cornerRounding: Adyen.CornerRounding
) -> Adyen.ButtonStyle
public func init(
    title: Adyen.TextStyle,
    cornerRadius: CoreGraphics.CGFloat,
    background: UIKit.UIColor
) -> Adyen.ButtonStyle
public func init(
    title: Adyen.TextStyle,
    cornerRounding: Adyen.CornerRounding,
    background: UIKit.UIColor
) -> Adyen.ButtonStyle
public static func __derived_struct_equals(
    _: Adyen.ButtonStyle,
    _: Adyen.ButtonStyle
) -> Swift.Bool
public enum CornerRounding : Equatable
public case none
public case fixed(CoreGraphics.CGFloat)
public case percent(CoreGraphics.CGFloat)
@_spi(AdyenInternal) public static func ==(
    _: Adyen.CornerRounding,
    _: Adyen.CornerRounding
) -> Swift.Bool
public struct FormComponentStyle : TintableStyle, ViewStyle
public var backgroundColor: UIKit.UIColor { get set }
public var sectionHeader: Adyen.TextStyle { get set }
public var textField: Adyen.FormTextItemStyle { get set }
public var toggle: Adyen.FormToggleItemStyle { get set }
public var hintLabel: Adyen.TextStyle { get set }
public var footnoteLabel: Adyen.TextStyle { get set }
public var linkTextLabel: Adyen.TextStyle { get set }
public var mainButtonItem: Adyen.FormButtonItemStyle { get set }
public var secondaryButtonItem: Adyen.FormButtonItemStyle { get set }
public var segmentedControlStyle: Adyen.SegmentedControlStyle { get set }
public var addressStyle: Adyen.AddressStyle { get set }
public var errorStyle: Adyen.FormErrorItemStyle { get set }
public var tintColor: UIKit.UIColor? { get set }
public var separatorColor: UIKit.UIColor? { get set }
public func init(
    textField: Adyen.FormTextItemStyle,
    toggle: Adyen.FormToggleItemStyle,
    mainButton: Adyen.FormButtonItemStyle,
    secondaryButton: Adyen.FormButtonItemStyle,
    helper: Adyen.TextStyle,
    sectionHeader: Adyen.TextStyle
) -> Adyen.FormComponentStyle
public func init(
    textField: Adyen.FormTextItemStyle,
    toggle: Adyen.FormToggleItemStyle,
    mainButton: Adyen.ButtonStyle,
    secondaryButton: Adyen.ButtonStyle
) -> Adyen.FormComponentStyle
public func init(
    tintColor: UIKit.UIColor
) -> Adyen.FormComponentStyle
public func init(

) -> Adyen.FormComponentStyle
public struct ImageStyle : Equatable, TintableStyle, ViewStyle
public var borderColor: UIKit.UIColor? { get set }
public var borderWidth: CoreGraphics.CGFloat { get set }
public var cornerRounding: Adyen.CornerRounding { get set }
public var clipsToBounds: Swift.Bool { get set }
public var contentMode: UIKit.UIView.ContentMode { get set }
public var backgroundColor: UIKit.UIColor { get set }
public var tintColor: UIKit.UIColor? { get set }
public func init(
    borderColor: UIKit.UIColor?,
    borderWidth: CoreGraphics.CGFloat,
    cornerRadius: CoreGraphics.CGFloat,
    clipsToBounds: Swift.Bool,
    contentMode: UIKit.UIView.ContentMode
) -> Adyen.ImageStyle
public func init(
    borderColor: UIKit.UIColor?,
    borderWidth: CoreGraphics.CGFloat,
    cornerRounding: Adyen.CornerRounding,
    clipsToBounds: Swift.Bool,
    contentMode: UIKit.UIView.ContentMode
) -> Adyen.ImageStyle
public static func ==(
    _: Adyen.ImageStyle,
    _: Adyen.ImageStyle
) -> Swift.Bool
public struct ListComponentStyle : ViewStyle
public var listItem: Adyen.ListItemStyle { get set }
public var sectionHeader: Adyen.ListSectionHeaderStyle { get set }
public var partialPaymentSectionFooter: Adyen.ListSectionFooterStyle { get set }
public var backgroundColor: UIKit.UIColor { get set }
public func init(
    listItem: Adyen.ListItemStyle,
    sectionHeader: Adyen.ListSectionHeaderStyle
) -> Adyen.ListComponentStyle
public func init(

) -> Adyen.ListComponentStyle
public enum CancelButtonStyle
public case system
public case legacy
public case custom(UIKit.UIImage)
public enum ToolbarMode : Equatable, Hashable
public case leftCancel
public case rightCancel
public case natural
public static func __derived_enum_equals(
    _: Adyen.ToolbarMode,
    _: Adyen.ToolbarMode
) -> Swift.Bool
public func hash(
    into: Swift.Hasher
) -> Swift.Void
public var hashValue: Swift.Int { get }
public struct NavigationStyle : TintableStyle, ViewStyle
public var backgroundColor: UIKit.UIColor { get set }
public var separatorColor: UIKit.UIColor? { get set }
public var tintColor: UIKit.UIColor? { get set }
public var cornerRadius: CoreGraphics.CGFloat { get set }
public var barTitle: Adyen.TextStyle { get set }
public var cancelButton: Adyen.CancelButtonStyle { get set }
public var toolbarMode: Adyen.ToolbarMode { get set }
public func init(

) -> Adyen.NavigationStyle
public struct ProgressViewStyle : ViewStyle
public let progressTintColor: UIKit.UIColor { get }
public let trackTintColor: UIKit.UIColor { get }
public var backgroundColor: UIKit.UIColor { get set }
public func init(
    progressTintColor: UIKit.UIColor,
    trackTintColor: UIKit.UIColor
) -> Adyen.ProgressViewStyle
public struct SegmentedControlStyle : TintableStyle, ViewStyle
public var textStyle: Adyen.TextStyle { get set }
public var backgroundColor: UIKit.UIColor { get set }
public var tintColor: UIKit.UIColor? { get set }
public func init(
    textStyle: Adyen.TextStyle,
    backgroundColor: UIKit.UIColor = $DEFAULT_ARG,
    tintColor: UIKit.UIColor = $DEFAULT_ARG
) -> Adyen.SegmentedControlStyle
public struct TextStyle : Equatable, ViewStyle
public var font: UIKit.UIFont { get set }
public var color: UIKit.UIColor { get set }
public var disabledColor: UIKit.UIColor { get set }
public var textAlignment: UIKit.NSTextAlignment { get set }
public var backgroundColor: UIKit.UIColor { get set }
public var cornerRounding: Adyen.CornerRounding { get set }
public func init(
    font: UIKit.UIFont,
    color: UIKit.UIColor,
    disabledColor: UIKit.UIColor = $DEFAULT_ARG,
    textAlignment: UIKit.NSTextAlignment,
    cornerRounding: Adyen.CornerRounding = $DEFAULT_ARG,
    backgroundColor: UIKit.UIColor = $DEFAULT_ARG
) -> Adyen.TextStyle
public func init(
    font: UIKit.UIFont,
    color: UIKit.UIColor
) -> Adyen.TextStyle
public static func ==(
    _: Adyen.TextStyle,
    _: Adyen.TextStyle
) -> Swift.Bool
public var stringAttributes: [Foundation.NSAttributedString.Key : Any] { get }
public protocol ViewStyle
public var backgroundColor: UIKit.UIColor { get set }
public protocol TintableStyle : ViewStyle
public var tintColor: UIKit.UIColor? { get set }
@_spi(AdyenInternal) public final class ADYViewController : AdyenCompatible, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSExtensionRequestHandling, NSObjectProtocol, Sendable, UIActivityItemsConfigurationProviding, UIAppearanceContainer, UIContentContainer, UIFocusEnvironment, UIPasteConfigurationSupporting, UIResponderStandardEditActions, UIStateRestoring, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring, ViewControllerPresenter
@_spi(AdyenInternal) public func init(
    view: UIKit.UIView,
    title: Swift.String? = $DEFAULT_ARG
) -> Adyen.ADYViewController
@_spi(AdyenInternal) public func loadView(

) -> Swift.Void
@_spi(AdyenInternal) public var preferredContentSize: CoreFoundation.CGSize { get set }
@_spi(AdyenInternal) public func init(
    nibName: Swift.String?,
    bundle: Foundation.Bundle?
) -> Adyen.ADYViewController
public struct LookupAddressModel
public let identifier: Swift.String { get }
public let postalAddress: Adyen.PostalAddress { get }
public func init(
    identifier: Swift.String,
    postalAddress: Adyen.PostalAddress
) -> Adyen.LookupAddressModel
public protocol AddressLookupProvider
public func lookUp(
    searchTerm: Swift.String,
    resultHandler: ([Adyen.LookupAddressModel]) -> Swift.Void
) -> Swift.Void
public func complete(
    incompleteAddress: Adyen.LookupAddressModel,
    resultHandler: (Swift.Result<Adyen.PostalAddress, any Swift.Error>) -> Swift.Void
) -> Swift.Void
public func complete(
    incompleteAddress: Adyen.LookupAddressModel,
    resultHandler: (Swift.Result<Adyen.PostalAddress, any Swift.Error>) -> Swift.Void
) -> Swift.Void
public struct AddressLookupStyle : ViewStyle
public var backgroundColor: UIKit.UIColor { get set }
public var search: Adyen.AddressLookupSearchStyle { get set }
public var form: Adyen.FormComponentStyle { get set }
public func init(
    search: Adyen.AddressLookupSearchStyle = $DEFAULT_ARG,
    form: Adyen.FormComponentStyle = $DEFAULT_ARG
) -> Adyen.AddressLookupStyle
@_spi(AdyenInternal) public class AddressLookupViewController : AdyenCompatible, AdyenObserver, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSExtensionRequestHandling, NSObjectProtocol, Sendable, UIActivityItemsConfigurationProviding, UIAppearanceContainer, UIContentContainer, UIFocusEnvironment, UIPasteConfigurationSupporting, UIResponderStandardEditActions, UIStateRestoring, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring, ViewControllerPresenter
@_spi(AdyenInternal) public func init(
    viewModel: Adyen.AddressLookupViewController.ViewModel
) -> Adyen.AddressLookupViewController
@_spi(AdyenInternal) public func viewDidLoad(

) -> Swift.Void
@_spi(AdyenInternal) public func init(
    navigationBarClass: Swift.AnyClass?,
    toolbarClass: Swift.AnyClass?
) -> Adyen.AddressLookupViewController
@_spi(AdyenInternal) public func init(
    rootViewController: UIKit.UIViewController
) -> Adyen.AddressLookupViewController
@_spi(AdyenInternal) public func init(
    nibName: Swift.String?,
    bundle: Foundation.Bundle?
) -> Adyen.AddressLookupViewController
@_spi(AdyenInternal) public struct ViewModel
@_spi(AdyenInternal) public func init(
    for: Adyen.FormAddressPickerItem.AddressType,
    style: Adyen.AddressLookupStyle = $DEFAULT_ARG,
    localizationParameters: Adyen.LocalizationParameters?,
    supportedCountryCodes: [Swift.String]?,
    initialCountry: Swift.String,
    prefillAddress: Adyen.PostalAddress? = $DEFAULT_ARG,
    lookupProvider: any Adyen.AddressLookupProvider,
    completionHandler: (Adyen.PostalAddress?) -> Swift.Void
) -> Adyen.AddressLookupViewController.ViewModel
@_spi(AdyenInternal) public class AddressInputFormViewController : AdyenCompatible, AdyenObserver, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, FormTextItemViewDelegate, FormViewProtocol, Hashable, NSCoding, NSExtensionRequestHandling, NSObjectProtocol, PreferredContentSizeConsumer, Sendable, UIActivityItemsConfigurationProviding, UIAppearanceContainer, UIContentContainer, UIFocusEnvironment, UIPasteConfigurationSupporting, UIResponderStandardEditActions, UIStateRestoring, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring, ViewControllerPresenter
@_spi(AdyenInternal) public func init(
    viewModel: Adyen.AddressInputFormViewController.ViewModel
) -> Adyen.AddressInputFormViewController
@_spi(AdyenInternal) public func viewDidLoad(

) -> Swift.Void
@_spi(AdyenInternal) public func init(
    style: any Adyen.ViewStyle,
    localizationParameters: Adyen.LocalizationParameters?
) -> Adyen.AddressInputFormViewController
@_spi(AdyenInternal) public typealias ShowSearchHandler = (Adyen.PostalAddress) -> Swift.Void
@_spi(AdyenInternal) public struct ViewModel
@_spi(AdyenInternal) public func init(
    for: Adyen.FormAddressPickerItem.AddressType,
    style: Adyen.FormComponentStyle,
    localizationParameters: Adyen.LocalizationParameters?,
    initialCountry: Swift.String,
    prefillAddress: Adyen.PostalAddress?,
    supportedCountryCodes: [Swift.String]?,
    addressViewModelBuilder: any Adyen.AddressViewModelBuilder = $DEFAULT_ARG,
    handleShowSearch: Adyen.AddressInputFormViewController.ShowSearchHandler? = $DEFAULT_ARG,
    completionHandler: (Adyen.PostalAddress?) -> Swift.Void
) -> Adyen.AddressInputFormViewController.ViewModel
public struct AddressLookupSearchStyle : ViewStyle
public var backgroundColor: UIKit.UIColor { get set }
public var manualEntryListItem: Adyen.ListItemStyle { get set }
public var emptyView: Adyen.EmptyStateViewStyle { get set }
public func init(

) -> Adyen.AddressLookupSearchStyle
@_spi(AdyenInternal) public protocol SearchResultsEmptyView
@_spi(AdyenInternal) public var searchTerm: Swift.String { get set }
@_spi(AdyenInternal) public class SearchViewController : AdyenCompatible, AdyenObserver, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSExtensionRequestHandling, NSObjectProtocol, Sendable, UIActivityItemsConfigurationProviding, UIAppearanceContainer, UIBarPositioningDelegate, UIContentContainer, UIFocusEnvironment, UIPasteConfigurationSupporting, UIResponderStandardEditActions, UISearchBarDelegate, UIStateRestoring, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring, ViewControllerPresenter
@_spi(AdyenInternal) public var delegate: (any Adyen.ViewControllerDelegate)? { get set }
@_spi(AdyenInternal) public var resultsListViewController: Adyen.ListViewController { get set }
@_spi(AdyenInternal) public func init(
    viewModel: Adyen.SearchViewController.ViewModel,
    emptyView: any Adyen.SearchResultsEmptyView
) -> Adyen.SearchViewController
@_spi(AdyenInternal) public func viewDidLoad(

) -> Swift.Void
@_spi(AdyenInternal) public func viewWillAppear(
    _: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func viewDidAppear(
    _: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public var preferredContentSize: CoreFoundation.CGSize { get set }
@_spi(AdyenInternal) public func init(
    nibName: Swift.String?,
    bundle: Foundation.Bundle?
) -> Adyen.SearchViewController
@_spi(AdyenInternal) public struct ViewModel
@_spi(AdyenInternal) public typealias ResultProvider = (Swift.String, @escaping ([Adyen.ListItem]) -> Swift.Void) -> Swift.Void
@_spi(AdyenInternal) public func init(
    localizationParameters: Adyen.LocalizationParameters? = $DEFAULT_ARG,
    style: any Adyen.ViewStyle,
    searchBarPlaceholder: Swift.String? = $DEFAULT_ARG,
    shouldFocusSearchBarOnAppearance: Swift.Bool = $DEFAULT_ARG,
    resultProvider: Adyen.SearchViewController.ViewModel.ResultProvider
) -> Adyen.SearchViewController.ViewModel
@_spi(AdyenInternal) public func searchBar(
    _: UIKit.UISearchBar,
    textDidChange: Swift.String
) -> Swift.Void
@_spi(AdyenInternal) public func searchBarSearchButtonClicked(
    _: UIKit.UISearchBar
) -> Swift.Void
@_spi(AdyenInternal) public final class SecuredViewController : AdyenCompatible, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSExtensionRequestHandling, NSObjectProtocol, Sendable, UIActivityItemsConfigurationProviding, UIAppearanceContainer, UIContentContainer, UIFocusEnvironment, UIPasteConfigurationSupporting, UIResponderStandardEditActions, UIStateRestoring, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring, ViewControllerPresenter
@_spi(AdyenInternal) public var delegate: (any Adyen.ViewControllerDelegate)? { get set }
@_spi(AdyenInternal) public var preferredContentSize: CoreFoundation.CGSize { get set }
@_spi(AdyenInternal) public var title: Swift.String? { get set }
@_spi(AdyenInternal) public func init(
    child: ChildViewController,
    style: any Adyen.ViewStyle
) -> Adyen.SecuredViewController<ChildViewController>
@_spi(AdyenInternal) public func viewDidLoad(

) -> Swift.Void
@_spi(AdyenInternal) public func viewDidAppear(
    _: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func viewWillAppear(
    _: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func init(
    nibName: Swift.String?,
    bundle: Foundation.Bundle?
) -> Adyen.SecuredViewController<ChildViewController>
@_spi(AdyenInternal) public protocol ViewControllerDelegate
@_spi(AdyenInternal) public func viewDidLoad(
    viewController: UIKit.UIViewController
) -> Swift.Void
@_spi(AdyenInternal) public func viewDidAppear(
    viewController: UIKit.UIViewController
) -> Swift.Void
@_spi(AdyenInternal) public func viewWillAppear(
    viewController: UIKit.UIViewController
) -> Swift.Void
@_spi(AdyenInternal) public func viewDidLoad(
    viewController: UIKit.UIViewController
) -> Swift.Void
@_spi(AdyenInternal) public func viewDidAppear(
    viewController: UIKit.UIViewController
) -> Swift.Void
@_spi(AdyenInternal) public func viewWillAppear(
    viewController: UIKit.UIViewController
) -> Swift.Void
public final class ContainerView : AdyenCompatible, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
public func init(
    body: UIKit.UIView,
    padding: UIKit.UIEdgeInsets = $DEFAULT_ARG
) -> Adyen.ContainerView
public func setupConstraints(

) -> Swift.Void
public func init(
    frame: CoreFoundation.CGRect
) -> Adyen.ContainerView
@_spi(AdyenInternal) public final class CopyLabelView : AdyenCompatible, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, Localizable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public var localizationParameters: Adyen.LocalizationParameters? { get set }
@_spi(AdyenInternal) public func init(
    text: Swift.String,
    style: Adyen.TextStyle
) -> Adyen.CopyLabelView
@_spi(AdyenInternal) public var canBecomeFirstResponder: Swift.Bool { get }
@_spi(AdyenInternal) @discardableResult public func becomeFirstResponder(

) -> Swift.Bool
@_spi(AdyenInternal) public func init(
    frame: CoreFoundation.CGRect
) -> Adyen.CopyLabelView
public struct EmptyStateViewStyle : ViewStyle
public var title: Adyen.TextStyle { get set }
public var subtitle: Adyen.TextStyle { get set }
public var backgroundColor: UIKit.UIColor { get set }
@_spi(AdyenInternal) public class EmptyStateView : AdyenCompatible, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, SearchResultsEmptyView, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public var searchTerm: Swift.String { get set }
@_spi(AdyenInternal) public func init(
    frame: CoreFoundation.CGRect
) -> Adyen.EmptyStateView<SubtitleLabel>
@_spi(AdyenInternal) public class LinkTextView : AdyenCompatible, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UIContentSizeCategoryAdjusting, UICoordinateSpace, UIDynamicItem, UIFindInteractionDelegate, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UIFocusItemScrollableContainer, UIKeyInput, UILargeContentViewerItem, UILetterformAwareAdjusting, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UIScrollViewDelegate, UITextDraggable, UITextDroppable, UITextInput, UITextInputTraits, UITextPasteConfigurationSupporting, UITextViewDelegate, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public func init(
    linkSelectionHandler: (Swift.Int) -> Swift.Void
) -> Adyen.LinkTextView
@_spi(AdyenInternal) public func update(
    text: Swift.String,
    style: Adyen.TextStyle,
    linkRangeDelimiter: Swift.String = $DEFAULT_ARG
) -> Swift.Void
@_spi(AdyenInternal) public func init(
    frame: CoreFoundation.CGRect,
    textContainer: UIKit.NSTextContainer?
) -> Adyen.LinkTextView
@_spi(AdyenInternal) public func textView(
    _: UIKit.UITextView,
    shouldInteractWith: Foundation.URL,
    in: Foundation.NSRange,
    interaction: UIKit.UITextItemInteraction
) -> Swift.Bool
@_spi(AdyenInternal) public final class LoadingView : AdyenCompatible, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UIContextMenuInteractionDelegate, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public var disableUserInteractionWhileLoading: Swift.Bool { get set }
@_spi(AdyenInternal) public var spinnerAppearanceDelay: Dispatch.DispatchTimeInterval { get set }
@_spi(AdyenInternal) public func init(
    contentView: UIKit.UIView
) -> Adyen.LoadingView
@_spi(AdyenInternal) public var showsActivityIndicator: Swift.Bool { get set }
@_spi(AdyenInternal) public func init(
    frame: CoreFoundation.CGRect
) -> Adyen.LoadingView
@_spi(AdyenInternal) public final class SubmitButton : AdyenCompatible, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UIContextMenuInteractionDelegate, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public func init(
    style: Adyen.ButtonStyle
) -> Adyen.SubmitButton
@_spi(AdyenInternal) public var title: Swift.String? { get set }
@_spi(AdyenInternal) public var accessibilityIdentifier: Swift.String? { get set }
@_spi(AdyenInternal) public var showsActivityIndicator: Swift.Bool { get set }
@_spi(AdyenInternal) public func layoutSubviews(

) -> Swift.Void
@_spi(AdyenInternal) public var isHighlighted: Swift.Bool { get set }
@_spi(AdyenInternal) public func init(
    frame: CoreFoundation.CGRect
) -> Adyen.SubmitButton
@_spi(AdyenInternal) public enum AdyenCoder
@_spi(AdyenInternal) public static func decode(
    _: Foundation.Data
) throws -> T
@_spi(AdyenInternal) public static func decode(
    _: Swift.String
) throws -> T
@_spi(AdyenInternal) public static func decodeBase64(
    _: Swift.String
) throws -> T
@_spi(AdyenInternal) public static func encode(
    _: some Swift.Encodable
) throws -> Foundation.Data
@_spi(AdyenInternal) public static func encode(
    _: some Swift.Encodable
) throws -> Swift.String
@_spi(AdyenInternal) public static func encodeBase64(
    _: some Swift.Encodable
) throws -> Swift.String
@_spi(AdyenInternal) public class Analytics
@_spi(AdyenInternal) public enum Flavor : Equatable, Hashable, RawRepresentable
@_spi(AdyenInternal) public case components
@_spi(AdyenInternal) public case dropin
@_spi(AdyenInternal) public func init(
    rawValue: Swift.String
) -> Adyen.Analytics.Flavor?
@_spi(AdyenInternal) public typealias RawValue = Swift.String
@_spi(AdyenInternal) public var rawValue: Swift.String { get }
@_spi(AdyenInternal) public struct Event
@_spi(AdyenInternal) public func init(
    component: Swift.String,
    flavor: Adyen.Analytics.Flavor,
    environment: any AdyenNetworking.AnyAPIEnvironment
) -> Adyen.Analytics.Event
@_spi(AdyenInternal) public func init(
    component: Swift.String,
    flavor: Adyen.Analytics.Flavor,
    context: Adyen.APIContext
) -> Adyen.Analytics.Event
@_spi(AdyenInternal) public static var isEnabled: Swift.Bool { get set }
@_spi(AdyenInternal) public static func sendEvent(
    component: Swift.String,
    flavor: Adyen.Analytics.Flavor,
    environment: any AdyenNetworking.AnyAPIEnvironment
) -> Swift.Void
@_spi(AdyenInternal) public static func sendEvent(
    component: Swift.String,
    flavor: Adyen.Analytics.Flavor,
    context: Adyen.APIContext
) -> Swift.Void
@_spi(AdyenInternal) public static func sendEvent(
    _: Adyen.Analytics.Event
) -> Swift.Void
@_spi(AdyenInternal) public protocol AnyAppLauncher
@_spi(AdyenInternal) public func openCustomSchemeUrl(
    _: Foundation.URL,
    completion: ((Swift.Bool) -> Swift.Void)?
) -> Swift.Void
@_spi(AdyenInternal) public func openUniversalAppUrl(
    _: Foundation.URL,
    completion: ((Swift.Bool) -> Swift.Void)?
) -> Swift.Void
@_spi(AdyenInternal) public struct AppLauncher : AnyAppLauncher
@_spi(AdyenInternal) public func init(

) -> Adyen.AppLauncher
@_spi(AdyenInternal) public func openCustomSchemeUrl(
    _: Foundation.URL,
    completion: ((Swift.Bool) -> Swift.Void)?
) -> Swift.Void
@_spi(AdyenInternal) public func openUniversalAppUrl(
    _: Foundation.URL,
    completion: ((Swift.Bool) -> Swift.Void)?
) -> Swift.Void
public typealias Completion = (T) -> Swift.Void
@_spi(AdyenInternal) public typealias AssertionListener = (Swift.String) -> Swift.Void
@_spi(AdyenInternal) public enum AdyenAssertion
@_spi(AdyenInternal) public static func assertionFailure(
    message: () -> Swift.String
) -> Swift.Void
@_spi(AdyenInternal) public static func assert(
    message: () -> Swift.String,
    condition: () -> Swift.Bool
) -> Swift.Void
public enum AdyenLogging
public static var isEnabled: Swift.Bool { get set }
@_spi(AdyenInternal) public func adyenPrint(
    _: Any...,
    separator: Swift.String = $DEFAULT_ARG,
    terminator: Swift.String = $DEFAULT_ARG
) -> Swift.Void
@_spi(AdyenInternal) public struct Region : CustomStringConvertible, Decodable, Equatable
@_spi(AdyenInternal) public let identifier: Swift.String { get }
@_spi(AdyenInternal) public let name: Swift.String { get }
@_spi(AdyenInternal) public var description: Swift.String { get }
@_spi(AdyenInternal) public static func __derived_struct_equals(
    _: Adyen.Region,
    _: Adyen.Region
) -> Swift.Bool
@_spi(AdyenInternal) public func init(
    from: any Swift.Decoder
) throws -> Adyen.Region
public final class LogoURLProvider
public func init(
    environment: any AdyenNetworking.AnyAPIEnvironment
) -> Adyen.LogoURLProvider
public func logoURL(
    withName: Swift.String,
    size: Adyen.LogoURLProvider.Size = $DEFAULT_ARG
) -> Foundation.URL
public static func logoURL(
    for: Adyen.Issuer,
    localizedParameters: Adyen.LocalizationParameters?,
    paymentMethod: Adyen.IssuerListPaymentMethod,
    environment: any AdyenNetworking.AnyAPIEnvironment
) -> Foundation.URL
public static func logoURL(
    withName: Swift.String,
    environment: any AdyenNetworking.AnyAPIEnvironment,
    size: Adyen.LogoURLProvider.Size = $DEFAULT_ARG
) -> Foundation.URL
public enum Size : Equatable, Hashable, RawRepresentable
public case small
public case medium
public case large
public func init(
    rawValue: Swift.String
) -> Adyen.LogoURLProvider.Size?
public typealias RawValue = Swift.String
public var rawValue: Swift.String { get }
@_spi(AdyenInternal) public enum PhoneNumberPaymentMethod : Equatable, Hashable
@_spi(AdyenInternal) public case qiwiWallet
@_spi(AdyenInternal) public case mbWay
@_spi(AdyenInternal) public case generic
@_spi(AdyenInternal) public static func __derived_enum_equals(
    _: Adyen.PhoneNumberPaymentMethod,
    _: Adyen.PhoneNumberPaymentMethod
) -> Swift.Bool
@_spi(AdyenInternal) public func hash(
    into: Swift.Hasher
) -> Swift.Void
@_spi(AdyenInternal) public var hashValue: Swift.Int { get }
@_spi(AdyenInternal) public struct PhoneExtensionsQuery
@_spi(AdyenInternal) public let codes: [Swift.String] { get }
@_spi(AdyenInternal) public func init(
    codes: [Swift.String]
) -> Adyen.PhoneExtensionsQuery
@_spi(AdyenInternal) public func init(
    paymentMethod: Adyen.PhoneNumberPaymentMethod
) -> Adyen.PhoneExtensionsQuery
@_spi(AdyenInternal) public enum PhoneExtensionsRepository
@_spi(AdyenInternal) public static func get(
    with: Adyen.PhoneExtensionsQuery
) -> [Adyen.PhoneExtension]
@_spi(AdyenInternal) public struct IBANSpecification
@_spi(AdyenInternal) public static let highestMaximumLength: Swift.Int { get }
@_spi(AdyenInternal) public let countryCode: Swift.String { get }
@_spi(AdyenInternal) public let length: Swift.Int { get }
@_spi(AdyenInternal) public let structure: Swift.String { get }
@_spi(AdyenInternal) public let example: Swift.String { get }
@_spi(AdyenInternal) public func init(
    forCountryCode: Swift.String
) -> Adyen.IBANSpecification?
@_spi(AdyenInternal) public class KeyboardObserver
@_spi(AdyenInternal) public var keyboardRect: CoreFoundation.CGRect { get }
@_spi(AdyenInternal) public var $keyboardRect: Adyen.AdyenObservable<CoreFoundation.CGRect> { get }
@_spi(AdyenInternal) public func init(

) -> Adyen.KeyboardObserver
@_spi(AdyenInternal) public func localizedString(
    _: Adyen.LocalizationKey,
    _: Adyen.LocalizationParameters?,
    _: any Swift.CVarArg...
) -> Swift.String
@_spi(AdyenInternal) public enum PaymentStyle
@_spi(AdyenInternal) public case needsRedirectToThirdParty(Swift.String)
@_spi(AdyenInternal) public case immediate
@_spi(AdyenInternal) public func localizedSubmitButtonTitle(
    with: Adyen.Amount?,
    style: Adyen.PaymentStyle,
    _: Adyen.LocalizationParameters?
) -> Swift.String
public struct LocalizationParameters : Equatable
public static func ==(
    _: Adyen.LocalizationParameters,
    _: Adyen.LocalizationParameters
) -> Swift.Bool
public var locale: Swift.String? { get }
public var tableName: Swift.String? { get }
public var keySeparator: Swift.String? { get }
public var bundle: Foundation.Bundle? { get }
public func init(
    bundle: Foundation.Bundle? = $DEFAULT_ARG,
    tableName: Swift.String? = $DEFAULT_ARG,
    keySeparator: Swift.String? = $DEFAULT_ARG,
    locale: Swift.String? = $DEFAULT_ARG
) -> Adyen.LocalizationParameters
public func init(
    enforcedLocale: Swift.String
) -> Adyen.LocalizationParameters
public final class AdyenObservable : EventPublisher
public func init(
    _: ValueType
) -> Adyen.AdyenObservable<ValueType>
public var wrappedValue: ValueType { get set }
public typealias Event = ValueType
public var eventHandlers: [Adyen.EventHandlerToken : Adyen.EventHandler<Adyen.AdyenObservable<ValueType>.Event>] { get set }
public var projectedValue: Adyen.AdyenObservable<ValueType> { get }
public protocol AdyenObserver
@_spi(AdyenInternal) @discardableResult public func observe(
    _: T,
    eventHandler: Adyen.EventHandler<T.Event>
) -> Adyen.Observation
@_spi(AdyenInternal) @discardableResult public func bind(
    _: Adyen.AdyenObservable<Value>,
    to: Target,
    at: Swift.ReferenceWritableKeyPath<Target, Value>
) -> Adyen.Observation
@_spi(AdyenInternal) @discardableResult public func bind(
    _: Adyen.AdyenObservable<Value>,
    to: Target,
    at: Swift.ReferenceWritableKeyPath<Target, Value?>
) -> Adyen.Observation
@_spi(AdyenInternal) @discardableResult public func bind(
    _: Adyen.AdyenObservable<Value>,
    to: Target,
    at: Swift.ReferenceWritableKeyPath<Target, Result>,
    with: ((Value) -> Result)
) -> Adyen.Observation
@_spi(AdyenInternal) @discardableResult public func bind(
    _: Adyen.AdyenObservable<Value>,
    at: Swift.KeyPath<Value, Result>,
    to: Target,
    at: Swift.ReferenceWritableKeyPath<Target, Result>
) -> Adyen.Observation
@_spi(AdyenInternal) @discardableResult public func bind(
    _: Adyen.AdyenObservable<Value>,
    at: Swift.KeyPath<Value, Result>,
    to: Target,
    at: Swift.ReferenceWritableKeyPath<Target, Result?>
) -> Adyen.Observation
@_spi(AdyenInternal) public func remove(
    _: Adyen.Observation
) -> Swift.Void
public protocol EventPublisher
public associatedtype Event
public var eventHandlers: [Adyen.EventHandlerToken : Adyen.EventHandler<Self.Event>] { get set }
@_spi(AdyenInternal) public func addEventHandler(
    _: Adyen.EventHandler<Self.Event>
) -> Adyen.EventHandlerToken
@_spi(AdyenInternal) public func removeEventHandler(
    with: Adyen.EventHandlerToken
) -> Swift.Void
@_spi(AdyenInternal) public func publish(
    _: Self.Event
) -> Swift.Void
public typealias EventHandler = (Event) -> Swift.Void
public struct EventHandlerToken : Equatable, Hashable
public func hash(
    into: Swift.Hasher
) -> Swift.Void
public static func __derived_struct_equals(
    _: Adyen.EventHandlerToken,
    _: Adyen.EventHandlerToken
) -> Swift.Bool
public var hashValue: Swift.Int { get }
@_spi(AdyenInternal) public struct Observation : Equatable, Hashable
@_spi(AdyenInternal) public static func ==(
    _: Adyen.Observation,
    _: Adyen.Observation
) -> Swift.Bool
@_spi(AdyenInternal) public func hash(
    into: Swift.Hasher
) -> Swift.Void
@_spi(AdyenInternal) public var hashValue: Swift.Int { get }
@_spi(AdyenInternal) public protocol PublicKeyConsumer : AdyenContextAware, Component, PartialPaymentOrderAware, PaymentComponent, PaymentMethodAware
@_spi(AdyenInternal) public var publicKeyProvider: any Adyen.AnyPublicKeyProvider { get }
@_spi(AdyenInternal) public typealias PublicKeySuccessHandler = (Swift.String) -> Swift.Void
@_spi(AdyenInternal) public func fetchCardPublicKey(
    notifyingDelegateOnFailure: Swift.Bool,
    successHandler: Self.PublicKeySuccessHandler? = $DEFAULT_ARG
) -> Swift.Void
@_spi(AdyenInternal) public protocol AnyPublicKeyProvider
@_spi(AdyenInternal) public typealias CompletionHandler = (Swift.Result<Swift.String, any Swift.Error>) -> Swift.Void
@_spi(AdyenInternal) public func fetch(
    completion: Self.CompletionHandler
) -> Swift.Void
@_spi(AdyenInternal) public final class PublicKeyProvider : AnyPublicKeyProvider
@_spi(AdyenInternal) public func init(
    apiContext: Adyen.APIContext
) -> Adyen.PublicKeyProvider
@_spi(AdyenInternal) public func fetch(
    completion: Adyen.PublicKeyProvider.CompletionHandler
) -> Swift.Void
@_spi(AdyenInternal) public enum Error : Equatable, Error, Hashable, LocalizedError, Sendable
@_spi(AdyenInternal) public case invalidClientKey
@_spi(AdyenInternal) public var errorDescription: Swift.String? { get }
@_spi(AdyenInternal) public static func __derived_enum_equals(
    _: Adyen.PublicKeyProvider.Error,
    _: Adyen.PublicKeyProvider.Error
) -> Swift.Bool
@_spi(AdyenInternal) public func hash(
    into: Swift.Hasher
) -> Swift.Void
@_spi(AdyenInternal) public var hashValue: Swift.Int { get }
@_spi(AdyenInternal) public final class Throttler
@_spi(AdyenInternal) public func init(
    minimumDelay: Foundation.TimeInterval,
    queue: Dispatch.DispatchQueue = $DEFAULT_ARG
) -> Adyen.Throttler
@_spi(AdyenInternal) public func throttle(
    _: () -> Swift.Void
) -> Swift.Void
@_spi(AdyenInternal) public enum ViewIdentifierBuilder
@_spi(AdyenInternal) public static func build(
    scopeInstance: Any,
    postfix: Swift.String
) -> Swift.String
@_spi(AdyenInternal) public enum AddressAnalyticsValidationError : AnalyticsValidationError, Equatable, Error, Hashable, LocalizedError, Sendable, ValidationError
@_spi(AdyenInternal) public case postalCodeEmpty
@_spi(AdyenInternal) public case postalCodePartial
@_spi(AdyenInternal) public var analyticsErrorCode: Swift.Int { get }
@_spi(AdyenInternal) public var analyticsErrorMessage: Swift.String { get }
@_spi(AdyenInternal) public static func __derived_enum_equals(
    _: Adyen.AddressAnalyticsValidationError,
    _: Adyen.AddressAnalyticsValidationError
) -> Swift.Bool
@_spi(AdyenInternal) public func hash(
    into: Swift.Hasher
) -> Swift.Void
@_spi(AdyenInternal) public var hashValue: Swift.Int { get }
@_spi(AdyenInternal) public struct BalanceChecker
@_spi(AdyenInternal) public enum Error : Equatable, Error, Hashable, LocalizedError, Sendable
@_spi(AdyenInternal) public case unexpectedCurrencyCode
@_spi(AdyenInternal) public case zeroBalance
@_spi(AdyenInternal) public var errorDescription: Swift.String? { get }
@_spi(AdyenInternal) public static func __derived_enum_equals(
    _: Adyen.BalanceChecker.Error,
    _: Adyen.BalanceChecker.Error
) -> Swift.Bool
@_spi(AdyenInternal) public func hash(
    into: Swift.Hasher
) -> Swift.Void
@_spi(AdyenInternal) public var hashValue: Swift.Int { get }
@_spi(AdyenInternal) public struct Result
@_spi(AdyenInternal) public let isBalanceEnough: Swift.Bool { get }
@_spi(AdyenInternal) public let remainingBalanceAmount: Adyen.Amount { get }
@_spi(AdyenInternal) public let amountToPay: Adyen.Amount { get }
@_spi(AdyenInternal) public func init(

) -> Adyen.BalanceChecker
@_spi(AdyenInternal) public func check(
    balance: Adyen.Balance,
    isEnoughToPay: Adyen.Amount
) throws -> Adyen.BalanceChecker.Result
@_spi(AdyenInternal) public final class BrazilSocialSecurityNumberValidator : CombinedValidator, StatusValidator, Validator
@_spi(AdyenInternal) public let firstValidator: any Adyen.Validator { get }
@_spi(AdyenInternal) public let secondValidator: any Adyen.Validator { get }
@_spi(AdyenInternal) public func init(

) -> Adyen.BrazilSocialSecurityNumberValidator
@_spi(AdyenInternal) public func validate(
    _: Swift.String
) -> Adyen.ValidationStatus
@_spi(AdyenInternal) public func isValid(
    _: Swift.String
) -> Swift.Bool
public enum ClientKeyError : Equatable, Error, Hashable, LocalizedError, Sendable
public case invalidClientKey
public var errorDescription: Swift.String? { get }
public static func __derived_enum_equals(
    _: Adyen.ClientKeyError,
    _: Adyen.ClientKeyError
) -> Swift.Bool
public func hash(
    into: Swift.Hasher
) -> Swift.Void
public var hashValue: Swift.Int { get }
@_spi(AdyenInternal) public final class ClientKeyValidator : Validator
@_spi(AdyenInternal) public func init(

) -> Adyen.ClientKeyValidator
@_spi(AdyenInternal) public func init(
    regularExpression: Swift.String,
    minimumLength: Swift.Int? = $DEFAULT_ARG,
    maximumLength: Swift.Int? = $DEFAULT_ARG
) -> Adyen.ClientKeyValidator
@_spi(AdyenInternal) public struct CountryCodeValidator : Validator
@_spi(AdyenInternal) public func init(

) -> Adyen.CountryCodeValidator
@_spi(AdyenInternal) public func isValid(
    _: Swift.String
) -> Swift.Bool
@_spi(AdyenInternal) public func maximumLength(
    for: Swift.String
) -> Swift.Int
@_spi(AdyenInternal) public struct CurrencyCodeValidator : Validator
@_spi(AdyenInternal) public func init(

) -> Adyen.CurrencyCodeValidator
@_spi(AdyenInternal) public func isValid(
    _: Swift.String
) -> Swift.Bool
@_spi(AdyenInternal) public func maximumLength(
    for: Swift.String
) -> Swift.Int
@_spi(AdyenInternal) public final class DateValidator : Validator
@_spi(AdyenInternal) public func init(
    format: Adyen.DateValidator.Format
) -> Adyen.DateValidator
@_spi(AdyenInternal) public func isValid(
    _: Swift.String
) -> Swift.Bool
@_spi(AdyenInternal) public func maximumLength(
    for: Swift.String
) -> Swift.Int
@_spi(AdyenInternal) public enum Format : Equatable, Hashable, RawRepresentable
@_spi(AdyenInternal) public case kcpFormat
@_spi(AdyenInternal) public func init(
    rawValue: Swift.String
) -> Adyen.DateValidator.Format?
@_spi(AdyenInternal) public typealias RawValue = Swift.String
@_spi(AdyenInternal) public var rawValue: Swift.String { get }
@_spi(AdyenInternal) public class EmailValidator : Validator
@_spi(AdyenInternal) public func init(

) -> Adyen.EmailValidator
@_spi(AdyenInternal) public func init(
    regularExpression: Swift.String,
    minimumLength: Swift.Int? = $DEFAULT_ARG,
    maximumLength: Swift.Int? = $DEFAULT_ARG
) -> Adyen.EmailValidator
@_spi(AdyenInternal) public final class IBANValidator : Validator
@_spi(AdyenInternal) public func init(

) -> Adyen.IBANValidator
@_spi(AdyenInternal) public func isValid(
    _: Swift.String
) -> Swift.Bool
@_spi(AdyenInternal) public func maximumLength(
    for: Swift.String
) -> Swift.Int
@_spi(AdyenInternal) public class LengthValidator : Validator
@_spi(AdyenInternal) public var minimumLength: Swift.Int? { get set }
@_spi(AdyenInternal) public var maximumLength: Swift.Int? { get set }
@_spi(AdyenInternal) public func init(
    minimumLength: Swift.Int? = $DEFAULT_ARG,
    maximumLength: Swift.Int? = $DEFAULT_ARG
) -> Adyen.LengthValidator
@_spi(AdyenInternal) public func init(
    exactLength: Swift.Int
) -> Adyen.LengthValidator
@_spi(AdyenInternal) public func isValid(
    _: Swift.String
) -> Swift.Bool
@_spi(AdyenInternal) public func maximumLength(
    for: Swift.String
) -> Swift.Int
@_spi(AdyenInternal) public class NumericStringValidator : Validator
@_spi(AdyenInternal) public func isValid(
    _: Swift.String
) -> Swift.Bool
@_spi(AdyenInternal) public func init(
    minimumLength: Swift.Int? = $DEFAULT_ARG,
    maximumLength: Swift.Int? = $DEFAULT_ARG
) -> Adyen.NumericStringValidator
@_spi(AdyenInternal) public func init(
    exactLength: Swift.Int
) -> Adyen.NumericStringValidator
@_spi(AdyenInternal) public final class PhoneNumberValidator : Validator
@_spi(AdyenInternal) public func init(

) -> Adyen.PhoneNumberValidator
@_spi(AdyenInternal) public func init(
    regularExpression: Swift.String,
    minimumLength: Swift.Int? = $DEFAULT_ARG,
    maximumLength: Swift.Int? = $DEFAULT_ARG
) -> Adyen.PhoneNumberValidator
@_spi(AdyenInternal) public final class PostalCodeValidator : StatusValidator, Validator
@_spi(AdyenInternal) public func validate(
    _: Swift.String
) -> Adyen.ValidationStatus
@_spi(AdyenInternal) public func isValid(
    _: Swift.String
) -> Swift.Bool
@_spi(AdyenInternal) public func init(
    minimumLength: Swift.Int? = $DEFAULT_ARG,
    maximumLength: Swift.Int? = $DEFAULT_ARG
) -> Adyen.PostalCodeValidator
@_spi(AdyenInternal) public func init(
    exactLength: Swift.Int
) -> Adyen.PostalCodeValidator
@_spi(AdyenInternal) public class RegularExpressionValidator : Validator
@_spi(AdyenInternal) public func init(
    regularExpression: Swift.String,
    minimumLength: Swift.Int? = $DEFAULT_ARG,
    maximumLength: Swift.Int? = $DEFAULT_ARG
) -> Adyen.RegularExpressionValidator
@_spi(AdyenInternal) public func isValid(
    _: Swift.String
) -> Swift.Bool
@_spi(AdyenInternal) public func maximumLength(
    for: Swift.String
) -> Swift.Int
@_spi(AdyenInternal) public func init(
    minimumLength: Swift.Int? = $DEFAULT_ARG,
    maximumLength: Swift.Int? = $DEFAULT_ARG
) -> Adyen.RegularExpressionValidator
@_spi(AdyenInternal) public func init(
    exactLength: Swift.Int
) -> Adyen.RegularExpressionValidator
@_spi(AdyenInternal) public enum ValidationStatus
@_spi(AdyenInternal) public case valid
@_spi(AdyenInternal) public case invalid(any Adyen.ValidationError)
@_spi(AdyenInternal) public var isValid: Swift.Bool { get }
@_spi(AdyenInternal) public var validationError: (any Adyen.ValidationError)? { get }
@_spi(AdyenInternal) public protocol ValidationError : Error, LocalizedError, Sendable
@_spi(AdyenInternal) public protocol Validator
@_spi(AdyenInternal) public func isValid(
    _: Swift.String
) -> Swift.Bool
@_spi(AdyenInternal) public func maximumLength(
    for: Swift.String
) -> Swift.Int
@_spi(AdyenInternal) public protocol StatusValidator : Validator
@_spi(AdyenInternal) public func validate(
    _: Swift.String
) -> Adyen.ValidationStatus
@_spi(AdyenInternal) public func ||(
    _: any Adyen.Validator,
    _: any Adyen.Validator
) -> any Adyen.Validator
@_spi(AdyenInternal) public func &&(
    _: any Adyen.Validator,
    _: any Adyen.Validator
) -> any Adyen.Validator
@_spi(AdyenInternal) public protocol CombinedValidator : Validator
@_spi(AdyenInternal) public var firstValidator: any Adyen.Validator { get }
@_spi(AdyenInternal) public var secondValidator: any Adyen.Validator { get }
@_spi(AdyenInternal) public func maximumLength(
    for: Swift.String
) -> Swift.Int
@_spi(AdyenInternal) public final class ORValidator : CombinedValidator, Validator
@_spi(AdyenInternal) public let firstValidator: any Adyen.Validator { get }
@_spi(AdyenInternal) public let secondValidator: any Adyen.Validator { get }
@_spi(AdyenInternal) public func init(
    firstValidator: any Adyen.Validator,
    secondValidator: any Adyen.Validator
) -> Adyen.ORValidator
@_spi(AdyenInternal) public func isValid(
    _: Swift.String
) -> Swift.Bool
@_spi(AdyenInternal) public final class ANDValidator : CombinedValidator, Validator
@_spi(AdyenInternal) public let firstValidator: any Adyen.Validator { get }
@_spi(AdyenInternal) public let secondValidator: any Adyen.Validator { get }
@_spi(AdyenInternal) public func init(
    firstValidator: any Adyen.Validator,
    secondValidator: any Adyen.Validator
) -> Adyen.ANDValidator
@_spi(AdyenInternal) public func isValid(
    _: Swift.String
) -> Swift.Bool
public class Bundle : AdyenCompatible, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSObjectProtocol, Sendable
@_spi(AdyenInternal) public typealias AdyenBase = Foundation.Bundle
@_spi(AdyenInternal) public enum Adyen
@_spi(AdyenInternal) public static var localizedEditCopy: Swift.String { get }
@_spi(AdyenInternal) public static var localizedDoneCopy: Swift.String { get }
@_spi(AdyenInternal) public static let coreInternalResources: Foundation.Bundle { get }
public class UIViewController : AdyenCompatible, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSExtensionRequestHandling, NSObjectProtocol, Sendable, UIActivityItemsConfigurationProviding, UIAppearanceContainer, UIContentContainer, UIFocusEnvironment, UIPasteConfigurationSupporting, UIResponderStandardEditActions, UIStateRestoring, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring, ViewControllerPresenter
@_spi(AdyenInternal) public func presentViewController(
    _: UIKit.UIViewController,
    animated: Swift.Bool
) -> Swift.Void
@_spi(AdyenInternal) public func dismissViewController(
    animated: Swift.Bool
) -> Swift.Void
public class UIImageView : AdyenCompatible, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityContentSizeCategoryImageAdjusting, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) @discardableResult public func load(
    url: Foundation.URL,
    using: any Adyen.ImageLoading,
    placeholder: UIKit.UIImage? = $DEFAULT_ARG
) -> any Adyen.AdyenCancellable
@_spi(AdyenInternal) public func init(
    style: Adyen.ImageStyle
) -> UIKit.UIImageView
public class NSLayoutConstraint : AdyenCompatible, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSObjectProtocol
@_spi(AdyenInternal) public typealias AdyenBase = UIKit.NSLayoutConstraint
public enum NSTextAlignment : AdyenCompatible, Equatable, Hashable, RawRepresentable, Sendable
@_spi(AdyenInternal) public typealias AdyenBase = UIKit.NSTextAlignment
public enum Result : Equatable, Hashable, Sendable
@_spi(AdyenInternal) public func handle(
    success: (Success) -> Swift.Void,
    failure: (Failure) -> Swift.Void
) -> Swift.Void
public struct String : AdyenCompatible, BidirectionalCollection, CVarArg, CodingKeyRepresentable, Collection, Comparable, CustomDebugStringConvertible, CustomReflectable, CustomStringConvertible, Decodable, Encodable, Equatable, ExpressibleByExtendedGraphemeClusterLiteral, ExpressibleByStringInterpolation, ExpressibleByStringLiteral, ExpressibleByUnicodeScalarLiteral, Hashable, LosslessStringConvertible, MirrorPath, RangeReplaceableCollection, Sendable, Sequence, StringProtocol, TextOutputStream, TextOutputStreamable, Transferable
@_spi(AdyenInternal) public enum Adyen
@_spi(AdyenInternal) public static let securedString: Swift.String { get }
@_spi(AdyenInternal) public typealias AdyenBase = Swift.String
public enum Optional : AdyenCompatible, Commands, CustomDebugStringConvertible, CustomReflectable, CustomizableToolbarContent, Decodable, DecodableWithConfiguration, Encodable, EncodableWithConfiguration, Equatable, ExpressibleByNilLiteral, Gesture, Hashable, Sendable, TableColumnContent, TableRowContent, ToolbarContent, View
@_spi(AdyenInternal) public typealias AdyenBase = Wrapped?
public struct Double : AdditiveArithmetic, AdyenCompatible, Animatable, BinaryFloatingPoint, CVarArg, Comparable, CustomDebugStringConvertible, CustomReflectable, CustomStringConvertible, Decodable, Encodable, Equatable, ExpressibleByFloatLiteral, ExpressibleByIntegerLiteral, FloatingPoint, Hashable, LosslessStringConvertible, Numeric, SIMDScalar, Sendable, SignedNumeric, Strideable, TextOutputStreamable, VectorArithmetic
@_spi(AdyenInternal) public typealias AdyenBase = Swift.Double
public class UIButton : AdyenCompatible, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityContentSizeCategoryImageAdjusting, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UIContextMenuInteractionDelegate, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UISpringLoadedInteractionSupporting, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public func init(
    style: Adyen.ButtonStyle
) -> UIKit.UIButton
public class UIColor : CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSCopying, NSItemProviderReading, NSItemProviderWriting, NSObjectProtocol, NSSecureCoding, Sendable
public enum Adyen
public static var dimmBackground: UIKit.UIColor { get }
public static var componentBackground: UIKit.UIColor { get }
public static var secondaryComponentBackground: UIKit.UIColor { get }
public static var componentLabel: UIKit.UIColor { get }
public static var componentSecondaryLabel: UIKit.UIColor { get }
public static var componentTertiaryLabel: UIKit.UIColor { get }
public static var componentQuaternaryLabel: UIKit.UIColor { get }
public static var componentPlaceholderText: UIKit.UIColor { get }
public static var componentSeparator: UIKit.UIColor { get }
public static var componentLoadingMessageColor: UIKit.UIColor { get }
public static var paidSectionFooterTitleColor: UIKit.UIColor { get }
public static var paidSectionFooterTitleBackgroundColor: UIKit.UIColor { get }
public static let defaultBlue: UIKit.UIColor { get }
public static let defaultRed: UIKit.UIColor { get }
public static let errorRed: UIKit.UIColor { get }
public static let lightGray: UIKit.UIColor { get }
public static let green40: UIKit.UIColor { get }
public class UIFont : AdyenCompatible, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSCopying, NSObjectProtocol, NSSecureCoding, Sendable
@_spi(AdyenInternal) public typealias AdyenBase = UIKit.UIFont
public class UILabel : AdyenCompatible, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UIContentSizeCategoryAdjusting, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UILetterformAwareAdjusting, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public func init(
    style: Adyen.TextStyle
) -> UIKit.UILabel
public class UIProgressView : AdyenCompatible, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public func init(
    style: Adyen.ProgressViewStyle
) -> UIKit.UIProgressView
public class UIView : AdyenCompatible, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public func accessibilityMarkAsSelected(
    _: Swift.Bool
) -> Swift.Void
public class UILayoutGuide : CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, UIPopoverPresentationControllerSourceItem
public class UIResponder : AdyenCompatible, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSObjectProtocol, Sendable, UIActivityItemsConfigurationProviding, UIPasteConfigurationSupporting, UIResponderStandardEditActions, UIUserActivityRestoring
@_spi(AdyenInternal) public typealias AdyenBase = UIKit.UIResponder
public struct URL : AdyenCompatible, CustomDebugStringConvertible, CustomStringConvertible, Decodable, Encodable, Equatable, Hashable, ReferenceConvertible, Sendable, Transferable
@_spi(AdyenInternal) public typealias AdyenBase = Foundation.URL
public class UISearchBar : AdyenCompatible, CALayerDelegate, CVarArg, CustomDebugStringConvertible, CustomStringConvertible, Equatable, Hashable, NSCoding, NSObjectProtocol, Sendable, UIAccessibilityIdentification, UIActivityItemsConfigurationProviding, UIAppearance, UIAppearanceContainer, UIBarPositioning, UICoordinateSpace, UIDynamicItem, UIFocusEnvironment, UIFocusItem, UIFocusItemContainer, UILargeContentViewerItem, UILookToDictateCapable, UIPasteConfigurationSupporting, UIPopoverPresentationControllerSourceItem, UIResponderStandardEditActions, UITextInputTraits, UITraitChangeObservable, UITraitEnvironment, UIUserActivityRestoring
@_spi(AdyenInternal) public static func prominent(
    placeholder: Swift.String?,
    backgroundColor: UIKit.UIColor,
    delegate: any UIKit.UISearchBarDelegate
) -> UIKit.UISearchBar
