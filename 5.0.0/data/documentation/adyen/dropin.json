{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Presenting-the-Drop-in","level":3,"type":"heading","text":"Presenting the Drop-in"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Drop-in requires the response of the "},{"type":"codeVoice","code":"\/paymentMethods"},{"type":"text","text":" endpoint to be initialized. To pass the response to Drop-in, decode the response to the "},{"type":"codeVoice","code":"PaymentMethods"},{"type":"text","text":" structure:"}]},{"type":"codeListing","syntax":"swift","code":["let paymentMethods = try JSONDecoder().decode(PaymentMethods.self, from: response)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"All Components need an "},{"type":"codeVoice","code":"APIContext"},{"type":"text","text":". An instance of "},{"type":"codeVoice","code":"APIContext"},{"type":"text","text":" wraps your client key and an environment."},{"type":"text","text":" "},{"type":"text","text":"Please read more "},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.adyen.com\/development-resources\/client-side-authentication"},{"type":"text","text":" about the client key and how to get."},{"type":"text","text":" "},{"type":"text","text":"Use "},{"type":"strong","inlineContent":[{"type":"text","text":"Environment.test"}]},{"type":"text","text":" for environment. When you’re ready to accept live payments, change the value to one of our "},{"type":"reference","isActive":true,"identifier":"https:\/\/adyen.github.io\/adyen-ios\/Docs\/Structs\/Environment.html"}]},{"type":"codeListing","syntax":"swift","code":["let apiContext = APIContext(clientKey: clientKey, environment: Environment.test)","let configuration = DropInComponent.Configuration(apiContext: apiContext)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Some payment methods need additional configuration. For example "},{"type":"codeVoice","code":"ApplePayComponent"},{"type":"text","text":". These payment method specific configuration parameters can be set in an instance of "},{"type":"codeVoice","code":"DropInComponent.Configuration"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["let summaryItems = [","                      PKPaymentSummaryItem(label: \"Item A\", amount: 75, type: .final),","                      PKPaymentSummaryItem(label: \"Item B\", amount: 25, type: .final),","                      PKPaymentSummaryItem(label: \"Total\", amount: 100, type: .final)","                   ]","","let configuration = DropInComponent.Configuration(apiContext: apiContext)","configuration.payment = payment","configuration.applePay = .init(summaryItems: summaryItems,","                               merchantIdentifier: \"merchant.com.adyen.MY_MERCHANT_ID\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Also for voucher payment methods like Doku variants, in order for the "},{"type":"codeVoice","code":"DokuComponent"},{"type":"text","text":" to enable the shopper to save the voucher, access to the shopper photos is requested, so a suitable text need to be added to key  "},{"type":"codeVoice","code":"NSPhotoLibraryAddUsageDescription"},{"type":"text","text":" in the application Info.plist."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"After serializing the payment methods and creating the configuration, the Drop-in is ready to be initialized. Assign a "},{"type":"codeVoice","code":"delegate"},{"type":"text","text":" and use the "},{"type":"codeVoice","code":"viewController"},{"type":"text","text":" property to present the Drop-in on the screen:"}]},{"type":"codeListing","syntax":"swift","code":["let dropInComponent = DropInComponent(paymentMethods: paymentMethods, configuration: configuration)","dropInComponent.delegate = self","present(dropInComponent.viewController, animated: true)"]},{"anchor":"Implementing-DropInComponentDelegate","level":4,"type":"heading","text":"Implementing DropInComponentDelegate"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To handle the results of the Drop-in, the following methods of "},{"type":"codeVoice","code":"DropInComponentDelegate"},{"type":"text","text":" should be implemented:"}]},{"type":"codeListing","syntax":"swift","code":["func didSubmit(_ data: PaymentComponentData, for paymentMethod: PaymentMethod, from component: DropInComponent)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is invoked when the customer has selected a payment method and entered its payment details. The payment details can be read from "},{"type":"codeVoice","code":"data.paymentMethod"},{"type":"text","text":" and can be submitted as-is to "},{"type":"codeVoice","code":"\/payments"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["func didProvide(_ data: ActionComponentData, from component: DropInComponent)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is invoked when additional details are provided by the Drop-in after the first call to "},{"type":"codeVoice","code":"\/payments"},{"type":"text","text":". This happens, for example, during the 3D Secure 2 authentication flow or any redirect flow. The additional details can be retrieved from "},{"type":"codeVoice","code":"data.details"},{"type":"text","text":" and can be submitted to "},{"type":"codeVoice","code":"\/payments\/details"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["func didFail(with error: Error, from component: DropInComponent)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is invoked when an error occurred during the use of the Drop-in. Dismiss the Drop-in’s view controller and display an error message."}]},{"type":"codeListing","syntax":"swift","code":["func didComplete(from component: DropInComponent)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method is invoked when the action component finishes, without any further steps needed by the application, for example in case of voucher payment methods. The application just needs to dismiss the "},{"type":"codeVoice","code":"DropInComponent"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["func didCancel(component: PaymentComponent, from dropInComponent: DropInComponent)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This optional method is invoked when user closes a payment component managed by Drop-in."}]},{"type":"codeListing","syntax":"swift","code":["func didOpenExternalApplication(component: DropInComponent)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This optional method is invoked after a redirect to an external application has occurred."}]},{"anchor":"Handling-an-action","level":3,"type":"heading","text":"Handling an action"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When "},{"type":"codeVoice","code":"\/payments"},{"type":"text","text":" or "},{"type":"codeVoice","code":"\/payments\/details"},{"type":"text","text":" responds with a non-final result and an "},{"type":"codeVoice","code":"action"},{"type":"text","text":", you can use one of the following techniques."}]},{"anchor":"Using-Drop-in","level":4,"type":"heading","text":"Using Drop-in"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In case of Drop-in integration you must use build-in action handler on the current instance of "},{"type":"codeVoice","code":"DropInComponent"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["let action = try JSONDecoder().decode(Action.self, from: actionData)","dropInComponent.handle(action)"]},{"anchor":"Using-components","level":4,"type":"heading","text":"Using components"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In case of using individual components - not Drop-in -, create and persist an instance of "},{"type":"codeVoice","code":"AdyenActionComponent"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["lazy var actionComponent: AdyenActionComponent = {","    let handler = AdyenActionComponent(apiContext: apiContext)","    handler.delegate = self","    handler.presentationDelegate = self","    return handler","}()"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Than use it to handle the action:"}]},{"type":"codeListing","syntax":"swift","code":["let action = try JSONDecoder().decode(Action.self, from: actionData)","actionComponent.handle(action)"]},{"anchor":"Receiving-redirect","level":4,"type":"heading","text":"Receiving redirect"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In case the customer is redirected to an external URL or App, make sure to let the "},{"type":"codeVoice","code":"RedirectComponent"},{"type":"text","text":" know when the user returns to your app. Do this by implementing the following in your "},{"type":"codeVoice","code":"UIApplicationDelegate"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["func application(_ app: UIApplication, open url: URL, options: [UIApplicationOpenURLOptionsKey: Any] = [:]) -> Bool {","    RedirectComponent.applicationDidOpen(from: url)","","    return true","}"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/adyen\/dropin"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Adyen\/documentation\/Adyen\/DropIn","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The Drop-in handles the presentation of available payment methods and the subsequent entry of a customer’s payment details. It is initialized with the response of "},{"type":"codeVoice","code":"\/paymentMethods"},{"type":"text","text":", and provides everything you need to make an API call to "},{"type":"codeVoice","code":"\/payments"},{"type":"text","text":" and "},{"type":"codeVoice","code":"\/payments\/details"},{"type":"text","text":"."}],"kind":"article","metadata":{"roleHeading":"Article","title":"DropIn","role":"article","modules":[{"name":"Adyen"}]},"hierarchy":{"paths":[["doc:\/\/Adyen\/documentation\/Adyen"]]},"references":{"https://adyen.github.io/adyen-ios/Docs/Structs/Environment.html":{"title":"live environments","titleInlineContent":[{"type":"text","text":"live environments"}],"type":"link","identifier":"https:\/\/adyen.github.io\/adyen-ios\/Docs\/Structs\/Environment.html","url":"https:\/\/adyen.github.io\/adyen-ios\/Docs\/Structs\/Environment.html"},"doc://Adyen/documentation/Adyen":{"role":"collection","title":"Adyen","abstract":[{"type":"text","text":"Adyen Components for iOS allows you to accept in-app payments by providing you with the building blocks you need to create a checkout experience."}],"identifier":"doc:\/\/Adyen\/documentation\/Adyen","kind":"symbol","type":"topic","url":"\/documentation\/adyen"},"https://docs.adyen.com/development-resources/client-side-authentication":{"title":"here","titleInlineContent":[{"type":"text","text":"here"}],"type":"link","identifier":"https:\/\/docs.adyen.com\/development-resources\/client-side-authentication","url":"https:\/\/docs.adyen.com\/development-resources\/client-side-authentication"}}}