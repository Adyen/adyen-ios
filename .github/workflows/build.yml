name: Build and Test

on:
  push:
    branches:
    - master
    - develop
    - release-*

jobs:

  tests:
    runs-on: macos-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        include:
        - destination: 'name=iPhone 11 Pro'
          scheme: AdyenUIHost
        - destination: 'name=iPhone-6,OS=11.4'
          scheme: AdyenUIHost
        - destination: 'name=iPhone-X,OS=12.4'
          scheme: AdyenUIKitTests
    steps:
    - uses: actions/checkout@v2
    - uses: n1hility/cancel-previous-runs@v2
      with:
        token: ${{ secrets.MANUAL_ACTION_TOKEN }}

    - name: Prepare custom devices
      run: |
        sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes

    - name: Prepare iOS 12.4 simulator
      if: contains(matrix.destination, 'OS=12.4')
      run: |
        xcversion simulators --install='iOS 12.4'
        xcrun simctl create iPhone-X "iPhone X" "com.apple.CoreSimulator.SimRuntime.iOS-12-4"
        xcrun simctl list devices 12.4

    - name: Prepare iOS 11.4 simulator
      if: contains(matrix.destination, 'OS=11.4')
      run: |
        xcversion simulators --install='iOS 11.4'
        xcrun simctl create iPhone-6 "iPhone 6" "com.apple.CoreSimulator.SimRuntime.iOS-11-4"
        xcrun simctl list devices 11.4

    - name: Build and test
      run: |
        xcodebuild build test -project ${project} -scheme "${scheme}" -destination "${destination}" ${params} | xcpretty && exit ${PIPESTATUS[0]}
      env:
        project: 'Adyen.xcodeproj'
        params: '-derivedDataPath ./DerivedData -enableCodeCoverage YES'
        scheme: ${{ matrix.scheme }}
        destination: ${{ matrix.destination }}

  sonar:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '11'
        
    - name: Install Dependencies
      run: |
        brew install sonar-scanner
        gem install slather
         
    - name: Build and test
      run: |
        xcodebuild build test -project ${project} -scheme "${scheme}" -destination "${destination}" ${params} | xcpretty && exit ${PIPESTATUS[0]}
      env:
        project: 'Adyen.xcodeproj'
        params: '-derivedDataPath ./DerivedData -enableCodeCoverage YES'
        scheme: AdyenUIHost
        destination: 'name=iPhone 11'

    - name: Slather
      run: |
        slather coverage --sonarqube-xml ${params} ${project}
        slather coverage --cobertura-xml ${params} ${project}
      env:
        project: 'Adyen.xcodeproj'
        params: '
        --build-directory ./DerivedData
        --output-directory ./reports
        --scheme AdyenUIHost
        --binary-basename Adyen
        --binary-basename AdyenCard
        --binary-basename AdyenDropIn
        --binary-basename AdyenWeChatPay
        --binary-basename AdyenComponents
        --binary-basename AdyenEncryption
        --binary-basename AdyenActions
        --binary-basename AdyenSwiftUI'
        
    - name: SwiftLint
      run: |
        fastlane run swiftlint output_file:"./reports/swiftlint.json" reporter:"json" ignore_exit_status:"true"

    - name: Run Sonar
      run: |
        git fetch --unshallow --no-tags
        sonar-scanner -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Code coverage
      if: github.ref == 'refs/heads/develop'
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./reports/cobertura.xml
