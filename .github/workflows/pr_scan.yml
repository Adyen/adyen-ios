name: Scan PR

on: [ pull_request ]

jobs:
  
  build:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Install Dependencies
      run: |
        brew install sonar-scanner
        brew install swiftlint
        gem install slather
        
    - name: Check Dependencies
      uses: actions/cache@v1
      id: carthage-cache
      with:
        path: Carthage
        key: ${{ runner.os }}-carthage-${{ hashFiles('**/Cartfile.resolved') }}
      
    - name: Install Dependencies
      if: steps.carthage-cache.outputs.cache-hit != 'true'
      run: |
        carthage bootstrap --platform iOS --cache-builds
      
    - name: Build and test
      run: |
        xcodebuild -project Adyen.xcodeproj -derivedDataPath ./DerivedData -enableCodeCoverage YES clean build test -destination "name=iPhone 11"
 #       fastlane scan --scheme AdyenUIHost --code_coverage true --derived_data_path ./DerivedData --output_directory ./reports
        
    - name: Slather
      run: |
        slather coverage --sonarqube-xml --build-directory ./DerivedData --output-directory ./reports --scheme AdyenUIHost Adyen.xcodeproj
        ls -ln reports
        cat ./reports/sonarqube-generic-coverage.xml
         
    - name: SwiftLint
      run: |
        fastlane run swiftlint output_file:"./reports/swiftlint.txt" ignore_exit_status:"true"
        
    - name: Run Sonar
      run: |
        sonar-scanner -X -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
